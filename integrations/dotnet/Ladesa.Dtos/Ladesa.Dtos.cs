// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do one of these:
//
//    using Ladesa.Dtos;
//
//    var paginatedSortBy = PaginatedSortBy.FromJson(jsonString);
//    var paginatedResultMetaFilter = PaginatedResultMetaFilter.FromJson(jsonString);
//    var paginatedResultMeta = PaginatedResultMeta.FromJson(jsonString);
//    var paginatedResultLinks = PaginatedResultLinks.FromJson(jsonString);
//    var paginatedBaseInput = PaginatedBaseInput.FromJson(jsonString);
//    var paginatedInput = PaginatedInput.FromJson(jsonString);
//    var search = Search.FromJson(jsonString);
//    var arquivo = Arquivo.FromJson(jsonString);
//    var arquivoFindOneInput = ArquivoFindOneInput.FromJson(jsonString);
//    var arquivoFindOneResult = ArquivoFindOneResult.FromJson(jsonString);
//    var imagem = Imagem.FromJson(jsonString);
//    var imagemFindOneInput = ImagemFindOneInput.FromJson(jsonString);
//    var imagemFindOneFromImagemArquivoResult = ImagemFindOneFromImagemArquivoResult.FromJson(jsonString);
//    var imagemFindOneResult = ImagemFindOneResult.FromJson(jsonString);
//    var imagemArquivo = ImagemArquivo.FromJson(jsonString);
//    var imagemArquivoFindOneInput = ImagemArquivoFindOneInput.FromJson(jsonString);
//    var imagemArquivoFindOneFromImagemResult = ImagemArquivoFindOneFromImagemResult.FromJson(jsonString);
//    var imagemArquivoFindOneResult = ImagemArquivoFindOneResult.FromJson(jsonString);
//    var authLoginInput = AuthLoginInput.FromJson(jsonString);
//    var authLoginCombinedInput = AuthLoginCombinedInput.FromJson(jsonString);
//    var authLoginCombinedSuccessOutput = AuthLoginCombinedSuccessOutput.FromJson(jsonString);
//    var authRefreshInput = AuthRefreshInput.FromJson(jsonString);
//    var authRefreshCombinedInput = AuthRefreshCombinedInput.FromJson(jsonString);
//    var authRefreshCombinedSuccessOutput = AuthRefreshCombinedSuccessOutput.FromJson(jsonString);
//    var authWhoAmIResult = AuthWhoAmIResult.FromJson(jsonString);
//    var authWhoAmICombinedInput = AuthWhoAmICombinedInput.FromJson(jsonString);
//    var authWhoAmICombinedSuccessOutput = AuthWhoAmICombinedSuccessOutput.FromJson(jsonString);
//    var authSessionCredentials = AuthSessionCredentials.FromJson(jsonString);
//    var authSetInitialPasswordInput = AuthSetInitialPasswordInput.FromJson(jsonString);
//    var authSetInitialPasswordCombinedInput = AuthSetInitialPasswordCombinedInput.FromJson(jsonString);
//    var authSetInitialPasswordCombinedSuccessOutput = AuthSetInitialPasswordCombinedSuccessOutput.FromJson(jsonString);
//    var usuario = Usuario.FromJson(jsonString);
//    var usuarioFindAllResult = UsuarioFindAllResult.FromJson(jsonString);
//    var usuarioFindOneInput = UsuarioFindOneInput.FromJson(jsonString);
//    var usuarioFindOneResult = UsuarioFindOneResult.FromJson(jsonString);
//    var usuarioInputCreate = UsuarioInputCreate.FromJson(jsonString);
//    var usuarioInputUpdate = UsuarioInputUpdate.FromJson(jsonString);
//    var vinculoFindAllResult = VinculoFindAllResult.FromJson(jsonString);
//    var vinculo = Vinculo.FromJson(jsonString);
//    var vinculoFindOneInput = VinculoFindOneInput.FromJson(jsonString);
//    var vinculoFindOneResult = VinculoFindOneResult.FromJson(jsonString);
//    var vinculoUpdateInput = VinculoUpdateInput.FromJson(jsonString);
//    var ambiente = Ambiente.FromJson(jsonString);
//    var ambienteFindOneInput = AmbienteFindOneInput.FromJson(jsonString);
//    var ambienteFindOneResult = AmbienteFindOneResult.FromJson(jsonString);
//    var ambienteInputCreate = AmbienteInputCreate.FromJson(jsonString);
//    var ambienteInputUpdate = AmbienteInputUpdate.FromJson(jsonString);
//    var ambienteFindAllResult = AmbienteFindAllResult.FromJson(jsonString);
//    var bloco = Bloco.FromJson(jsonString);
//    var blocoFindOneInput = BlocoFindOneInput.FromJson(jsonString);
//    var blocoFindOneResult = BlocoFindOneResult.FromJson(jsonString);
//    var blocoInputCreate = BlocoInputCreate.FromJson(jsonString);
//    var blocoInputUpdate = BlocoInputUpdate.FromJson(jsonString);
//    var blocoFindAllResult = BlocoFindAllResult.FromJson(jsonString);
//    var campus = Campus.FromJson(jsonString);
//    var campusFindOneInput = CampusFindOneInput.FromJson(jsonString);
//    var campusFindOneResult = CampusFindOneResult.FromJson(jsonString);
//    var campusInputCreate = CampusInputCreate.FromJson(jsonString);
//    var campusInputUpdate = CampusInputUpdate.FromJson(jsonString);
//    var campusFindAllResult = CampusFindAllResult.FromJson(jsonString);
//    var cidade = Cidade.FromJson(jsonString);
//    var cidadeFindOneInput = CidadeFindOneInput.FromJson(jsonString);
//    var cidadeFindOneResult = CidadeFindOneResult.FromJson(jsonString);
//    var cidadeFindAllResult = CidadeFindAllResult.FromJson(jsonString);
//    var endereco = Endereco.FromJson(jsonString);
//    var enderecoFindOneInput = EnderecoFindOneInput.FromJson(jsonString);
//    var enderecoFindOneResult = EnderecoFindOneResult.FromJson(jsonString);
//    var enderecoInput = EnderecoInput.FromJson(jsonString);
//    var estado = Estado.FromJson(jsonString);
//    var estadoFindOneInput = EstadoFindOneInput.FromJson(jsonString);
//    var estadoFindOneResult = EstadoFindOneResult.FromJson(jsonString);
//    var estadoFindAllResult = EstadoFindAllResult.FromJson(jsonString);
//    var reserva = Reserva.FromJson(jsonString);
//    var reservaFindOneInput = ReservaFindOneInput.FromJson(jsonString);
//    var reservaFindOneResult = ReservaFindOneResult.FromJson(jsonString);
//    var reservaInputCreate = ReservaInputCreate.FromJson(jsonString);
//    var reservaInputUpdate = ReservaInputUpdate.FromJson(jsonString);
//    var reservaFindAllResult = ReservaFindAllResult.FromJson(jsonString);
//    var curso = Curso.FromJson(jsonString);
//    var cursoFindOneInput = CursoFindOneInput.FromJson(jsonString);
//    var cursoFindOneResult = CursoFindOneResult.FromJson(jsonString);
//    var cursoInputCreate = CursoInputCreate.FromJson(jsonString);
//    var cursoInputUpdate = CursoInputUpdate.FromJson(jsonString);
//    var cursoFindAllResult = CursoFindAllResult.FromJson(jsonString);
//    var diario = Diario.FromJson(jsonString);
//    var diarioFindOneInput = DiarioFindOneInput.FromJson(jsonString);
//    var diarioFindOneResult = DiarioFindOneResult.FromJson(jsonString);
//    var diarioInputCreate = DiarioInputCreate.FromJson(jsonString);
//    var diarioInputUpdate = DiarioInputUpdate.FromJson(jsonString);
//    var diarioFindAllResult = DiarioFindAllResult.FromJson(jsonString);
//    var diarioProfessor = DiarioProfessor.FromJson(jsonString);
//    var diarioProfessorFindOneInput = DiarioProfessorFindOneInput.FromJson(jsonString);
//    var diarioProfessorFindOneResult = DiarioProfessorFindOneResult.FromJson(jsonString);
//    var diarioProfessorInputCreate = DiarioProfessorInputCreate.FromJson(jsonString);
//    var diarioProfessorInputUpdate = DiarioProfessorInputUpdate.FromJson(jsonString);
//    var diarioProfessorFindAllResult = DiarioProfessorFindAllResult.FromJson(jsonString);
//    var modalidade = Modalidade.FromJson(jsonString);
//    var modalidadeFindOneInput = ModalidadeFindOneInput.FromJson(jsonString);
//    var modalidadeFindOneResult = ModalidadeFindOneResult.FromJson(jsonString);
//    var modalidadeInputCreate = ModalidadeInputCreate.FromJson(jsonString);
//    var modalidadeInputUpdate = ModalidadeInputUpdate.FromJson(jsonString);
//    var modalidadeFindAllResult = ModalidadeFindAllResult.FromJson(jsonString);
//    var disciplina = Disciplina.FromJson(jsonString);
//    var disciplinaFindOneInput = DisciplinaFindOneInput.FromJson(jsonString);
//    var disciplinaFindOneResult = DisciplinaFindOneResult.FromJson(jsonString);
//    var disciplinaInputCreate = DisciplinaInputCreate.FromJson(jsonString);
//    var disciplinaInputUpdate = DisciplinaInputUpdate.FromJson(jsonString);
//    var disciplinaFindAllResult = DisciplinaFindAllResult.FromJson(jsonString);
//    var turma = Turma.FromJson(jsonString);
//    var turmaFindOneInput = TurmaFindOneInput.FromJson(jsonString);
//    var turmaFindOneResult = TurmaFindOneResult.FromJson(jsonString);
//    var turmaInputCreate = TurmaInputCreate.FromJson(jsonString);
//    var turmaInputUpdate = TurmaInputUpdate.FromJson(jsonString);
//    var turmaFindAllResult = TurmaFindAllResult.FromJson(jsonString);
//    var intervaloDeTempo = IntervaloDeTempo.FromJson(jsonString);
//    var intervaloDeTempoFindOneResult = IntervaloDeTempoFindOneResult.FromJson(jsonString);
//    var intervaloDeTempoInput = IntervaloDeTempoInput.FromJson(jsonString);
//    var calendarioLetivo = CalendarioLetivo.FromJson(jsonString);
//    var calendarioLetivoFindOneInput = CalendarioLetivoFindOneInput.FromJson(jsonString);
//    var calendarioLetivoFindOneResult = CalendarioLetivoFindOneResult.FromJson(jsonString);
//    var calendarioLetivoInputCreate = CalendarioLetivoInputCreate.FromJson(jsonString);
//    var calendarioLetivoInputUpdate = CalendarioLetivoInputUpdate.FromJson(jsonString);
//    var calendarioLetivoFindAllResult = CalendarioLetivoFindAllResult.FromJson(jsonString);
//    var diaCalendario = DiaCalendario.FromJson(jsonString);
//    var diaCalendarioFindOneInput = DiaCalendarioFindOneInput.FromJson(jsonString);
//    var diaCalendarioFindOneResult = DiaCalendarioFindOneResult.FromJson(jsonString);
//    var diaCalendarioInputCreate = DiaCalendarioInputCreate.FromJson(jsonString);
//    var diaCalendarioInputUpdate = DiaCalendarioInputUpdate.FromJson(jsonString);
//    var diaCalendarioFindAllResult = DiaCalendarioFindAllResult.FromJson(jsonString);
//    var etapa = Etapa.FromJson(jsonString);
//    var etapaFindOneInput = EtapaFindOneInput.FromJson(jsonString);
//    var etapaFindOneResult = EtapaFindOneResult.FromJson(jsonString);
//    var etapaInputCreate = EtapaInputCreate.FromJson(jsonString);
//    var etapaInputUpdate = EtapaInputUpdate.FromJson(jsonString);
//    var etapaFindAllResult = EtapaFindAllResult.FromJson(jsonString);
//    var aula = Aula.FromJson(jsonString);
//    var aulaFindOneInput = AulaFindOneInput.FromJson(jsonString);
//    var aulaFindOneResult = AulaFindOneResult.FromJson(jsonString);
//    var aulaInputCreate = AulaInputCreate.FromJson(jsonString);
//    var aulaInputUpdate = AulaInputUpdate.FromJson(jsonString);
//    var aulaFindAllResult = AulaFindAllResult.FromJson(jsonString);
//    var evento = Evento.FromJson(jsonString);
//    var eventoFindOneInput = EventoFindOneInput.FromJson(jsonString);
//    var eventoFindOneResult = EventoFindOneResult.FromJson(jsonString);
//    var eventoInputCreate = EventoInputCreate.FromJson(jsonString);
//    var eventoInputUpdate = EventoInputUpdate.FromJson(jsonString);
//    var eventoFindAllResult = EventoFindAllResult.FromJson(jsonString);
//    var turmaDisponibilidade = TurmaDisponibilidade.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneInput = TurmaDisponibilidadeFindOneInput.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneResult = TurmaDisponibilidadeFindOneResult.FromJson(jsonString);
//    var turmaDisponibilidadeInputCreate = TurmaDisponibilidadeInputCreate.FromJson(jsonString);
//    var turmaDisponibilidadeInputUpdate = TurmaDisponibilidadeInputUpdate.FromJson(jsonString);
//    var turmaDisponibilidadeFindAllResult = TurmaDisponibilidadeFindAllResult.FromJson(jsonString);
//    var turmaDisponibilidadeDia = TurmaDisponibilidadeDia.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindOneInput = TurmaDisponibilidadeDiaFindOneInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindOneResult = TurmaDisponibilidadeDiaFindOneResult.FromJson(jsonString);
//    var turmaDisponibilidadeDiaInputCreate = TurmaDisponibilidadeDiaInputCreate.FromJson(jsonString);
//    var turmaDisponibilidadeDiaInputUpdate = TurmaDisponibilidadeDiaInputUpdate.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindAllResult = TurmaDisponibilidadeDiaFindAllResult.FromJson(jsonString);
//    var arquivoGetFileCombinedInput = ArquivoGetFileCombinedInput.FromJson(jsonString);
//    var arquivoGetFileCombinedSuccessOutput = ArquivoGetFileCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioFindByIdCombinedInput = UsuarioFindByIdCombinedInput.FromJson(jsonString);
//    var usuarioFindByIdCombinedSuccessOutput = UsuarioFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioCreateCombinedInput = UsuarioCreateCombinedInput.FromJson(jsonString);
//    var usuarioCreateCombinedSuccessOutput = UsuarioCreateCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioUpdateByIdCombinedInput = UsuarioUpdateByIdCombinedInput.FromJson(jsonString);
//    var usuarioUpdateByIdCombinedSuccessOutput = UsuarioUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioDeleteByIdCombinedInput = UsuarioDeleteByIdCombinedInput.FromJson(jsonString);
//    var usuarioDeleteByIdCombinedSuccessOutput = UsuarioDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioListCombinedInput = UsuarioListCombinedInput.FromJson(jsonString);
//    var usuarioListCombinedSuccessOutput = UsuarioListCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioGetCoverImageCombinedInput = UsuarioGetCoverImageCombinedInput.FromJson(jsonString);
//    var usuarioGetCoverImageCombinedSuccessOutput = UsuarioGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioSetCoverImageCombinedInput = UsuarioSetCoverImageCombinedInput.FromJson(jsonString);
//    var usuarioSetCoverImageCombinedSuccessOutput = UsuarioSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioGetProfileImageCombinedInput = UsuarioGetProfileImageCombinedInput.FromJson(jsonString);
//    var usuarioGetProfileImageCombinedSuccessOutput = UsuarioGetProfileImageCombinedSuccessOutput.FromJson(jsonString);
//    var usuarioSetProfileImageCombinedInput = UsuarioSetProfileImageCombinedInput.FromJson(jsonString);
//    var usuarioSetProfileImageCombinedSuccessOutput = UsuarioSetProfileImageCombinedSuccessOutput.FromJson(jsonString);
//    var vinculoFindByIdCombinedInput = VinculoFindByIdCombinedInput.FromJson(jsonString);
//    var vinculoFindByIdCombinedSuccessOutput = VinculoFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var vinculoListCombinedInput = VinculoListCombinedInput.FromJson(jsonString);
//    var vinculoListCombinedSuccessOutput = VinculoListCombinedSuccessOutput.FromJson(jsonString);
//    var vinculoUpdateCombinedInput = VinculoUpdateCombinedInput.FromJson(jsonString);
//    var vinculoUpdateCombinedSuccessOutput = VinculoUpdateCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteFindByIdCombinedInput = AmbienteFindByIdCombinedInput.FromJson(jsonString);
//    var ambienteFindByIdCombinedSuccessOutput = AmbienteFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteCreateCombinedInput = AmbienteCreateCombinedInput.FromJson(jsonString);
//    var ambienteCreateCombinedSuccessOutput = AmbienteCreateCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteUpdateByIdCombinedInput = AmbienteUpdateByIdCombinedInput.FromJson(jsonString);
//    var ambienteUpdateByIdCombinedSuccessOutput = AmbienteUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteDeleteByIdCombinedInput = AmbienteDeleteByIdCombinedInput.FromJson(jsonString);
//    var ambienteDeleteByIdCombinedSuccessOutput = AmbienteDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteListCombinedInput = AmbienteListCombinedInput.FromJson(jsonString);
//    var ambienteListCombinedSuccessOutput = AmbienteListCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteGetCoverImageCombinedInput = AmbienteGetCoverImageCombinedInput.FromJson(jsonString);
//    var ambienteGetCoverImageCombinedSuccessOutput = AmbienteGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var ambienteSetCoverImageCombinedInput = AmbienteSetCoverImageCombinedInput.FromJson(jsonString);
//    var ambienteSetCoverImageCombinedSuccessOutput = AmbienteSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var blocoFindByIdCombinedInput = BlocoFindByIdCombinedInput.FromJson(jsonString);
//    var blocoFindByIdCombinedSuccessOutput = BlocoFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var blocoCreateCombinedInput = BlocoCreateCombinedInput.FromJson(jsonString);
//    var blocoCreateCombinedSuccessOutput = BlocoCreateCombinedSuccessOutput.FromJson(jsonString);
//    var blocoUpdateByIdCombinedInput = BlocoUpdateByIdCombinedInput.FromJson(jsonString);
//    var blocoUpdateByIdCombinedSuccessOutput = BlocoUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var blocoDeleteByIdCombinedInput = BlocoDeleteByIdCombinedInput.FromJson(jsonString);
//    var blocoDeleteByIdCombinedSuccessOutput = BlocoDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var blocoListCombinedInput = BlocoListCombinedInput.FromJson(jsonString);
//    var blocoListCombinedSuccessOutput = BlocoListCombinedSuccessOutput.FromJson(jsonString);
//    var blocoGetCoverImageCombinedInput = BlocoGetCoverImageCombinedInput.FromJson(jsonString);
//    var blocoGetCoverImageCombinedSuccessOutput = BlocoGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var blocoSetCoverImageCombinedInput = BlocoSetCoverImageCombinedInput.FromJson(jsonString);
//    var blocoSetCoverImageCombinedSuccessOutput = BlocoSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var campusFindByIdCombinedInput = CampusFindByIdCombinedInput.FromJson(jsonString);
//    var campusFindByIdCombinedSuccessOutput = CampusFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var campusCreateCombinedInput = CampusCreateCombinedInput.FromJson(jsonString);
//    var campusCreateCombinedSuccessOutput = CampusCreateCombinedSuccessOutput.FromJson(jsonString);
//    var campusUpdateByIdCombinedInput = CampusUpdateByIdCombinedInput.FromJson(jsonString);
//    var campusUpdateByIdCombinedSuccessOutput = CampusUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var campusDeleteByIdCombinedInput = CampusDeleteByIdCombinedInput.FromJson(jsonString);
//    var campusDeleteByIdCombinedSuccessOutput = CampusDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var campusListCombinedInput = CampusListCombinedInput.FromJson(jsonString);
//    var campusListCombinedSuccessOutput = CampusListCombinedSuccessOutput.FromJson(jsonString);
//    var cidadeFindByIdCombinedInput = CidadeFindByIdCombinedInput.FromJson(jsonString);
//    var cidadeFindByIdCombinedSuccessOutput = CidadeFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var cidadeListCombinedInput = CidadeListCombinedInput.FromJson(jsonString);
//    var cidadeListCombinedSuccessOutput = CidadeListCombinedSuccessOutput.FromJson(jsonString);
//    var estadoFindByIdCombinedInput = EstadoFindByIdCombinedInput.FromJson(jsonString);
//    var estadoFindByIdCombinedSuccessOutput = EstadoFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var estadoListCombinedInput = EstadoListCombinedInput.FromJson(jsonString);
//    var estadoListCombinedSuccessOutput = EstadoListCombinedSuccessOutput.FromJson(jsonString);
//    var reservaFindByIdCombinedInput = ReservaFindByIdCombinedInput.FromJson(jsonString);
//    var reservaFindByIdCombinedSuccessOutput = ReservaFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var reservaCreateCombinedInput = ReservaCreateCombinedInput.FromJson(jsonString);
//    var reservaCreateCombinedSuccessOutput = ReservaCreateCombinedSuccessOutput.FromJson(jsonString);
//    var reservaUpdateByIdCombinedInput = ReservaUpdateByIdCombinedInput.FromJson(jsonString);
//    var reservaUpdateByIdCombinedSuccessOutput = ReservaUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var reservaDeleteByIdCombinedInput = ReservaDeleteByIdCombinedInput.FromJson(jsonString);
//    var reservaDeleteByIdCombinedSuccessOutput = ReservaDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var reservaListCombinedInput = ReservaListCombinedInput.FromJson(jsonString);
//    var reservaListCombinedSuccessOutput = ReservaListCombinedSuccessOutput.FromJson(jsonString);
//    var cursoFindByIdCombinedInput = CursoFindByIdCombinedInput.FromJson(jsonString);
//    var cursoFindByIdCombinedSuccessOutput = CursoFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var cursoCreateCombinedInput = CursoCreateCombinedInput.FromJson(jsonString);
//    var cursoCreateCombinedSuccessOutput = CursoCreateCombinedSuccessOutput.FromJson(jsonString);
//    var cursoUpdateByIdCombinedInput = CursoUpdateByIdCombinedInput.FromJson(jsonString);
//    var cursoUpdateByIdCombinedSuccessOutput = CursoUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var cursoDeleteByIdCombinedInput = CursoDeleteByIdCombinedInput.FromJson(jsonString);
//    var cursoDeleteByIdCombinedSuccessOutput = CursoDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var cursoListCombinedInput = CursoListCombinedInput.FromJson(jsonString);
//    var cursoListCombinedSuccessOutput = CursoListCombinedSuccessOutput.FromJson(jsonString);
//    var cursoGetCoverImageCombinedInput = CursoGetCoverImageCombinedInput.FromJson(jsonString);
//    var cursoGetCoverImageCombinedSuccessOutput = CursoGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var cursoSetCoverImageCombinedInput = CursoSetCoverImageCombinedInput.FromJson(jsonString);
//    var cursoSetCoverImageCombinedSuccessOutput = CursoSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var diarioFindByIdCombinedInput = DiarioFindByIdCombinedInput.FromJson(jsonString);
//    var diarioFindByIdCombinedSuccessOutput = DiarioFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diarioCreateCombinedInput = DiarioCreateCombinedInput.FromJson(jsonString);
//    var diarioCreateCombinedSuccessOutput = DiarioCreateCombinedSuccessOutput.FromJson(jsonString);
//    var diarioUpdateByIdCombinedInput = DiarioUpdateByIdCombinedInput.FromJson(jsonString);
//    var diarioUpdateByIdCombinedSuccessOutput = DiarioUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diarioDeleteByIdCombinedInput = DiarioDeleteByIdCombinedInput.FromJson(jsonString);
//    var diarioDeleteByIdCombinedSuccessOutput = DiarioDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diarioListCombinedInput = DiarioListCombinedInput.FromJson(jsonString);
//    var diarioListCombinedSuccessOutput = DiarioListCombinedSuccessOutput.FromJson(jsonString);
//    var diarioGetCoverImageCombinedInput = DiarioGetCoverImageCombinedInput.FromJson(jsonString);
//    var diarioGetCoverImageCombinedSuccessOutput = DiarioGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var diarioSetCoverImageCombinedInput = DiarioSetCoverImageCombinedInput.FromJson(jsonString);
//    var diarioSetCoverImageCombinedSuccessOutput = DiarioSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var diarioProfessorFindByIdCombinedInput = DiarioProfessorFindByIdCombinedInput.FromJson(jsonString);
//    var diarioProfessorFindByIdCombinedSuccessOutput = DiarioProfessorFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diarioProfessorCreateCombinedInput = DiarioProfessorCreateCombinedInput.FromJson(jsonString);
//    var diarioProfessorCreateCombinedSuccessOutput = DiarioProfessorCreateCombinedSuccessOutput.FromJson(jsonString);
//    var diarioProfessorUpdateByIdCombinedInput = DiarioProfessorUpdateByIdCombinedInput.FromJson(jsonString);
//    var diarioProfessorUpdateByIdCombinedSuccessOutput = DiarioProfessorUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diarioProfessorDeleteByIdCombinedInput = DiarioProfessorDeleteByIdCombinedInput.FromJson(jsonString);
//    var diarioProfessorDeleteByIdCombinedSuccessOutput = DiarioProfessorDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diarioProfessorListCombinedInput = DiarioProfessorListCombinedInput.FromJson(jsonString);
//    var diarioProfessorListCombinedSuccessOutput = DiarioProfessorListCombinedSuccessOutput.FromJson(jsonString);
//    var modalidadeFindByIdCombinedInput = ModalidadeFindByIdCombinedInput.FromJson(jsonString);
//    var modalidadeFindByIdCombinedSuccessOutput = ModalidadeFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var modalidadeCreateCombinedInput = ModalidadeCreateCombinedInput.FromJson(jsonString);
//    var modalidadeCreateCombinedSuccessOutput = ModalidadeCreateCombinedSuccessOutput.FromJson(jsonString);
//    var modalidadeUpdateByIdCombinedInput = ModalidadeUpdateByIdCombinedInput.FromJson(jsonString);
//    var modalidadeUpdateByIdCombinedSuccessOutput = ModalidadeUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var modalidadeDeleteByIdCombinedInput = ModalidadeDeleteByIdCombinedInput.FromJson(jsonString);
//    var modalidadeDeleteByIdCombinedSuccessOutput = ModalidadeDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var modalidadeListCombinedInput = ModalidadeListCombinedInput.FromJson(jsonString);
//    var modalidadeListCombinedSuccessOutput = ModalidadeListCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaFindByIdCombinedInput = DisciplinaFindByIdCombinedInput.FromJson(jsonString);
//    var disciplinaFindByIdCombinedSuccessOutput = DisciplinaFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaCreateCombinedInput = DisciplinaCreateCombinedInput.FromJson(jsonString);
//    var disciplinaCreateCombinedSuccessOutput = DisciplinaCreateCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaUpdateByIdCombinedInput = DisciplinaUpdateByIdCombinedInput.FromJson(jsonString);
//    var disciplinaUpdateByIdCombinedSuccessOutput = DisciplinaUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaDeleteByIdCombinedInput = DisciplinaDeleteByIdCombinedInput.FromJson(jsonString);
//    var disciplinaDeleteByIdCombinedSuccessOutput = DisciplinaDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaListCombinedInput = DisciplinaListCombinedInput.FromJson(jsonString);
//    var disciplinaListCombinedSuccessOutput = DisciplinaListCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaGetCoverImageCombinedInput = DisciplinaGetCoverImageCombinedInput.FromJson(jsonString);
//    var disciplinaGetCoverImageCombinedSuccessOutput = DisciplinaGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var disciplinaSetCoverImageCombinedInput = DisciplinaSetCoverImageCombinedInput.FromJson(jsonString);
//    var disciplinaSetCoverImageCombinedSuccessOutput = DisciplinaSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var turmaFindByIdCombinedInput = TurmaFindByIdCombinedInput.FromJson(jsonString);
//    var turmaFindByIdCombinedSuccessOutput = TurmaFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaCreateCombinedInput = TurmaCreateCombinedInput.FromJson(jsonString);
//    var turmaCreateCombinedSuccessOutput = TurmaCreateCombinedSuccessOutput.FromJson(jsonString);
//    var turmaUpdateByIdCombinedInput = TurmaUpdateByIdCombinedInput.FromJson(jsonString);
//    var turmaUpdateByIdCombinedSuccessOutput = TurmaUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDeleteByIdCombinedInput = TurmaDeleteByIdCombinedInput.FromJson(jsonString);
//    var turmaDeleteByIdCombinedSuccessOutput = TurmaDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaListCombinedInput = TurmaListCombinedInput.FromJson(jsonString);
//    var turmaListCombinedSuccessOutput = TurmaListCombinedSuccessOutput.FromJson(jsonString);
//    var turmaGetCoverImageCombinedInput = TurmaGetCoverImageCombinedInput.FromJson(jsonString);
//    var turmaGetCoverImageCombinedSuccessOutput = TurmaGetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var turmaSetCoverImageCombinedInput = TurmaSetCoverImageCombinedInput.FromJson(jsonString);
//    var turmaSetCoverImageCombinedSuccessOutput = TurmaSetCoverImageCombinedSuccessOutput.FromJson(jsonString);
//    var calendarioLetivoFindByIdCombinedInput = CalendarioLetivoFindByIdCombinedInput.FromJson(jsonString);
//    var calendarioLetivoFindByIdCombinedSuccessOutput = CalendarioLetivoFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var calendarioLetivoCreateCombinedInput = CalendarioLetivoCreateCombinedInput.FromJson(jsonString);
//    var calendarioLetivoCreateCombinedSuccessOutput = CalendarioLetivoCreateCombinedSuccessOutput.FromJson(jsonString);
//    var calendarioLetivoUpdateByIdCombinedInput = CalendarioLetivoUpdateByIdCombinedInput.FromJson(jsonString);
//    var calendarioLetivoUpdateByIdCombinedSuccessOutput = CalendarioLetivoUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var calendarioLetivoDeleteByIdCombinedInput = CalendarioLetivoDeleteByIdCombinedInput.FromJson(jsonString);
//    var calendarioLetivoDeleteByIdCombinedSuccessOutput = CalendarioLetivoDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var calendarioLetivoListCombinedInput = CalendarioLetivoListCombinedInput.FromJson(jsonString);
//    var calendarioLetivoListCombinedSuccessOutput = CalendarioLetivoListCombinedSuccessOutput.FromJson(jsonString);
//    var diaCalendarioFindByIdCombinedInput = DiaCalendarioFindByIdCombinedInput.FromJson(jsonString);
//    var diaCalendarioFindByIdCombinedSuccessOutput = DiaCalendarioFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diaCalendarioCreateCombinedInput = DiaCalendarioCreateCombinedInput.FromJson(jsonString);
//    var diaCalendarioCreateCombinedSuccessOutput = DiaCalendarioCreateCombinedSuccessOutput.FromJson(jsonString);
//    var diaCalendarioUpdateByIdCombinedInput = DiaCalendarioUpdateByIdCombinedInput.FromJson(jsonString);
//    var diaCalendarioUpdateByIdCombinedSuccessOutput = DiaCalendarioUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diaCalendarioDeleteByIdCombinedInput = DiaCalendarioDeleteByIdCombinedInput.FromJson(jsonString);
//    var diaCalendarioDeleteByIdCombinedSuccessOutput = DiaCalendarioDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var diaCalendarioListCombinedInput = DiaCalendarioListCombinedInput.FromJson(jsonString);
//    var diaCalendarioListCombinedSuccessOutput = DiaCalendarioListCombinedSuccessOutput.FromJson(jsonString);
//    var etapaFindByIdCombinedInput = EtapaFindByIdCombinedInput.FromJson(jsonString);
//    var etapaFindByIdCombinedSuccessOutput = EtapaFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var etapaCreateCombinedInput = EtapaCreateCombinedInput.FromJson(jsonString);
//    var etapaCreateCombinedSuccessOutput = EtapaCreateCombinedSuccessOutput.FromJson(jsonString);
//    var etapaUpdateByIdCombinedInput = EtapaUpdateByIdCombinedInput.FromJson(jsonString);
//    var etapaUpdateByIdCombinedSuccessOutput = EtapaUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var etapaDeleteByIdCombinedInput = EtapaDeleteByIdCombinedInput.FromJson(jsonString);
//    var etapaDeleteByIdCombinedSuccessOutput = EtapaDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var etapaListCombinedInput = EtapaListCombinedInput.FromJson(jsonString);
//    var etapaListCombinedSuccessOutput = EtapaListCombinedSuccessOutput.FromJson(jsonString);
//    var aulaFindByIdCombinedInput = AulaFindByIdCombinedInput.FromJson(jsonString);
//    var aulaFindByIdCombinedSuccessOutput = AulaFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var aulaCreateCombinedInput = AulaCreateCombinedInput.FromJson(jsonString);
//    var aulaCreateCombinedSuccessOutput = AulaCreateCombinedSuccessOutput.FromJson(jsonString);
//    var aulaUpdateByIdCombinedInput = AulaUpdateByIdCombinedInput.FromJson(jsonString);
//    var aulaUpdateByIdCombinedSuccessOutput = AulaUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var aulaDeleteByIdCombinedInput = AulaDeleteByIdCombinedInput.FromJson(jsonString);
//    var aulaDeleteByIdCombinedSuccessOutput = AulaDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var aulaListCombinedInput = AulaListCombinedInput.FromJson(jsonString);
//    var aulaListCombinedSuccessOutput = AulaListCombinedSuccessOutput.FromJson(jsonString);
//    var eventoFindByIdCombinedInput = EventoFindByIdCombinedInput.FromJson(jsonString);
//    var eventoFindByIdCombinedSuccessOutput = EventoFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var eventoCreateCombinedInput = EventoCreateCombinedInput.FromJson(jsonString);
//    var eventoCreateCombinedSuccessOutput = EventoCreateCombinedSuccessOutput.FromJson(jsonString);
//    var eventoUpdateByIdCombinedInput = EventoUpdateByIdCombinedInput.FromJson(jsonString);
//    var eventoUpdateByIdCombinedSuccessOutput = EventoUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var eventoDeleteByIdCombinedInput = EventoDeleteByIdCombinedInput.FromJson(jsonString);
//    var eventoDeleteByIdCombinedSuccessOutput = EventoDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var eventoListCombinedInput = EventoListCombinedInput.FromJson(jsonString);
//    var eventoListCombinedSuccessOutput = EventoListCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeFindByIdCombinedInput = TurmaDisponibilidadeFindByIdCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeFindByIdCombinedSuccessOutput = TurmaDisponibilidadeFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeCreateCombinedInput = TurmaDisponibilidadeCreateCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeCreateCombinedSuccessOutput = TurmaDisponibilidadeCreateCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeUpdateByIdCombinedInput = TurmaDisponibilidadeUpdateByIdCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeUpdateByIdCombinedSuccessOutput = TurmaDisponibilidadeUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeDeleteByIdCombinedInput = TurmaDisponibilidadeDeleteByIdCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeDeleteByIdCombinedSuccessOutput = TurmaDisponibilidadeDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeListCombinedInput = TurmaDisponibilidadeListCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeListCombinedSuccessOutput = TurmaDisponibilidadeListCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindByIdCombinedInput = TurmaDisponibilidadeDiaFindByIdCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindByIdCombinedSuccessOutput = TurmaDisponibilidadeDiaFindByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaCreateCombinedInput = TurmaDisponibilidadeDiaCreateCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaCreateCombinedSuccessOutput = TurmaDisponibilidadeDiaCreateCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaUpdateByIdCombinedInput = TurmaDisponibilidadeDiaUpdateByIdCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput = TurmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaDeleteByIdCombinedInput = TurmaDisponibilidadeDiaDeleteByIdCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput = TurmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaListCombinedInput = TurmaDisponibilidadeDiaListCombinedInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaListCombinedSuccessOutput = TurmaDisponibilidadeDiaListCombinedSuccessOutput.FromJson(jsonString);
#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

namespace Ladesa.Dtos
{
    using System;
    using System.Collections.Generic;

    using System.Text.Json;
    using System.Text.Json.Serialization;
    using System.Globalization;

    public partial class PaginatedBaseInput
    {
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        [JsonPropertyName("page")]
        public long? Page { get; set; }

        [JsonPropertyName("search")]
        public string Search { get; set; }
    }

    public partial class PaginatedInput
    {
        /// <summary>
        /// Filtros
        /// </summary>
        [JsonPropertyName("filter")]
        public PaginatedResultMetaFilter[] Filter { get; set; }

        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        [JsonPropertyName("page")]
        public long? Page { get; set; }

        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public PaginatedSortBy[] SortBy { get; set; }
    }

    /// <summary>
    /// Configuração de filtro por restrições de uma propriedade.
    ///
    /// Ordenamento de uma propriedade.
    /// </summary>
    public partial class PaginatedResultMetaFilter
    {
        /// <summary>
        /// Propriedade filtrada.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }

        /// <summary>
        /// Restrições de filtragem
        /// </summary>
        [JsonPropertyName("restrictions")]
        public string[] Restrictions { get; set; }
    }

    /// <summary>
    /// Configuração de ordenamento por uma propriedade.
    ///
    /// Ordenamento de uma propriedade.
    /// </summary>
    public partial class PaginatedSortBy
    {
        /// <summary>
        /// Modo de ordenação.
        /// </summary>
        [JsonPropertyName("mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Propriedade ordenada.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }
    }

    public partial class Search
    {
        /// <summary>
        /// Filtros.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filters")]
        public string[][] Filters { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string SearchSearch { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Visão completa de um Arquivo.
    /// </summary>
    public partial class Arquivo
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Mime-type.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Arquivo por ID.
    /// </summary>
    public partial class ArquivoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Imagem por ID.
    /// </summary>
    public partial class ImagemFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de uma versão de uma imagem.
    /// </summary>
    public partial class ImagemArquivo
    {
        [JsonPropertyName("altura")]
        public long? Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonPropertyName("arquivo")]
        public ArquivoFindOneResult Arquivo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem.
        /// </summary>
        [JsonPropertyName("imagem")]
        public ImagemFindOneFromImagemArquivoResult Imagem { get; set; }

        [JsonPropertyName("largura")]
        public long? Largura { get; set; }

        /// <summary>
        /// Mime Type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Arquivo.
    ///
    /// Arquivo.
    /// </summary>
    public partial class ArquivoFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Mime-type.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagemArquivo de um Imagem.
    ///
    /// Imagem.
    /// </summary>
    public partial class ImagemFindOneFromImagemArquivoResult
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma versão de uma imagem por ID.
    /// </summary>
    public partial class ImagemArquivoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um ImagemArquivo.
    /// </summary>
    public partial class ImagemArquivoFindOneResult
    {
        [JsonPropertyName("altura")]
        public long? Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonPropertyName("arquivo")]
        public ArquivoFindOneResult Arquivo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem.
        /// </summary>
        [JsonPropertyName("imagem")]
        public ImagemFindOneFromImagemArquivoResult Imagem { get; set; }

        [JsonPropertyName("largura")]
        public long? Largura { get; set; }

        /// <summary>
        /// Mime Type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AuthLoginCombinedInput
    {
        [JsonPropertyName("body")]
        public AuthLoginInput Body { get; set; }
    }

    public partial class AuthLoginInput
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Senha do usuário.
        /// </summary>
        [JsonPropertyName("senha")]
        public string Senha { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AuthLoginCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public AuthSessionCredentials Body { get; set; }
    }

    public partial class AuthSessionCredentials
    {
        [JsonPropertyName("access_token")]
        public string AccessToken { get; set; }

        [JsonPropertyName("expires_at")]
        public long? ExpiresAt { get; set; }

        [JsonPropertyName("expires_in")]
        public long? ExpiresIn { get; set; }

        [JsonPropertyName("id_token")]
        public string IdToken { get; set; }

        [JsonPropertyName("refresh_token")]
        public string RefreshToken { get; set; }

        [JsonPropertyName("scope")]
        public string Scope { get; set; }

        [JsonPropertyName("session_state")]
        public string SessionState { get; set; }

        [JsonPropertyName("token_type")]
        public string TokenType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para obter as credenciais de sessão por meio de login refresh.
    /// </summary>
    public partial class AuthRefreshInput
    {
        /// <summary>
        /// Token de refresh.
        /// </summary>
        [JsonPropertyName("refreshToken")]
        public string RefreshToken { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AuthRefreshCombinedInput
    {
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AuthRefreshCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public AuthSessionCredentials Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AuthWhoAmICombinedInput
    {
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AuthWhoAmICombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public AuthWhoAmIResult Body { get; set; }
    }

    /// <summary>
    /// Informações sobre o ator.
    /// </summary>
    public partial class AuthWhoAmIResult
    {
        [JsonPropertyName("usuario")]
        public UsuarioFindOneResult Usuario { get; set; }
    }

    /// <summary>
    /// Vínculos ativos do Usuário.
    ///
    /// Visão completa de um Vínculo.
    /// </summary>
    public partial class Vinculo
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioFindOneResult Usuario { get; set; }
    }

    /// <summary>
    /// Usuário autenticado.
    ///
    /// Visão FindOne de um Usuário.
    ///
    /// Usuário associado ao vínculo.
    ///
    /// Usuário que fez a reserva.
    ///
    /// Corpo de resposta da operação UsuarioFindById.
    ///
    /// Corpo de resposta da operação UsuarioCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class UsuarioFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        [JsonPropertyName("imagemPerfil")]
        public Imagem ImagemPerfil { get; set; }

        /// <summary>
        /// Indentifica é um super usuário.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Vínculos ativos do Usuário.
        /// </summary>
        [JsonPropertyName("vinculosAtivos")]
        public Vinculo[] VinculosAtivos { get; set; }
    }

    /// <summary>
    /// Campus associado ao vínculo.
    ///
    /// Visão FindOne de um Campus.
    ///
    /// Campus.
    ///
    /// Item da busca.
    ///
    /// Campus que o curso pertence.
    ///
    /// Corpo de resposta da operação CampusFindById.
    ///
    /// Corpo de resposta da operação CampusCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class CampusFindOneResult
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonPropertyName("endereco")]
        public EnderecoFindOneResult Endereco { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Endereço do Campus
    ///
    /// Visão FindOne de um Endereco.
    /// </summary>
    public partial class EnderecoFindOneResult
    {
        /// <summary>
        /// Bairro
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade
        /// </summary>
        [JsonPropertyName("cidade")]
        public CidadeFindOneResult Cidade { get; set; }

        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Cidade
    ///
    /// Visão FindOne de uma Cidade.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação CidadeFindById.
    /// </summary>
    public partial class CidadeFindOneResult
    {
        /// <summary>
        /// Estado da Cidade.
        /// </summary>
        [JsonPropertyName("estado")]
        public EstadoFindOneResult Estado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da Cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Estado da Cidade.
    ///
    /// Visão FindOne de um Estado.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação EstadoFindById.
    /// </summary>
    public partial class EstadoFindOneResult
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do Estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do Estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    /// <summary>
    /// Visão completa de um Imagem.
    ///
    /// Imagem de capa
    ///
    /// Imagem de perfil
    /// </summary>
    public partial class Imagem
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Versões.
        /// </summary>
        [JsonPropertyName("versoes")]
        public ImagemArquivoFindOneFromImagemResult[] Versoes { get; set; }
    }

    /// <summary>
    /// Versão da imagem.
    ///
    /// Visão FindOneFromImagem de um ImagemArquivo.
    /// </summary>
    public partial class ImagemArquivoFindOneFromImagemResult
    {
        [JsonPropertyName("altura")]
        public long? Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonPropertyName("arquivo")]
        public ArquivoFindOneResult Arquivo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("largura")]
        public long? Largura { get; set; }

        /// <summary>
        /// Mime Type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AuthSetInitialPasswordCombinedInput
    {
        [JsonPropertyName("body")]
        public AuthSetInitialPasswordInput Body { get; set; }
    }

    /// <summary>
    /// Define a senha inicial do usuário.
    /// </summary>
    public partial class AuthSetInitialPasswordInput
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nova senha.
        /// </summary>
        [JsonPropertyName("senha")]
        public string Senha { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AuthSetInitialPasswordCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Visão completa de um Usuário.
    /// </summary>
    public partial class Usuario
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        [JsonPropertyName("imagemPerfil")]
        public ImagemFindOneResult ImagemPerfil { get; set; }

        /// <summary>
        /// Indentifica é um super usuário.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Vínculos ativos do Usuário.
        /// </summary>
        [JsonPropertyName("vinculosAtivos")]
        public VinculoFindOneResult[] VinculosAtivos { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Imagem.
    ///
    /// Imagem de capa
    ///
    /// Imagem de perfil
    /// </summary>
    public partial class ImagemFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Versões.
        /// </summary>
        [JsonPropertyName("versoes")]
        public ImagemArquivoFindOneFromImagemResult[] Versoes { get; set; }
    }

    /// <summary>
    /// Vínculos ativos do Usuário.
    ///
    /// Visão FindOne de um Vínculo.
    ///
    /// Vínculo do usuário ao campus.
    ///
    /// Corpo de resposta da operação VinculoFindById.
    /// </summary>
    public partial class VinculoFindOneResult
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioFindOneResult Usuario { get; set; }
    }

    /// <summary>
    /// Visão completa de um Ambiente.
    /// </summary>
    public partial class Ambiente
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonPropertyName("bloco")]
        public BlocoFindOneResult Bloco { get; set; }

        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Bloco que o ambiente/sala pertence.
    ///
    /// Visão FindOne de um Bloco.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação BlocoFindById.
    ///
    /// Corpo de resposta da operação BlocoCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class BlocoFindOneResult
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão completa de um Bloco.
    /// </summary>
    public partial class Bloco
    {
        /// <summary>
        /// Ambientes.
        /// </summary>
        [JsonPropertyName("ambientes")]
        public AmbienteFindOneResult[] Ambientes { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Ambiente.
    ///
    /// Item da busca.
    ///
    /// Ambiente.
    ///
    /// Ambiente que foi reservado.
    ///
    /// Ambiente padrão.
    ///
    /// Ambiente padrão da sala de aula.
    ///
    /// Ambiente associado à aula.
    ///
    /// Corpo de resposta da operação AmbienteFindById.
    ///
    /// Corpo de resposta da operação AmbienteCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class AmbienteFindOneResult
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonPropertyName("bloco")]
        public BlocoFindOneResult Bloco { get; set; }

        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Visão completa de um Campus.
    /// </summary>
    public partial class Campus
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonPropertyName("endereco")]
        public EnderecoFindOneResult Endereco { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Cidade.
    /// </summary>
    public partial class Cidade
    {
        /// <summary>
        /// Estado da Cidade.
        /// </summary>
        [JsonPropertyName("estado")]
        public EstadoFindOneResult Estado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da Cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão completa de um Endereco.
    /// </summary>
    public partial class Endereco
    {
        /// <summary>
        /// Bairro
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade
        /// </summary>
        [JsonPropertyName("cidade")]
        public CidadeFindOneResult Cidade { get; set; }

        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Endereco por ID.
    /// </summary>
    public partial class EnderecoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de um Estado.
    /// </summary>
    public partial class Estado
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do Estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do Estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Estado por ID.
    /// </summary>
    public partial class EstadoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Reserva.
    /// </summary>
    public partial class Reserva
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneResult Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        public string Situacao { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioFindOneResult Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Reserva por ID.
    /// </summary>
    public partial class ReservaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class Curso
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneResult Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Modalidade a que o curso pertence.
    ///
    /// Visão FindOne de uma Modalidade.
    ///
    /// Item da busca.
    ///
    /// Modalidade.
    ///
    /// Corpo de resposta da operação ModalidadeFindById.
    ///
    /// Corpo de resposta da operação ModalidadeCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class ModalidadeFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        public string Slug { get; set; }
    }

    public partial class Diario
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbienteFindOneResult AmbientePadrao { get; set; }

        /// <summary>
        /// Ano do diário.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonPropertyName("disciplina")]
        public DisciplinaFindOneResult Disciplina { get; set; }

        [JsonPropertyName("etapa")]
        public string Etapa { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("situacao")]
        public string Situacao { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonPropertyName("turma")]
        public TurmaFindOneResult Turma { get; set; }
    }

    /// <summary>
    /// Disciplina vinculada ao diário.
    ///
    /// Visão FindOne de uma Disciplina.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação DisciplinaFindById.
    ///
    /// Corpo de resposta da operação DisciplinaCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class DisciplinaFindOneResult
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Turma vinculada ao diário.
    ///
    /// Visão FindOne de uma Turma.
    ///
    /// Item da busca.
    ///
    /// Turma.
    ///
    /// Corpo de resposta da operação TurmaFindById.
    ///
    /// Corpo de resposta da operação TurmaCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class TurmaFindOneResult
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbienteFindOneResult AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonPropertyName("curso")]
        public CursoFindOneResult Curso { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Curso.
    ///
    /// Item da busca.
    ///
    /// Curso da Turma.
    ///
    /// Corpo de resposta da operação CursoFindById.
    ///
    /// Corpo de resposta da operação CursoCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class CursoFindOneResult
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneResult Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    public partial class DiarioProfessor
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonPropertyName("diario")]
        public DiarioFindOneResult Diario { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonPropertyName("vinculo")]
        public VinculoFindOneResult Vinculo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Diario.
    ///
    /// Item da busca.
    ///
    /// Diário vinculado.
    ///
    /// Diário associado à aula.
    ///
    /// Corpo de resposta da operação DiarioFindById.
    ///
    /// Corpo de resposta da operação DiarioCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class DiarioFindOneResult
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbienteFindOneResult AmbientePadrao { get; set; }

        /// <summary>
        /// Ano do diário.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonPropertyName("disciplina")]
        public DisciplinaFindOneResult Disciplina { get; set; }

        [JsonPropertyName("etapa")]
        public string Etapa { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("situacao")]
        public string Situacao { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonPropertyName("turma")]
        public TurmaFindOneResult Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiarioProfessor por ID.
    /// </summary>
    public partial class DiarioProfessorFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class Modalidade
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        public string Slug { get; set; }
    }

    public partial class Disciplina
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    public partial class Turma
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbienteFindOneResult AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonPropertyName("curso")]
        public CursoFindOneResult Curso { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemFindOneResult ImagemCapa { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Visão completa de um IntervaloDeTempo.
    /// </summary>
    public partial class IntervaloDeTempo
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Visão completa de um CalendarioLetivo.
    /// </summary>
    public partial class CalendarioLetivo
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneResult Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão completa de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendario
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneResult Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um CalendarioLetivo.
    ///
    /// Item da busca.
    ///
    /// Calendario.
    ///
    /// Corpo de resposta da operação CalendarioLetivoFindById.
    ///
    /// Corpo de resposta da operação CalendarioLetivoCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class CalendarioLetivoFindOneResult
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneResult Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneResult Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiaCalendario por ID.
    /// </summary>
    public partial class DiaCalendarioFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de um Etapa.
    /// </summary>
    public partial class Etapa
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneResult Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Etapa por ID.
    /// </summary>
    public partial class EtapaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class Aula
    {
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneResult Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonPropertyName("diario")]
        public DiarioFindOneResult Diario { get; set; }

        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoFindOneResult IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um IntervaloDeTempo.
    ///
    /// Intervalo de Tempo associado à aula.
    ///
    /// Intervalo de tempo.
    /// </summary>
    public partial class IntervaloDeTempoFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Aula por ID.
    /// </summary>
    public partial class AulaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de um Evento.
    /// </summary>
    public partial class Evento
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneResult Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Evento por ID.
    /// </summary>
    public partial class EventoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaDisponibilidade
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("turma")]
        public TurmaFindOneResult Turma { get; set; }
    }

    public partial class TurmaDisponibilidadeDia
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoFindOneResult IntervaloDeTempo { get; set; }

        [JsonPropertyName("turmaDisponibilidade")]
        public TurmaDisponibilidadeFindOneResult TurmaDisponibilidade { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma TurmaDisponibilidade.
    ///
    /// Item da busca.
    ///
    /// Disponibilidade da turma.
    ///
    /// Corpo de resposta da operação TurmaDisponibilidadeFindById.
    ///
    /// Corpo de resposta da operação TurmaDisponibilidadeCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class TurmaDisponibilidadeFindOneResult
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("turma")]
        public TurmaFindOneResult Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma TurmaDisponibilidadeDia por ID.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ArquivoGetFileCombinedInput
    {
        [JsonPropertyName("queries")]
        public ArquivoGetFileCombinedInputQueries Queries { get; set; }
    }

    public partial class ArquivoGetFileCombinedInputQueries
    {
        /// <summary>
        /// Acesso via recurso: id
        /// </summary>
        [JsonPropertyName("idRecurso")]
        public string IdRecurso { get; set; }

        /// <summary>
        /// Acesso via recurso: nome
        /// </summary>
        [JsonPropertyName("nomeRecurso")]
        public string NomeRecurso { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ArquivoGetFileCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public UsuarioFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class UsuarioFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação UsuarioFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public UsuarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'UsuarioCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public UsuarioInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Usuario.
    ///
    /// Corpo de entrada da operação 'UsuarioCreate'.
    /// </summary>
    public partial class UsuarioInputCreate
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação UsuarioCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public UsuarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public UsuarioInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public UsuarioUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Usuario.
    ///
    /// Data to update
    /// </summary>
    public partial class UsuarioInputUpdate
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class UsuarioUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public UsuarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public UsuarioDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class UsuarioDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioListCombinedInput
    {
        [JsonPropertyName("queries")]
        public UsuarioListCombinedInputQueries Queries { get; set; }
    }

    public partial class UsuarioListCombinedInputQueries
    {
        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação UsuarioList.
        /// </summary>
        [JsonPropertyName("body")]
        public UsuarioFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Usuários.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação UsuarioList.
    /// </summary>
    public partial class UsuarioFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public UsuarioFindAllResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Links da busca.
    /// </summary>
    public partial class PaginatedResultLinks
    {
        [JsonPropertyName("current")]
        public string Current { get; set; }

        [JsonPropertyName("first")]
        public string First { get; set; }

        [JsonPropertyName("last")]
        public string Last { get; set; }

        [JsonPropertyName("next")]
        public string Next { get; set; }

        [JsonPropertyName("previous")]
        public string Previous { get; set; }
    }

    /// <summary>
    /// Metadados dos resultados de busca.
    ///
    /// Metadados da busca.
    /// </summary>
    public partial class PaginatedResultMeta
    {
        /// <summary>
        /// Página atual.
        /// </summary>
        [JsonPropertyName("currentPage")]
        public long CurrentPage { get; set; }

        /// <summary>
        /// Filtros
        /// </summary>
        [JsonPropertyName("filter")]
        public PaginatedResultMetaFilter[] Filter { get; set; }

        /// <summary>
        /// Quantidade de itens por página.
        /// </summary>
        [JsonPropertyName("itemsPerPage")]
        public long ItemsPerPage { get; set; }

        /// <summary>
        /// Termo textual da busca.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public PaginatedSortBy[] SortBy { get; set; }

        /// <summary>
        /// Total de itens.
        /// </summary>
        [JsonPropertyName("totalItems")]
        public long TotalItems { get; set; }

        /// <summary>
        /// Quantidade total de páginas.
        /// </summary>
        [JsonPropertyName("totalPages")]
        public long TotalPages { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public UsuarioGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class UsuarioGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public UsuarioSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class UsuarioSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioGetProfileImageCombinedInput
    {
        [JsonPropertyName("params")]
        public UsuarioGetProfileImageCombinedInputParams Params { get; set; }
    }

    public partial class UsuarioGetProfileImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioGetProfileImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class UsuarioSetProfileImageCombinedInput
    {
        [JsonPropertyName("params")]
        public UsuarioSetProfileImageCombinedInputParams Params { get; set; }
    }

    public partial class UsuarioSetProfileImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class UsuarioSetProfileImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class VinculoFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public VinculoFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class VinculoFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class VinculoFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação VinculoFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public VinculoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class VinculoListCombinedInput
    {
        [JsonPropertyName("queries")]
        public VinculoListCombinedInputQueries Queries { get; set; }
    }

    public partial class VinculoListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'ativo'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ativo")]
        public string[] FilterAtivo { get; set; }

        /// <summary>
        /// Filtros para 'campus.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        /// <summary>
        /// Filtros para 'usuario.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.usuario.id")]
        public string[] FilterUsuarioId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class VinculoListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação VinculoList.
        /// </summary>
        [JsonPropertyName("body")]
        public VinculoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Vínculos.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação VinculoList.
    /// </summary>
    public partial class VinculoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public VinculoFindAllResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class VinculoUpdateCombinedInput
    {
        [JsonPropertyName("body")]
        public VinculoUpdateInput Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a alteração de vínculo de um Usuário a um Campus.
    /// </summary>
    public partial class VinculoUpdateInput
    {
        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        /// <summary>
        /// Cargos do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargos")]
        public string[] Cargos { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioFindOneInput Usuario { get; set; }
    }

    /// <summary>
    /// Campus associado ao vínculo.
    ///
    /// Dados de entrada para encontrar um Campus por ID.
    ///
    /// Campus.
    ///
    /// Campus que o curso pertence.
    /// </summary>
    public partial class CampusFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Usuario por ID.
    ///
    /// Usuário associado ao vínculo.
    ///
    /// Usuário que fez a reserva.
    /// </summary>
    public partial class UsuarioFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class VinculoUpdateCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public VinculoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public AmbienteFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class AmbienteFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação AmbienteFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public AmbienteFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'AmbienteCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public AmbienteInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um ambiente.
    ///
    /// Corpo de entrada da operação 'AmbienteCreate'.
    /// </summary>
    public partial class AmbienteInputCreate
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonPropertyName("bloco")]
        public BlocoFindOneInput Bloco { get; set; }

        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Bloco que o ambiente/sala pertence.
    ///
    /// Dados de entrada para encontrar um Bloco por ID.
    /// </summary>
    public partial class BlocoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação AmbienteCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public AmbienteFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public AmbienteInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public AmbienteUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um ambiente.
    ///
    /// Data to update
    /// </summary>
    public partial class AmbienteInputUpdate
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("bloco")]
        public BlocoFindOneInput Bloco { get; set; }

        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    public partial class AmbienteUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public AmbienteFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public AmbienteDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class AmbienteDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteListCombinedInput
    {
        [JsonPropertyName("queries")]
        public AmbienteListCombinedInputQueries Queries { get; set; }
    }

    public partial class AmbienteListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'bloco.campus.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.bloco.campus.id")]
        public string[] FilterBlocoCampusId { get; set; }

        /// <summary>
        /// Filtros para 'bloco.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.bloco.id")]
        public string[] FilterBlocoId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação AmbienteList.
        /// </summary>
        [JsonPropertyName("body")]
        public AmbienteFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Ambientes.
    ///
    /// Corpo de resposta da operação AmbienteList.
    /// </summary>
    public partial class AmbienteFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public AmbienteFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public AmbienteGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class AmbienteGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AmbienteSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public AmbienteSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class AmbienteSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AmbienteSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public BlocoFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class BlocoFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação BlocoFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public BlocoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'BlocoCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public BlocoInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Bloco.
    ///
    /// Corpo de entrada da operação 'BlocoCreate'.
    /// </summary>
    public partial class BlocoInputCreate
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação BlocoCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public BlocoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public BlocoInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public BlocoUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Bloco.
    ///
    /// Data to update
    /// </summary>
    public partial class BlocoInputUpdate
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class BlocoUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public BlocoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public BlocoDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class BlocoDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoListCombinedInput
    {
        [JsonPropertyName("queries")]
        public BlocoListCombinedInputQueries Queries { get; set; }
    }

    public partial class BlocoListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'campus.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação BlocoList.
        /// </summary>
        [JsonPropertyName("body")]
        public BlocoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Blocos.
    ///
    /// Corpo de resposta da operação BlocoList.
    /// </summary>
    public partial class BlocoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public BlocoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public BlocoGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class BlocoGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class BlocoSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public BlocoSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class BlocoSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class BlocoSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CampusFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CampusFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class CampusFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CampusFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CampusFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public CampusFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CampusCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'CampusCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public CampusInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Campus.
    ///
    /// Corpo de entrada da operação 'CampusCreate'.
    /// </summary>
    public partial class CampusInputCreate
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonPropertyName("endereco")]
        public EnderecoInput Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Endereço do Campus
    ///
    /// Dados de entrada para um Endereco.
    /// </summary>
    public partial class EnderecoInput
    {
        /// <summary>
        /// Bairro
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade
        /// </summary>
        [JsonPropertyName("cidade")]
        public CidadeFindOneInput Cidade { get; set; }

        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Logradouro
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Cidade
    ///
    /// Dados de entrada para encontrar uma Cidade por ID.
    /// </summary>
    public partial class CidadeFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CampusCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CampusCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public CampusFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CampusUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public CampusInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public CampusUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Campus.
    ///
    /// Data to update
    /// </summary>
    public partial class CampusInputUpdate
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("endereco")]
        public EnderecoInput Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    public partial class CampusUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CampusUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public CampusFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CampusDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CampusDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class CampusDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CampusDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CampusListCombinedInput
    {
        [JsonPropertyName("queries")]
        public CampusListCombinedInputQueries Queries { get; set; }
    }

    public partial class CampusListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'endereco.cidade.estado.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.endereco.cidade.estado.id")]
        public string[] FilterEnderecoCidadeEstadoId { get; set; }

        /// <summary>
        /// Filtros para 'endereco.cidade.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.endereco.cidade.id")]
        public string[] FilterEnderecoCidadeId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CampusListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CampusList.
        /// </summary>
        [JsonPropertyName("body")]
        public CampusFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Campi.
    ///
    /// Corpo de resposta da operação CampusList.
    /// </summary>
    public partial class CampusFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CampusFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CidadeFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CidadeFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class CidadeFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CidadeFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CidadeFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public CidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CidadeListCombinedInput
    {
        [JsonPropertyName("queries")]
        public CidadeListCombinedInputQueries Queries { get; set; }
    }

    public partial class CidadeListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'estado.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.estado.id")]
        public string[] FilterEstadoId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CidadeListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CidadeList.
        /// </summary>
        [JsonPropertyName("body")]
        public CidadeFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Cidades.
    ///
    /// Corpo de resposta da operação CidadeList.
    /// </summary>
    public partial class CidadeFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CidadeFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EstadoFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public EstadoFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class EstadoFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EstadoFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EstadoFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public EstadoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EstadoListCombinedInput
    {
        [JsonPropertyName("queries")]
        public EstadoListCombinedInputQueries Queries { get; set; }
    }

    public partial class EstadoListCombinedInputQueries
    {
        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EstadoListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EstadoList.
        /// </summary>
        [JsonPropertyName("body")]
        public EstadoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Estados.
    ///
    /// Corpo de resposta da operação EstadoList.
    /// </summary>
    public partial class EstadoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EstadoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ReservaFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public ReservaFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class ReservaFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ReservaFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação ReservaFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public ReservaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Reserva.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação ReservaFindById.
    ///
    /// Corpo de resposta da operação ReservaCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class ReservaFindOneResult
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneResult Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        public string Situacao { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioFindOneResult Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ReservaCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'ReservaCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public ReservaInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Reserva.
    ///
    /// Corpo de entrada da operação 'ReservaCreate'.
    /// </summary>
    public partial class ReservaInputCreate
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneInput Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        public string Situacao { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioFindOneInput Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Ambiente por ID.
    ///
    /// Ambiente que foi reservado.
    ///
    /// Ambiente padrão.
    ///
    /// Ambiente padrão da sala de aula.
    ///
    /// Ambiente associado à aula.
    /// </summary>
    public partial class AmbienteFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ReservaCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação ReservaCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public ReservaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ReservaUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public ReservaInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public ReservaUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Reserva.
    ///
    /// Data to update
    /// </summary>
    public partial class ReservaInputUpdate
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneInput Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("situacao")]
        public string Situacao { get; set; }

        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("usuario")]
        public UsuarioFindOneInput Usuario { get; set; }
    }

    public partial class ReservaUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ReservaUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public ReservaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ReservaDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public ReservaDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class ReservaDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ReservaDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ReservaListCombinedInput
    {
        [JsonPropertyName("queries")]
        public ReservaListCombinedInputQueries Queries { get; set; }
    }

    public partial class ReservaListCombinedInputQueries
    {
        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ReservaListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação ReservaList.
        /// </summary>
        [JsonPropertyName("body")]
        public ReservaFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Reservas.
    ///
    /// Corpo de resposta da operação ReservaList.
    /// </summary>
    public partial class ReservaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ReservaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CursoFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class CursoFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CursoFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public CursoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'CursoCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public CursoInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Curso.
    ///
    /// Corpo de entrada da operação 'CursoCreate'.
    /// </summary>
    public partial class CursoInputCreate
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneInput Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Modalidade a que o curso pertence.
    ///
    /// Dados de entrada para encontrar uma Modalidade por ID.
    ///
    /// Modalidade.
    /// </summary>
    public partial class ModalidadeFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CursoCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public CursoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public CursoInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public CursoUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Curso.
    ///
    /// Data to update
    /// </summary>
    public partial class CursoInputUpdate
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneInput Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    public partial class CursoUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public CursoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CursoDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class CursoDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoListCombinedInput
    {
        [JsonPropertyName("queries")]
        public CursoListCombinedInputQueries Queries { get; set; }
    }

    public partial class CursoListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'campus.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        /// <summary>
        /// Filtros para 'modalidade.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.modalidade.id")]
        public string[] FilterModalidadeId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CursoList.
        /// </summary>
        [JsonPropertyName("body")]
        public CursoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Cursos.
    ///
    /// Corpo de resposta da operação CursoList.
    /// </summary>
    public partial class CursoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CursoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public CursoGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class CursoGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CursoSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public CursoSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class CursoSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CursoSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DiarioFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class DiarioFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiarioFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'DiarioCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Diario.
    ///
    /// Corpo de entrada da operação 'DiarioCreate'.
    /// </summary>
    public partial class DiarioInputCreate
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbienteFindOneInput AmbientePadrao { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonPropertyName("disciplina")]
        public DisciplinaFindOneInput Disciplina { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonPropertyName("turma")]
        public TurmaFindOneInput Turma { get; set; }
    }

    /// <summary>
    /// Disciplina vinculada ao diário.
    ///
    /// Dados de entrada para encontrar uma Disciplina por ID.
    /// </summary>
    public partial class DisciplinaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Turma vinculada ao diário.
    ///
    /// Dados de entrada para encontrar uma Turma por ID.
    ///
    /// Turma.
    /// </summary>
    public partial class TurmaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiarioCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public DiarioUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Diario.
    ///
    /// Data to update
    /// </summary>
    public partial class DiarioInputUpdate
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbienteFindOneInput AmbientePadrao { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disciplina")]
        public DisciplinaFindOneInput Disciplina { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("turma")]
        public TurmaFindOneInput Turma { get; set; }
    }

    public partial class DiarioUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DiarioDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class DiarioDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioListCombinedInput
    {
        [JsonPropertyName("queries")]
        public DiarioListCombinedInputQueries Queries { get; set; }
    }

    public partial class DiarioListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'ambientePadrao.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadrao.id")]
        public string[] FilterAmbientePadraoId { get; set; }

        /// <summary>
        /// Filtros para 'disciplina.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.disciplina.id")]
        public string[] FilterDisciplinaId { get; set; }

        /// <summary>
        /// Filtros para 'turma.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.turma.id")]
        public string[] FilterTurmaId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiarioList.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Diários.
    ///
    /// Corpo de resposta da operação DiarioList.
    /// </summary>
    public partial class DiarioFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public DiarioGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class DiarioGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public DiarioSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class DiarioSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioProfessorFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DiarioProfessorFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class DiarioProfessorFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioProfessorFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiarioProfessorFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioProfessorFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiarioProfessor.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação DiarioProfessorFindById.
    ///
    /// Corpo de resposta da operação DiarioProfessorCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class DiarioProfessorFindOneResult
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonPropertyName("diario")]
        public DiarioFindOneResult Diario { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonPropertyName("vinculo")]
        public VinculoFindOneResult Vinculo { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioProfessorCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'DiarioProfessorCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioProfessorInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiarioProfessor.
    ///
    /// Corpo de entrada da operação 'DiarioProfessorCreate'.
    /// </summary>
    public partial class DiarioProfessorInputCreate
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonPropertyName("diario")]
        public DiarioFindOneInput Diario { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonPropertyName("vinculo")]
        public VinculoFindOneInput Vinculo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Diario por ID.
    ///
    /// Diário vinculado.
    ///
    /// Diário associado à aula.
    /// </summary>
    public partial class DiarioFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Vínculo por ID.
    ///
    /// Vínculo do usuário ao campus.
    /// </summary>
    public partial class VinculoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioProfessorCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiarioProfessorCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioProfessorFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioProfessorUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioProfessorInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public DiarioProfessorUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiarioProfessor.
    ///
    /// Data to update
    /// </summary>
    public partial class DiarioProfessorInputUpdate
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public DiarioFindOneInput Diario { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("situacao")]
        public bool? Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("vinculo")]
        public VinculoFindOneInput Vinculo { get; set; }
    }

    public partial class DiarioProfessorUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioProfessorUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioProfessorFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioProfessorDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DiarioProfessorDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class DiarioProfessorDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioProfessorDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiarioProfessorListCombinedInput
    {
        [JsonPropertyName("queries")]
        public DiarioProfessorListCombinedInputQueries Queries { get; set; }
    }

    public partial class DiarioProfessorListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'diario.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.diario.id")]
        public string[] FilterDiarioId { get; set; }

        /// <summary>
        /// Filtros para 'vinculo.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.vinculo.id")]
        public string[] FilterVinculoId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiarioProfessorListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiarioProfessorList.
        /// </summary>
        [JsonPropertyName("body")]
        public DiarioProfessorFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Diários.
    ///
    /// Corpo de resposta da operação DiarioProfessorList.
    /// </summary>
    public partial class DiarioProfessorFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioProfessorFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ModalidadeFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public ModalidadeFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class ModalidadeFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ModalidadeFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação ModalidadeFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public ModalidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ModalidadeCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'ModalidadeCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public ModalidadeInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Modalidade.
    ///
    /// Corpo de entrada da operação 'ModalidadeCreate'.
    /// </summary>
    public partial class ModalidadeInputCreate
    {
        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ModalidadeCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação ModalidadeCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public ModalidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ModalidadeUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public ModalidadeInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public ModalidadeUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Modalidade.
    ///
    /// Data to update
    /// </summary>
    public partial class ModalidadeInputUpdate
    {
        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        public string Slug { get; set; }
    }

    public partial class ModalidadeUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ModalidadeUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public ModalidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ModalidadeDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public ModalidadeDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class ModalidadeDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ModalidadeDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class ModalidadeListCombinedInput
    {
        [JsonPropertyName("queries")]
        public ModalidadeListCombinedInputQueries Queries { get; set; }
    }

    public partial class ModalidadeListCombinedInputQueries
    {
        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class ModalidadeListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação ModalidadeList.
        /// </summary>
        [JsonPropertyName("body")]
        public ModalidadeFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Modalidades.
    ///
    /// Corpo de resposta da operação ModalidadeList.
    /// </summary>
    public partial class ModalidadeFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ModalidadeFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DisciplinaFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class DisciplinaFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DisciplinaFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public DisciplinaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'DisciplinaCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public DisciplinaInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Disciplina.
    ///
    /// Corpo de entrada da operação 'DisciplinaCreate'.
    /// </summary>
    public partial class DisciplinaInputCreate
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DisciplinaCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public DisciplinaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public DisciplinaInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public DisciplinaUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Disciplina.
    ///
    /// Data to update
    /// </summary>
    public partial class DisciplinaInputUpdate
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("cargaHoraria")]
        public long? CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    public partial class DisciplinaUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public DisciplinaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DisciplinaDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class DisciplinaDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaListCombinedInput
    {
        [JsonPropertyName("queries")]
        public DisciplinaListCombinedInputQueries Queries { get; set; }
    }

    public partial class DisciplinaListCombinedInputQueries
    {
        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DisciplinaList.
        /// </summary>
        [JsonPropertyName("body")]
        public DisciplinaFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Disciplinas.
    ///
    /// Corpo de resposta da operação DisciplinaList.
    /// </summary>
    public partial class DisciplinaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisciplinaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public DisciplinaGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class DisciplinaGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DisciplinaSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public DisciplinaSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class DisciplinaSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DisciplinaSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class TurmaFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'TurmaCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Turma.
    ///
    /// Corpo de entrada da operação 'TurmaCreate'.
    /// </summary>
    public partial class TurmaInputCreate
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbienteFindOneInput AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonPropertyName("curso")]
        public CursoFindOneInput Curso { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Curso por ID.
    ///
    /// Curso da Turma.
    /// </summary>
    public partial class CursoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public TurmaUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Turma.
    ///
    /// Data to update
    /// </summary>
    public partial class TurmaInputUpdate
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbienteFindOneInput AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("curso")]
        public CursoFindOneInput Curso { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("periodo")]
        public string Periodo { get; set; }
    }

    public partial class TurmaUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class TurmaDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaListCombinedInput
    {
        [JsonPropertyName("queries")]
        public TurmaListCombinedInputQueries Queries { get; set; }
    }

    public partial class TurmaListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'ambientePadraoAula.capacidade'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.capacidade")]
        public string[] FilterAmbientePadraoAulaCapacidade { get; set; }

        /// <summary>
        /// Filtros para 'ambientePadraoAula.codigo'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.codigo")]
        public string[] FilterAmbientePadraoAulaCodigo { get; set; }

        /// <summary>
        /// Filtros para 'ambientePadraoAula.nome'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.nome")]
        public string[] FilterAmbientePadraoAulaNome { get; set; }

        /// <summary>
        /// Filtros para 'ambientePadraoAula.tipo'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.tipo")]
        public string[] FilterAmbientePadraoAulaTipo { get; set; }

        /// <summary>
        /// Filtros para 'curso.campus.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.campus.id")]
        public string[] FilterCursoCampusId { get; set; }

        /// <summary>
        /// Filtros para 'curso.modalidade.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.modalidade.id")]
        public string[] FilterCursoModalidadeId { get; set; }

        /// <summary>
        /// Filtros para 'curso.nome'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.nome")]
        public string[] FilterCursoNome { get; set; }

        /// <summary>
        /// Filtros para 'curso.nomeAbreviado'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.nomeAbreviado")]
        public string[] FilterCursoNomeAbreviado { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaList.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Turmas.
    ///
    /// Corpo de resposta da operação TurmaList.
    /// </summary>
    public partial class TurmaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaGetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaGetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class TurmaGetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaGetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaSetCoverImageCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaSetCoverImageCombinedInputParams Params { get; set; }
    }

    public partial class TurmaSetCoverImageCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaSetCoverImageCombinedSuccessOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CalendarioLetivoFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CalendarioLetivoFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class CalendarioLetivoFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CalendarioLetivoFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CalendarioLetivoFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public CalendarioLetivoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CalendarioLetivoCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'CalendarioLetivoCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public CalendarioLetivoInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um CalendarioLetivo.
    ///
    /// Corpo de entrada da operação 'CalendarioLetivoCreate'.
    /// </summary>
    public partial class CalendarioLetivoInputCreate
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneInput Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CalendarioLetivoCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CalendarioLetivoCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public CalendarioLetivoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CalendarioLetivoUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public CalendarioLetivoInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public CalendarioLetivoUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um CalendarioLetivo.
    ///
    /// Data to update
    /// </summary>
    public partial class CalendarioLetivoInputUpdate
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ano")]
        public long? Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public CampusFindOneInput Campus { get; set; }

        [JsonPropertyName("modalidade")]
        public ModalidadeFindOneInput Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class CalendarioLetivoUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CalendarioLetivoUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public CalendarioLetivoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CalendarioLetivoDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public CalendarioLetivoDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class CalendarioLetivoDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CalendarioLetivoDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class CalendarioLetivoListCombinedInput
    {
        [JsonPropertyName("queries")]
        public CalendarioLetivoListCombinedInputQueries Queries { get; set; }
    }

    public partial class CalendarioLetivoListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'campus.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        /// <summary>
        /// Filtros para 'modalidade.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.modalidade.id")]
        public string[] FilterModalidadeId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class CalendarioLetivoListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação CalendarioLetivoList.
        /// </summary>
        [JsonPropertyName("body")]
        public CalendarioLetivoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a CalendarioLetivos.
    ///
    /// Corpo de resposta da operação CalendarioLetivoList.
    /// </summary>
    public partial class CalendarioLetivoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CalendarioLetivoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiaCalendarioFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DiaCalendarioFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class DiaCalendarioFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiaCalendarioFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiaCalendarioFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public DiaCalendarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiaCalendario.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação DiaCalendarioFindById.
    ///
    /// Corpo de resposta da operação DiaCalendarioCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class DiaCalendarioFindOneResult
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneResult Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiaCalendarioCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'DiaCalendarioCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public DiaCalendarioInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiaCalendario.
    ///
    /// Corpo de entrada da operação 'DiaCalendarioCreate'.
    /// </summary>
    public partial class DiaCalendarioInputCreate
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneInput Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um CalendarioLetivo por ID.
    ///
    /// Calendario.
    /// </summary>
    public partial class CalendarioLetivoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiaCalendarioCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiaCalendarioCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public DiaCalendarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiaCalendarioUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public DiaCalendarioInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public DiaCalendarioUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiaCalendario.
    ///
    /// Data to update
    /// </summary>
    public partial class DiaCalendarioInputUpdate
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneInput Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diaLetivo")]
        public bool? DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("feriado")]
        public bool? Feriado { get; set; }
    }

    public partial class DiaCalendarioUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiaCalendarioUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public DiaCalendarioFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiaCalendarioDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public DiaCalendarioDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class DiaCalendarioDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiaCalendarioDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class DiaCalendarioListCombinedInput
    {
        [JsonPropertyName("queries")]
        public DiaCalendarioListCombinedInputQueries Queries { get; set; }
    }

    public partial class DiaCalendarioListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'calendario.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendario.id")]
        public string[] FilterCalendarioId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class DiaCalendarioListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação DiaCalendarioList.
        /// </summary>
        [JsonPropertyName("body")]
        public DiaCalendarioFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DiaCalendarios.
    ///
    /// Corpo de resposta da operação DiaCalendarioList.
    /// </summary>
    public partial class DiaCalendarioFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiaCalendarioFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EtapaFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public EtapaFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class EtapaFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EtapaFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EtapaFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public EtapaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Etapa.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação EtapaFindById.
    ///
    /// Corpo de resposta da operação EtapaCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class EtapaFindOneResult
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneResult Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EtapaCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'EtapaCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public EtapaInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Etapa.
    ///
    /// Corpo de entrada da operação 'EtapaCreate'.
    /// </summary>
    public partial class EtapaInputCreate
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneInput Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EtapaCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EtapaCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public EtapaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EtapaUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public EtapaInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public EtapaUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Etapa.
    ///
    /// Data to update
    /// </summary>
    public partial class EtapaInputUpdate
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneInput Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    public partial class EtapaUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EtapaUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public EtapaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EtapaDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public EtapaDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class EtapaDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EtapaDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EtapaListCombinedInput
    {
        [JsonPropertyName("queries")]
        public EtapaListCombinedInputQueries Queries { get; set; }
    }

    public partial class EtapaListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'calendario.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendario.id")]
        public string[] FilterCalendarioId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EtapaListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EtapaList.
        /// </summary>
        [JsonPropertyName("body")]
        public EtapaFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Etapas.
    ///
    /// Corpo de resposta da operação EtapaList.
    /// </summary>
    public partial class EtapaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EtapaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AulaFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public AulaFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class AulaFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AulaFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação AulaFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public AulaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Aula.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação AulaFindById.
    ///
    /// Corpo de resposta da operação AulaCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class AulaFindOneResult
    {
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneResult Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonPropertyName("diario")]
        public DiarioFindOneResult Diario { get; set; }

        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoFindOneResult IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AulaCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'AulaCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public AulaInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Aula.
    ///
    /// Corpo de entrada da operação 'AulaCreate'.
    /// </summary>
    public partial class AulaInputCreate
    {
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneInput Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonPropertyName("diario")]
        public DiarioFindOneInput Diario { get; set; }

        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoInput IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um IntervaloDeTempo.
    ///
    /// Intervalo de Tempo associado à aula.
    ///
    /// Intervalo de tempo.
    /// </summary>
    public partial class IntervaloDeTempoInput
    {
        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AulaCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação AulaCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public AulaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AulaUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public AulaInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public AulaUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Aula.
    ///
    /// Data to update
    /// </summary>
    public partial class AulaInputUpdate
    {
        [JsonPropertyName("ambiente")]
        public AmbienteFindOneInput Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public DiarioFindOneInput Diario { get; set; }

        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoInput IntervaloDeTempo { get; set; }
    }

    public partial class AulaUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AulaUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public AulaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AulaDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public AulaDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class AulaDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AulaDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class AulaListCombinedInput
    {
        [JsonPropertyName("queries")]
        public AulaListCombinedInputQueries Queries { get; set; }
    }

    public partial class AulaListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'ambiente.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambiente.id")]
        public string[] FilterAmbienteId { get; set; }

        /// <summary>
        /// Filtros para 'diario.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.diario.id")]
        public string[] FilterDiarioId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class AulaListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação AulaList.
        /// </summary>
        [JsonPropertyName("body")]
        public AulaFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Aulas.
    ///
    /// Corpo de resposta da operação AulaList.
    /// </summary>
    public partial class AulaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public AulaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EventoFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public EventoFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class EventoFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EventoFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EventoFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public EventoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Evento.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação EventoFindById.
    ///
    /// Corpo de resposta da operação EventoCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class EventoFindOneResult
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneResult Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EventoCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'EventoCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public EventoInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Evento.
    ///
    /// Corpo de entrada da operação 'EventoCreate'.
    /// </summary>
    public partial class EventoInputCreate
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneInput Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EventoCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EventoCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public EventoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EventoUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public EventoInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public EventoUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Evento.
    ///
    /// Data to update
    /// </summary>
    public partial class EventoInputUpdate
    {
        [JsonPropertyName("calendario")]
        public CalendarioLetivoFindOneInput Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class EventoUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EventoUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public EventoFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EventoDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public EventoDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class EventoDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EventoDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class EventoListCombinedInput
    {
        [JsonPropertyName("queries")]
        public EventoListCombinedInputQueries Queries { get; set; }
    }

    public partial class EventoListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'calendario.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendario.id")]
        public string[] FilterCalendarioId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class EventoListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação EventoList.
        /// </summary>
        [JsonPropertyName("body")]
        public EventoFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Eventos.
    ///
    /// Corpo de resposta da operação EventoList.
    /// </summary>
    public partial class EventoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EventoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaDisponibilidadeFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class TurmaDisponibilidadeFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaDisponibilidadeFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'TurmaDisponibilidadeCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma TurmaDisponibilidade.
    ///
    /// Corpo de entrada da operação 'TurmaDisponibilidadeCreate'.
    /// </summary>
    public partial class TurmaDisponibilidadeInputCreate
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("turma")]
        public TurmaFindOneInput Turma { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaDisponibilidadeCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public TurmaDisponibilidadeUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma TurmaDisponibilidade.
    ///
    /// Data to update
    /// </summary>
    public partial class TurmaDisponibilidadeInputUpdate
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonPropertyName("turma")]
        public TurmaFindOneInput Turma { get; set; }
    }

    public partial class TurmaDisponibilidadeUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaDisponibilidadeDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class TurmaDisponibilidadeDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeListCombinedInput
    {
        [JsonPropertyName("queries")]
        public TurmaDisponibilidadeListCombinedInputQueries Queries { get; set; }
    }

    public partial class TurmaDisponibilidadeListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'turma.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.turma.id")]
        public string[] FilterTurmaId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaDisponibilidadeList.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a TurmaDisponibilidades.
    ///
    /// Corpo de resposta da operação TurmaDisponibilidadeList.
    /// </summary>
    public partial class TurmaDisponibilidadeFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaDisponibilidadeFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaDisponibilidadeDiaFindByIdCombinedInputParams Params { get; set; }
    }

    public partial class TurmaDisponibilidadeDiaFindByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaDisponibilidadeDiaFindById.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeDiaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma TurmaDisponibilidadeDia.
    ///
    /// Item da busca.
    ///
    /// Corpo de resposta da operação TurmaDisponibilidadeDiaFindById.
    ///
    /// Corpo de resposta da operação TurmaDisponibilidadeDiaCreate.
    ///
    /// Updated data
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindOneResult
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoFindOneResult IntervaloDeTempo { get; set; }

        [JsonPropertyName("turmaDisponibilidade")]
        public TurmaDisponibilidadeFindOneResult TurmaDisponibilidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaCreateCombinedInput
    {
        /// <summary>
        /// Corpo de entrada da operação 'TurmaDisponibilidadeDiaCreate'.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeDiaInputCreate Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma TurmaDisponibilidadeDia.
    ///
    /// Corpo de entrada da operação 'TurmaDisponibilidadeDiaCreate'.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaInputCreate
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoInput IntervaloDeTempo { get; set; }

        [JsonPropertyName("turmaDisponibilidade")]
        public TurmaDisponibilidadeFindOneInput TurmaDisponibilidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma TurmaDisponibilidade por ID.
    ///
    /// Disponibilidade da turma.
    /// </summary>
    public partial class TurmaDisponibilidadeFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaCreateCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaDisponibilidadeDiaCreate.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeDiaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaUpdateByIdCombinedInput
    {
        /// <summary>
        /// Data to update
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeDiaInputUpdate Body { get; set; }

        [JsonPropertyName("params")]
        public TurmaDisponibilidadeDiaUpdateByIdCombinedInputParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma TurmaDisponibilidadeDia.
    ///
    /// Data to update
    /// </summary>
    public partial class TurmaDisponibilidadeDiaInputUpdate
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diaSemanaIso")]
        public long? DiaSemanaIso { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public IntervaloDeTempoInput IntervaloDeTempo { get; set; }

        [JsonPropertyName("turmaDisponibilidade")]
        public TurmaDisponibilidadeFindOneInput TurmaDisponibilidade { get; set; }
    }

    public partial class TurmaDisponibilidadeDiaUpdateByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput
    {
        /// <summary>
        /// Updated data
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeDiaFindOneResult Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaDeleteByIdCombinedInput
    {
        [JsonPropertyName("params")]
        public TurmaDisponibilidadeDiaDeleteByIdCombinedInputParams Params { get; set; }
    }

    public partial class TurmaDisponibilidadeDiaDeleteByIdCombinedInputParams
    {
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput
    {
        [JsonPropertyName("body")]
        public bool Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada combinados.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaListCombinedInput
    {
        [JsonPropertyName("queries")]
        public TurmaDisponibilidadeDiaListCombinedInputQueries Queries { get; set; }
    }

    public partial class TurmaDisponibilidadeDiaListCombinedInputQueries
    {
        /// <summary>
        /// Filtros para 'intervaloDeTempo.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.intervaloDeTempo.id")]
        public string[] FilterIntervaloDeTempoId { get; set; }

        /// <summary>
        /// Filtros para 'turmaDisponibilidade.id'.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.turmaDisponibilidade.id")]
        public string[] FilterTurmaDisponibilidadeId { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página da listagem.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Configurações de ordenamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de saída da operação.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaListCombinedSuccessOutput
    {
        /// <summary>
        /// Corpo de resposta da operação TurmaDisponibilidadeDiaList.
        /// </summary>
        [JsonPropertyName("body")]
        public TurmaDisponibilidadeDiaFindAllResult Body { get; set; }
    }

    /// <summary>
    /// Resultados da busca a TurmaDisponibilidadeDias.
    ///
    /// Corpo de resposta da operação TurmaDisponibilidadeDiaList.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaDisponibilidadeDiaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    public partial class PaginatedSortBy
    {
        public static PaginatedSortBy FromJson(string json) => JsonSerializer.Deserialize<PaginatedSortBy>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginatedResultMetaFilter
    {
        public static PaginatedResultMetaFilter FromJson(string json) => JsonSerializer.Deserialize<PaginatedResultMetaFilter>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginatedResultMeta
    {
        public static PaginatedResultMeta FromJson(string json) => JsonSerializer.Deserialize<PaginatedResultMeta>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginatedResultLinks
    {
        public static PaginatedResultLinks FromJson(string json) => JsonSerializer.Deserialize<PaginatedResultLinks>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginatedBaseInput
    {
        public static PaginatedBaseInput FromJson(string json) => JsonSerializer.Deserialize<PaginatedBaseInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginatedInput
    {
        public static PaginatedInput FromJson(string json) => JsonSerializer.Deserialize<PaginatedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Search
    {
        public static Search FromJson(string json) => JsonSerializer.Deserialize<Search>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Arquivo
    {
        public static Arquivo FromJson(string json) => JsonSerializer.Deserialize<Arquivo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoFindOneInput
    {
        public static ArquivoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<ArquivoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoFindOneResult
    {
        public static ArquivoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<ArquivoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Imagem
    {
        public static Imagem FromJson(string json) => JsonSerializer.Deserialize<Imagem>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemFindOneInput
    {
        public static ImagemFindOneInput FromJson(string json) => JsonSerializer.Deserialize<ImagemFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemFindOneFromImagemArquivoResult
    {
        public static ImagemFindOneFromImagemArquivoResult FromJson(string json) => JsonSerializer.Deserialize<ImagemFindOneFromImagemArquivoResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemFindOneResult
    {
        public static ImagemFindOneResult FromJson(string json) => JsonSerializer.Deserialize<ImagemFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivo
    {
        public static ImagemArquivo FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneInput
    {
        public static ImagemArquivoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneFromImagemResult
    {
        public static ImagemArquivoFindOneFromImagemResult FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoFindOneFromImagemResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneResult
    {
        public static ImagemArquivoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthLoginInput
    {
        public static AuthLoginInput FromJson(string json) => JsonSerializer.Deserialize<AuthLoginInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthLoginCombinedInput
    {
        public static AuthLoginCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AuthLoginCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthLoginCombinedSuccessOutput
    {
        public static AuthLoginCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AuthLoginCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthRefreshInput
    {
        public static AuthRefreshInput FromJson(string json) => JsonSerializer.Deserialize<AuthRefreshInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthRefreshCombinedInput
    {
        public static AuthRefreshCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AuthRefreshCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthRefreshCombinedSuccessOutput
    {
        public static AuthRefreshCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AuthRefreshCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthWhoAmIResult
    {
        public static AuthWhoAmIResult FromJson(string json) => JsonSerializer.Deserialize<AuthWhoAmIResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthWhoAmICombinedInput
    {
        public static AuthWhoAmICombinedInput FromJson(string json) => JsonSerializer.Deserialize<AuthWhoAmICombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthWhoAmICombinedSuccessOutput
    {
        public static AuthWhoAmICombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AuthWhoAmICombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthSessionCredentials
    {
        public static AuthSessionCredentials FromJson(string json) => JsonSerializer.Deserialize<AuthSessionCredentials>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthSetInitialPasswordInput
    {
        public static AuthSetInitialPasswordInput FromJson(string json) => JsonSerializer.Deserialize<AuthSetInitialPasswordInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthSetInitialPasswordCombinedInput
    {
        public static AuthSetInitialPasswordCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AuthSetInitialPasswordCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthSetInitialPasswordCombinedSuccessOutput
    {
        public static AuthSetInitialPasswordCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AuthSetInitialPasswordCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Usuario
    {
        public static Usuario FromJson(string json) => JsonSerializer.Deserialize<Usuario>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindAllResult
    {
        public static UsuarioFindAllResult FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindOneInput
    {
        public static UsuarioFindOneInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindOneResult
    {
        public static UsuarioFindOneResult FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioInputCreate
    {
        public static UsuarioInputCreate FromJson(string json) => JsonSerializer.Deserialize<UsuarioInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioInputUpdate
    {
        public static UsuarioInputUpdate FromJson(string json) => JsonSerializer.Deserialize<UsuarioInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoFindAllResult
    {
        public static VinculoFindAllResult FromJson(string json) => JsonSerializer.Deserialize<VinculoFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Vinculo
    {
        public static Vinculo FromJson(string json) => JsonSerializer.Deserialize<Vinculo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoFindOneInput
    {
        public static VinculoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<VinculoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoFindOneResult
    {
        public static VinculoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<VinculoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoUpdateInput
    {
        public static VinculoUpdateInput FromJson(string json) => JsonSerializer.Deserialize<VinculoUpdateInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Ambiente
    {
        public static Ambiente FromJson(string json) => JsonSerializer.Deserialize<Ambiente>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindOneInput
    {
        public static AmbienteFindOneInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindOneResult
    {
        public static AmbienteFindOneResult FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteInputCreate
    {
        public static AmbienteInputCreate FromJson(string json) => JsonSerializer.Deserialize<AmbienteInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteInputUpdate
    {
        public static AmbienteInputUpdate FromJson(string json) => JsonSerializer.Deserialize<AmbienteInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindAllResult
    {
        public static AmbienteFindAllResult FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Bloco
    {
        public static Bloco FromJson(string json) => JsonSerializer.Deserialize<Bloco>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindOneInput
    {
        public static BlocoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<BlocoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindOneResult
    {
        public static BlocoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<BlocoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoInputCreate
    {
        public static BlocoInputCreate FromJson(string json) => JsonSerializer.Deserialize<BlocoInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoInputUpdate
    {
        public static BlocoInputUpdate FromJson(string json) => JsonSerializer.Deserialize<BlocoInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindAllResult
    {
        public static BlocoFindAllResult FromJson(string json) => JsonSerializer.Deserialize<BlocoFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Campus
    {
        public static Campus FromJson(string json) => JsonSerializer.Deserialize<Campus>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindOneInput
    {
        public static CampusFindOneInput FromJson(string json) => JsonSerializer.Deserialize<CampusFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindOneResult
    {
        public static CampusFindOneResult FromJson(string json) => JsonSerializer.Deserialize<CampusFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusInputCreate
    {
        public static CampusInputCreate FromJson(string json) => JsonSerializer.Deserialize<CampusInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusInputUpdate
    {
        public static CampusInputUpdate FromJson(string json) => JsonSerializer.Deserialize<CampusInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindAllResult
    {
        public static CampusFindAllResult FromJson(string json) => JsonSerializer.Deserialize<CampusFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Cidade
    {
        public static Cidade FromJson(string json) => JsonSerializer.Deserialize<Cidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindOneInput
    {
        public static CidadeFindOneInput FromJson(string json) => JsonSerializer.Deserialize<CidadeFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindOneResult
    {
        public static CidadeFindOneResult FromJson(string json) => JsonSerializer.Deserialize<CidadeFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindAllResult
    {
        public static CidadeFindAllResult FromJson(string json) => JsonSerializer.Deserialize<CidadeFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Endereco
    {
        public static Endereco FromJson(string json) => JsonSerializer.Deserialize<Endereco>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoFindOneInput
    {
        public static EnderecoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<EnderecoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoFindOneResult
    {
        public static EnderecoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<EnderecoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoInput
    {
        public static EnderecoInput FromJson(string json) => JsonSerializer.Deserialize<EnderecoInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Estado
    {
        public static Estado FromJson(string json) => JsonSerializer.Deserialize<Estado>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindOneInput
    {
        public static EstadoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<EstadoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindOneResult
    {
        public static EstadoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<EstadoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindAllResult
    {
        public static EstadoFindAllResult FromJson(string json) => JsonSerializer.Deserialize<EstadoFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Reserva
    {
        public static Reserva FromJson(string json) => JsonSerializer.Deserialize<Reserva>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindOneInput
    {
        public static ReservaFindOneInput FromJson(string json) => JsonSerializer.Deserialize<ReservaFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindOneResult
    {
        public static ReservaFindOneResult FromJson(string json) => JsonSerializer.Deserialize<ReservaFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaInputCreate
    {
        public static ReservaInputCreate FromJson(string json) => JsonSerializer.Deserialize<ReservaInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaInputUpdate
    {
        public static ReservaInputUpdate FromJson(string json) => JsonSerializer.Deserialize<ReservaInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindAllResult
    {
        public static ReservaFindAllResult FromJson(string json) => JsonSerializer.Deserialize<ReservaFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Curso
    {
        public static Curso FromJson(string json) => JsonSerializer.Deserialize<Curso>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindOneInput
    {
        public static CursoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<CursoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindOneResult
    {
        public static CursoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<CursoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoInputCreate
    {
        public static CursoInputCreate FromJson(string json) => JsonSerializer.Deserialize<CursoInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoInputUpdate
    {
        public static CursoInputUpdate FromJson(string json) => JsonSerializer.Deserialize<CursoInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindAllResult
    {
        public static CursoFindAllResult FromJson(string json) => JsonSerializer.Deserialize<CursoFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Diario
    {
        public static Diario FromJson(string json) => JsonSerializer.Deserialize<Diario>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindOneInput
    {
        public static DiarioFindOneInput FromJson(string json) => JsonSerializer.Deserialize<DiarioFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindOneResult
    {
        public static DiarioFindOneResult FromJson(string json) => JsonSerializer.Deserialize<DiarioFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioInputCreate
    {
        public static DiarioInputCreate FromJson(string json) => JsonSerializer.Deserialize<DiarioInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioInputUpdate
    {
        public static DiarioInputUpdate FromJson(string json) => JsonSerializer.Deserialize<DiarioInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindAllResult
    {
        public static DiarioFindAllResult FromJson(string json) => JsonSerializer.Deserialize<DiarioFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessor
    {
        public static DiarioProfessor FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessor>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneInput
    {
        public static DiarioProfessorFindOneInput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneResult
    {
        public static DiarioProfessorFindOneResult FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorInputCreate
    {
        public static DiarioProfessorInputCreate FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorInputUpdate
    {
        public static DiarioProfessorInputUpdate FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindAllResult
    {
        public static DiarioProfessorFindAllResult FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Modalidade
    {
        public static Modalidade FromJson(string json) => JsonSerializer.Deserialize<Modalidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindOneInput
    {
        public static ModalidadeFindOneInput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindOneResult
    {
        public static ModalidadeFindOneResult FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeInputCreate
    {
        public static ModalidadeInputCreate FromJson(string json) => JsonSerializer.Deserialize<ModalidadeInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeInputUpdate
    {
        public static ModalidadeInputUpdate FromJson(string json) => JsonSerializer.Deserialize<ModalidadeInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindAllResult
    {
        public static ModalidadeFindAllResult FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Disciplina
    {
        public static Disciplina FromJson(string json) => JsonSerializer.Deserialize<Disciplina>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindOneInput
    {
        public static DisciplinaFindOneInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindOneResult
    {
        public static DisciplinaFindOneResult FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaInputCreate
    {
        public static DisciplinaInputCreate FromJson(string json) => JsonSerializer.Deserialize<DisciplinaInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaInputUpdate
    {
        public static DisciplinaInputUpdate FromJson(string json) => JsonSerializer.Deserialize<DisciplinaInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindAllResult
    {
        public static DisciplinaFindAllResult FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Turma
    {
        public static Turma FromJson(string json) => JsonSerializer.Deserialize<Turma>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindOneInput
    {
        public static TurmaFindOneInput FromJson(string json) => JsonSerializer.Deserialize<TurmaFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindOneResult
    {
        public static TurmaFindOneResult FromJson(string json) => JsonSerializer.Deserialize<TurmaFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaInputCreate
    {
        public static TurmaInputCreate FromJson(string json) => JsonSerializer.Deserialize<TurmaInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaInputUpdate
    {
        public static TurmaInputUpdate FromJson(string json) => JsonSerializer.Deserialize<TurmaInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindAllResult
    {
        public static TurmaFindAllResult FromJson(string json) => JsonSerializer.Deserialize<TurmaFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempo
    {
        public static IntervaloDeTempo FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempoFindOneResult
    {
        public static IntervaloDeTempoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempoInput
    {
        public static IntervaloDeTempoInput FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempoInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivo
    {
        public static CalendarioLetivo FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneInput
    {
        public static CalendarioLetivoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneResult
    {
        public static CalendarioLetivoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoInputCreate
    {
        public static CalendarioLetivoInputCreate FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoInputUpdate
    {
        public static CalendarioLetivoInputUpdate FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindAllResult
    {
        public static CalendarioLetivoFindAllResult FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendario
    {
        public static DiaCalendario FromJson(string json) => JsonSerializer.Deserialize<DiaCalendario>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneInput
    {
        public static DiaCalendarioFindOneInput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneResult
    {
        public static DiaCalendarioFindOneResult FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioInputCreate
    {
        public static DiaCalendarioInputCreate FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioInputUpdate
    {
        public static DiaCalendarioInputUpdate FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindAllResult
    {
        public static DiaCalendarioFindAllResult FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Etapa
    {
        public static Etapa FromJson(string json) => JsonSerializer.Deserialize<Etapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindOneInput
    {
        public static EtapaFindOneInput FromJson(string json) => JsonSerializer.Deserialize<EtapaFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindOneResult
    {
        public static EtapaFindOneResult FromJson(string json) => JsonSerializer.Deserialize<EtapaFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaInputCreate
    {
        public static EtapaInputCreate FromJson(string json) => JsonSerializer.Deserialize<EtapaInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaInputUpdate
    {
        public static EtapaInputUpdate FromJson(string json) => JsonSerializer.Deserialize<EtapaInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindAllResult
    {
        public static EtapaFindAllResult FromJson(string json) => JsonSerializer.Deserialize<EtapaFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Aula
    {
        public static Aula FromJson(string json) => JsonSerializer.Deserialize<Aula>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindOneInput
    {
        public static AulaFindOneInput FromJson(string json) => JsonSerializer.Deserialize<AulaFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindOneResult
    {
        public static AulaFindOneResult FromJson(string json) => JsonSerializer.Deserialize<AulaFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaInputCreate
    {
        public static AulaInputCreate FromJson(string json) => JsonSerializer.Deserialize<AulaInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaInputUpdate
    {
        public static AulaInputUpdate FromJson(string json) => JsonSerializer.Deserialize<AulaInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindAllResult
    {
        public static AulaFindAllResult FromJson(string json) => JsonSerializer.Deserialize<AulaFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Evento
    {
        public static Evento FromJson(string json) => JsonSerializer.Deserialize<Evento>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindOneInput
    {
        public static EventoFindOneInput FromJson(string json) => JsonSerializer.Deserialize<EventoFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindOneResult
    {
        public static EventoFindOneResult FromJson(string json) => JsonSerializer.Deserialize<EventoFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoInputCreate
    {
        public static EventoInputCreate FromJson(string json) => JsonSerializer.Deserialize<EventoInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoInputUpdate
    {
        public static EventoInputUpdate FromJson(string json) => JsonSerializer.Deserialize<EventoInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindAllResult
    {
        public static EventoFindAllResult FromJson(string json) => JsonSerializer.Deserialize<EventoFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidade
    {
        public static TurmaDisponibilidade FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneInput
    {
        public static TurmaDisponibilidadeFindOneInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneResult
    {
        public static TurmaDisponibilidadeFindOneResult FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeInputCreate
    {
        public static TurmaDisponibilidadeInputCreate FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeInputUpdate
    {
        public static TurmaDisponibilidadeInputUpdate FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindAllResult
    {
        public static TurmaDisponibilidadeFindAllResult FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDia
    {
        public static TurmaDisponibilidadeDia FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDia>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindOneInput
    {
        public static TurmaDisponibilidadeDiaFindOneInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaFindOneInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindOneResult
    {
        public static TurmaDisponibilidadeDiaFindOneResult FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaFindOneResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaInputCreate
    {
        public static TurmaDisponibilidadeDiaInputCreate FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaInputCreate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaInputUpdate
    {
        public static TurmaDisponibilidadeDiaInputUpdate FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaInputUpdate>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindAllResult
    {
        public static TurmaDisponibilidadeDiaFindAllResult FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaFindAllResult>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoGetFileCombinedInput
    {
        public static ArquivoGetFileCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ArquivoGetFileCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoGetFileCombinedSuccessOutput
    {
        public static ArquivoGetFileCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ArquivoGetFileCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindByIdCombinedInput
    {
        public static UsuarioFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindByIdCombinedSuccessOutput
    {
        public static UsuarioFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioCreateCombinedInput
    {
        public static UsuarioCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioCreateCombinedSuccessOutput
    {
        public static UsuarioCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioUpdateByIdCombinedInput
    {
        public static UsuarioUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioUpdateByIdCombinedSuccessOutput
    {
        public static UsuarioUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioDeleteByIdCombinedInput
    {
        public static UsuarioDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioDeleteByIdCombinedSuccessOutput
    {
        public static UsuarioDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioListCombinedInput
    {
        public static UsuarioListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioListCombinedSuccessOutput
    {
        public static UsuarioListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioGetCoverImageCombinedInput
    {
        public static UsuarioGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioGetCoverImageCombinedSuccessOutput
    {
        public static UsuarioGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioSetCoverImageCombinedInput
    {
        public static UsuarioSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioSetCoverImageCombinedSuccessOutput
    {
        public static UsuarioSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioGetProfileImageCombinedInput
    {
        public static UsuarioGetProfileImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioGetProfileImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioGetProfileImageCombinedSuccessOutput
    {
        public static UsuarioGetProfileImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioGetProfileImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioSetProfileImageCombinedInput
    {
        public static UsuarioSetProfileImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<UsuarioSetProfileImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioSetProfileImageCombinedSuccessOutput
    {
        public static UsuarioSetProfileImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<UsuarioSetProfileImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoFindByIdCombinedInput
    {
        public static VinculoFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<VinculoFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoFindByIdCombinedSuccessOutput
    {
        public static VinculoFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<VinculoFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoListCombinedInput
    {
        public static VinculoListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<VinculoListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoListCombinedSuccessOutput
    {
        public static VinculoListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<VinculoListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoUpdateCombinedInput
    {
        public static VinculoUpdateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<VinculoUpdateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class VinculoUpdateCombinedSuccessOutput
    {
        public static VinculoUpdateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<VinculoUpdateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindByIdCombinedInput
    {
        public static AmbienteFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindByIdCombinedSuccessOutput
    {
        public static AmbienteFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteCreateCombinedInput
    {
        public static AmbienteCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteCreateCombinedSuccessOutput
    {
        public static AmbienteCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteUpdateByIdCombinedInput
    {
        public static AmbienteUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteUpdateByIdCombinedSuccessOutput
    {
        public static AmbienteUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteDeleteByIdCombinedInput
    {
        public static AmbienteDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteDeleteByIdCombinedSuccessOutput
    {
        public static AmbienteDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteListCombinedInput
    {
        public static AmbienteListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteListCombinedSuccessOutput
    {
        public static AmbienteListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteGetCoverImageCombinedInput
    {
        public static AmbienteGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteGetCoverImageCombinedSuccessOutput
    {
        public static AmbienteGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteSetCoverImageCombinedInput
    {
        public static AmbienteSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AmbienteSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteSetCoverImageCombinedSuccessOutput
    {
        public static AmbienteSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AmbienteSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindByIdCombinedInput
    {
        public static BlocoFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindByIdCombinedSuccessOutput
    {
        public static BlocoFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoCreateCombinedInput
    {
        public static BlocoCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoCreateCombinedSuccessOutput
    {
        public static BlocoCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoUpdateByIdCombinedInput
    {
        public static BlocoUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoUpdateByIdCombinedSuccessOutput
    {
        public static BlocoUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoDeleteByIdCombinedInput
    {
        public static BlocoDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoDeleteByIdCombinedSuccessOutput
    {
        public static BlocoDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoListCombinedInput
    {
        public static BlocoListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoListCombinedSuccessOutput
    {
        public static BlocoListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoGetCoverImageCombinedInput
    {
        public static BlocoGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoGetCoverImageCombinedSuccessOutput
    {
        public static BlocoGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoSetCoverImageCombinedInput
    {
        public static BlocoSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<BlocoSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoSetCoverImageCombinedSuccessOutput
    {
        public static BlocoSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<BlocoSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindByIdCombinedInput
    {
        public static CampusFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CampusFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindByIdCombinedSuccessOutput
    {
        public static CampusFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CampusFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusCreateCombinedInput
    {
        public static CampusCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CampusCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusCreateCombinedSuccessOutput
    {
        public static CampusCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CampusCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusUpdateByIdCombinedInput
    {
        public static CampusUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CampusUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusUpdateByIdCombinedSuccessOutput
    {
        public static CampusUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CampusUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusDeleteByIdCombinedInput
    {
        public static CampusDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CampusDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusDeleteByIdCombinedSuccessOutput
    {
        public static CampusDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CampusDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusListCombinedInput
    {
        public static CampusListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CampusListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusListCombinedSuccessOutput
    {
        public static CampusListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CampusListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindByIdCombinedInput
    {
        public static CidadeFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CidadeFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindByIdCombinedSuccessOutput
    {
        public static CidadeFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CidadeFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeListCombinedInput
    {
        public static CidadeListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CidadeListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeListCombinedSuccessOutput
    {
        public static CidadeListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CidadeListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindByIdCombinedInput
    {
        public static EstadoFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EstadoFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindByIdCombinedSuccessOutput
    {
        public static EstadoFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EstadoFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoListCombinedInput
    {
        public static EstadoListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EstadoListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoListCombinedSuccessOutput
    {
        public static EstadoListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EstadoListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindByIdCombinedInput
    {
        public static ReservaFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ReservaFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindByIdCombinedSuccessOutput
    {
        public static ReservaFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ReservaFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaCreateCombinedInput
    {
        public static ReservaCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ReservaCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaCreateCombinedSuccessOutput
    {
        public static ReservaCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ReservaCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaUpdateByIdCombinedInput
    {
        public static ReservaUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ReservaUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaUpdateByIdCombinedSuccessOutput
    {
        public static ReservaUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ReservaUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaDeleteByIdCombinedInput
    {
        public static ReservaDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ReservaDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaDeleteByIdCombinedSuccessOutput
    {
        public static ReservaDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ReservaDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaListCombinedInput
    {
        public static ReservaListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ReservaListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaListCombinedSuccessOutput
    {
        public static ReservaListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ReservaListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindByIdCombinedInput
    {
        public static CursoFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindByIdCombinedSuccessOutput
    {
        public static CursoFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoCreateCombinedInput
    {
        public static CursoCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoCreateCombinedSuccessOutput
    {
        public static CursoCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoUpdateByIdCombinedInput
    {
        public static CursoUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoUpdateByIdCombinedSuccessOutput
    {
        public static CursoUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoDeleteByIdCombinedInput
    {
        public static CursoDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoDeleteByIdCombinedSuccessOutput
    {
        public static CursoDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoListCombinedInput
    {
        public static CursoListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoListCombinedSuccessOutput
    {
        public static CursoListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoGetCoverImageCombinedInput
    {
        public static CursoGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoGetCoverImageCombinedSuccessOutput
    {
        public static CursoGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoSetCoverImageCombinedInput
    {
        public static CursoSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CursoSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoSetCoverImageCombinedSuccessOutput
    {
        public static CursoSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CursoSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindByIdCombinedInput
    {
        public static DiarioFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindByIdCombinedSuccessOutput
    {
        public static DiarioFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioCreateCombinedInput
    {
        public static DiarioCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioCreateCombinedSuccessOutput
    {
        public static DiarioCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioUpdateByIdCombinedInput
    {
        public static DiarioUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioUpdateByIdCombinedSuccessOutput
    {
        public static DiarioUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioDeleteByIdCombinedInput
    {
        public static DiarioDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioDeleteByIdCombinedSuccessOutput
    {
        public static DiarioDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioListCombinedInput
    {
        public static DiarioListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioListCombinedSuccessOutput
    {
        public static DiarioListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioGetCoverImageCombinedInput
    {
        public static DiarioGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioGetCoverImageCombinedSuccessOutput
    {
        public static DiarioGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioSetCoverImageCombinedInput
    {
        public static DiarioSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioSetCoverImageCombinedSuccessOutput
    {
        public static DiarioSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindByIdCombinedInput
    {
        public static DiarioProfessorFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindByIdCombinedSuccessOutput
    {
        public static DiarioProfessorFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorCreateCombinedInput
    {
        public static DiarioProfessorCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorCreateCombinedSuccessOutput
    {
        public static DiarioProfessorCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorUpdateByIdCombinedInput
    {
        public static DiarioProfessorUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorUpdateByIdCombinedSuccessOutput
    {
        public static DiarioProfessorUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorDeleteByIdCombinedInput
    {
        public static DiarioProfessorDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorDeleteByIdCombinedSuccessOutput
    {
        public static DiarioProfessorDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorListCombinedInput
    {
        public static DiarioProfessorListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorListCombinedSuccessOutput
    {
        public static DiarioProfessorListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindByIdCombinedInput
    {
        public static ModalidadeFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindByIdCombinedSuccessOutput
    {
        public static ModalidadeFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeCreateCombinedInput
    {
        public static ModalidadeCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeCreateCombinedSuccessOutput
    {
        public static ModalidadeCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeUpdateByIdCombinedInput
    {
        public static ModalidadeUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeUpdateByIdCombinedSuccessOutput
    {
        public static ModalidadeUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeDeleteByIdCombinedInput
    {
        public static ModalidadeDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeDeleteByIdCombinedSuccessOutput
    {
        public static ModalidadeDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeListCombinedInput
    {
        public static ModalidadeListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeListCombinedSuccessOutput
    {
        public static ModalidadeListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<ModalidadeListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindByIdCombinedInput
    {
        public static DisciplinaFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindByIdCombinedSuccessOutput
    {
        public static DisciplinaFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaCreateCombinedInput
    {
        public static DisciplinaCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaCreateCombinedSuccessOutput
    {
        public static DisciplinaCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaUpdateByIdCombinedInput
    {
        public static DisciplinaUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaUpdateByIdCombinedSuccessOutput
    {
        public static DisciplinaUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaDeleteByIdCombinedInput
    {
        public static DisciplinaDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaDeleteByIdCombinedSuccessOutput
    {
        public static DisciplinaDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaListCombinedInput
    {
        public static DisciplinaListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaListCombinedSuccessOutput
    {
        public static DisciplinaListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaGetCoverImageCombinedInput
    {
        public static DisciplinaGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaGetCoverImageCombinedSuccessOutput
    {
        public static DisciplinaGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaSetCoverImageCombinedInput
    {
        public static DisciplinaSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaSetCoverImageCombinedSuccessOutput
    {
        public static DisciplinaSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DisciplinaSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindByIdCombinedInput
    {
        public static TurmaFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindByIdCombinedSuccessOutput
    {
        public static TurmaFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaCreateCombinedInput
    {
        public static TurmaCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaCreateCombinedSuccessOutput
    {
        public static TurmaCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaUpdateByIdCombinedInput
    {
        public static TurmaUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaUpdateByIdCombinedSuccessOutput
    {
        public static TurmaUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDeleteByIdCombinedInput
    {
        public static TurmaDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDeleteByIdCombinedSuccessOutput
    {
        public static TurmaDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaListCombinedInput
    {
        public static TurmaListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaListCombinedSuccessOutput
    {
        public static TurmaListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaGetCoverImageCombinedInput
    {
        public static TurmaGetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaGetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaGetCoverImageCombinedSuccessOutput
    {
        public static TurmaGetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaGetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaSetCoverImageCombinedInput
    {
        public static TurmaSetCoverImageCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaSetCoverImageCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaSetCoverImageCombinedSuccessOutput
    {
        public static TurmaSetCoverImageCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaSetCoverImageCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindByIdCombinedInput
    {
        public static CalendarioLetivoFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindByIdCombinedSuccessOutput
    {
        public static CalendarioLetivoFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoCreateCombinedInput
    {
        public static CalendarioLetivoCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoCreateCombinedSuccessOutput
    {
        public static CalendarioLetivoCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoUpdateByIdCombinedInput
    {
        public static CalendarioLetivoUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoUpdateByIdCombinedSuccessOutput
    {
        public static CalendarioLetivoUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoDeleteByIdCombinedInput
    {
        public static CalendarioLetivoDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoDeleteByIdCombinedSuccessOutput
    {
        public static CalendarioLetivoDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoListCombinedInput
    {
        public static CalendarioLetivoListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoListCombinedSuccessOutput
    {
        public static CalendarioLetivoListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindByIdCombinedInput
    {
        public static DiaCalendarioFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindByIdCombinedSuccessOutput
    {
        public static DiaCalendarioFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioCreateCombinedInput
    {
        public static DiaCalendarioCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioCreateCombinedSuccessOutput
    {
        public static DiaCalendarioCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioUpdateByIdCombinedInput
    {
        public static DiaCalendarioUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioUpdateByIdCombinedSuccessOutput
    {
        public static DiaCalendarioUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioDeleteByIdCombinedInput
    {
        public static DiaCalendarioDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioDeleteByIdCombinedSuccessOutput
    {
        public static DiaCalendarioDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioListCombinedInput
    {
        public static DiaCalendarioListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioListCombinedSuccessOutput
    {
        public static DiaCalendarioListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindByIdCombinedInput
    {
        public static EtapaFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EtapaFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindByIdCombinedSuccessOutput
    {
        public static EtapaFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EtapaFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaCreateCombinedInput
    {
        public static EtapaCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EtapaCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaCreateCombinedSuccessOutput
    {
        public static EtapaCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EtapaCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaUpdateByIdCombinedInput
    {
        public static EtapaUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EtapaUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaUpdateByIdCombinedSuccessOutput
    {
        public static EtapaUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EtapaUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaDeleteByIdCombinedInput
    {
        public static EtapaDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EtapaDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaDeleteByIdCombinedSuccessOutput
    {
        public static EtapaDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EtapaDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaListCombinedInput
    {
        public static EtapaListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EtapaListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaListCombinedSuccessOutput
    {
        public static EtapaListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EtapaListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindByIdCombinedInput
    {
        public static AulaFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AulaFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindByIdCombinedSuccessOutput
    {
        public static AulaFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AulaFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaCreateCombinedInput
    {
        public static AulaCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AulaCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaCreateCombinedSuccessOutput
    {
        public static AulaCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AulaCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaUpdateByIdCombinedInput
    {
        public static AulaUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AulaUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaUpdateByIdCombinedSuccessOutput
    {
        public static AulaUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AulaUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaDeleteByIdCombinedInput
    {
        public static AulaDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AulaDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaDeleteByIdCombinedSuccessOutput
    {
        public static AulaDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AulaDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaListCombinedInput
    {
        public static AulaListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<AulaListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaListCombinedSuccessOutput
    {
        public static AulaListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<AulaListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindByIdCombinedInput
    {
        public static EventoFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EventoFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindByIdCombinedSuccessOutput
    {
        public static EventoFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EventoFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoCreateCombinedInput
    {
        public static EventoCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EventoCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoCreateCombinedSuccessOutput
    {
        public static EventoCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EventoCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoUpdateByIdCombinedInput
    {
        public static EventoUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EventoUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoUpdateByIdCombinedSuccessOutput
    {
        public static EventoUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EventoUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoDeleteByIdCombinedInput
    {
        public static EventoDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EventoDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoDeleteByIdCombinedSuccessOutput
    {
        public static EventoDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EventoDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoListCombinedInput
    {
        public static EventoListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<EventoListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoListCombinedSuccessOutput
    {
        public static EventoListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<EventoListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindByIdCombinedInput
    {
        public static TurmaDisponibilidadeFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindByIdCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeCreateCombinedInput
    {
        public static TurmaDisponibilidadeCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeCreateCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeUpdateByIdCombinedInput
    {
        public static TurmaDisponibilidadeUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeUpdateByIdCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDeleteByIdCombinedInput
    {
        public static TurmaDisponibilidadeDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDeleteByIdCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeListCombinedInput
    {
        public static TurmaDisponibilidadeListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeListCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindByIdCombinedInput
    {
        public static TurmaDisponibilidadeDiaFindByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaFindByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindByIdCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeDiaFindByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaFindByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaCreateCombinedInput
    {
        public static TurmaDisponibilidadeDiaCreateCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaCreateCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaCreateCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeDiaCreateCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaCreateCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaUpdateByIdCombinedInput
    {
        public static TurmaDisponibilidadeDiaUpdateByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaUpdateByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaDeleteByIdCombinedInput
    {
        public static TurmaDisponibilidadeDiaDeleteByIdCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaDeleteByIdCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaListCombinedInput
    {
        public static TurmaDisponibilidadeDiaListCombinedInput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaListCombinedInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaListCombinedSuccessOutput
    {
        public static TurmaDisponibilidadeDiaListCombinedSuccessOutput FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDiaListCombinedSuccessOutput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this PaginatedSortBy self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginatedResultMetaFilter self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginatedResultMeta self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginatedResultLinks self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginatedBaseInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginatedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Search self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Arquivo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Imagem self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemFindOneFromImagemArquivoResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneFromImagemResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthLoginInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthLoginCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthLoginCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthRefreshInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthRefreshCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthRefreshCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthWhoAmIResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthWhoAmICombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthWhoAmICombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthSessionCredentials self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthSetInitialPasswordInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthSetInitialPasswordCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthSetInitialPasswordCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Usuario self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Vinculo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoUpdateInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Ambiente self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Bloco self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Campus self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Cidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Endereco self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Estado self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Reserva self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Curso self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Diario self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessor self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Modalidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Disciplina self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Turma self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendario self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Etapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Aula self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Evento self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDia self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindOneInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindOneResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaInputCreate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaInputUpdate self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindAllResult self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoGetFileCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoGetFileCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioGetProfileImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioGetProfileImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioSetProfileImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioSetProfileImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoUpdateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this VinculoUpdateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaGetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaGetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaSetCoverImageCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaSetCoverImageCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaCreateCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaCreateCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaUpdateByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaUpdateByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaDeleteByIdCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaDeleteByIdCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaListCombinedInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaListCombinedSuccessOutput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)
        {
            Converters =
            {
                new DateOnlyConverter(),
                new TimeOnlyConverter(),
                IsoDateTimeOffsetConverter.Singleton
            },
        };
    }
    
    public class DateOnlyConverter : JsonConverter<DateOnly>
    {
        private readonly string serializationFormat;
        public DateOnlyConverter() : this(null) { }

        public DateOnlyConverter(string? serializationFormat)
        {
                this.serializationFormat = serializationFormat ?? "yyyy-MM-dd";
        }

        public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
                var value = reader.GetString();
                return DateOnly.Parse(value!);
        }

        public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options)
                => writer.WriteStringValue(value.ToString(serializationFormat));
    }

    public class TimeOnlyConverter : JsonConverter<TimeOnly>
    {
        private readonly string serializationFormat;

        public TimeOnlyConverter() : this(null) { }

        public TimeOnlyConverter(string? serializationFormat)
        {
                this.serializationFormat = serializationFormat ?? "HH:mm:ss.fff";
        }

        public override TimeOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
                var value = reader.GetString();
                return TimeOnly.Parse(value!);
        }

        public override void Write(Utf8JsonWriter writer, TimeOnly value, JsonSerializerOptions options)
                => writer.WriteStringValue(value.ToString(serializationFormat));
    }

    internal class IsoDateTimeOffsetConverter : JsonConverter<DateTimeOffset>
    {
        public override bool CanConvert(Type t) => t == typeof(DateTimeOffset);

        private const string DefaultDateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK";

        private DateTimeStyles _dateTimeStyles = DateTimeStyles.RoundtripKind;
        private string? _dateTimeFormat;
        private CultureInfo? _culture;

        public DateTimeStyles DateTimeStyles
        {
                get => _dateTimeStyles;
                set => _dateTimeStyles = value;
        }

        public string? DateTimeFormat
        {
                get => _dateTimeFormat ?? string.Empty;
                set => _dateTimeFormat = (string.IsNullOrEmpty(value)) ? null : value;
        }

        public CultureInfo Culture
        {
                get => _culture ?? CultureInfo.CurrentCulture;
                set => _culture = value;
        }

        public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)
        {
                string text;


                if ((_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal
                        || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
                {
                        value = value.ToUniversalTime();
                }

                text = value.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture);

                writer.WriteStringValue(text);
        }

        public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
                string? dateText = reader.GetString();

                if (string.IsNullOrEmpty(dateText) == false)
                {
                        if (!string.IsNullOrEmpty(_dateTimeFormat))
                        {
                                return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);
                        }
                        else
                        {
                                return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);
                        }
                }
                else
                {
                        return default(DateTimeOffset);
                }
        }


        public static readonly IsoDateTimeOffsetConverter Singleton = new IsoDateTimeOffsetConverter();
    }
}
#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
