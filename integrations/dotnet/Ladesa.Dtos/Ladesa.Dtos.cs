// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do one of these:
//
//    using Ladesa.Dtos;
//
//    var ambiente = Ambiente.FromJson(jsonString);
//    var ambienteCreateOperation = AmbienteCreateOperation.FromJson(jsonString);
//    var ambienteDeleteByIdOperation = AmbienteDeleteByIdOperation.FromJson(jsonString);
//    var ambienteFindOneByIdOperation = AmbienteFindOneByIdOperation.FromJson(jsonString);
//    var ambienteFindOneInputView = AmbienteFindOneInputView.FromJson(jsonString);
//    var ambienteFindOneResultView = AmbienteFindOneResultView.FromJson(jsonString);
//    var ambienteGetCoverImage = AmbienteGetCoverImage.FromJson(jsonString);
//    var ambienteInputCreateView = AmbienteInputCreateView.FromJson(jsonString);
//    var ambienteInputUpdateView = AmbienteInputUpdateView.FromJson(jsonString);
//    var ambienteListOperation = AmbienteListOperation.FromJson(jsonString);
//    var ambienteListResultView = AmbienteListResultView.FromJson(jsonString);
//    var ambienteSetCoverImage = AmbienteSetCoverImage.FromJson(jsonString);
//    var ambienteUpdateByIdOperation = AmbienteUpdateByIdOperation.FromJson(jsonString);
//    var ambienteView = AmbienteView.FromJson(jsonString);
//    var arquivo = Arquivo.FromJson(jsonString);
//    var arquivoFindOneInputView = ArquivoFindOneInputView.FromJson(jsonString);
//    var arquivoFindOneResultView = ArquivoFindOneResultView.FromJson(jsonString);
//    var arquivoGetFileOperation = ArquivoGetFileOperation.FromJson(jsonString);
//    var arquivoView = ArquivoView.FromJson(jsonString);
//    var aula = Aula.FromJson(jsonString);
//    var aulaCreateOperation = AulaCreateOperation.FromJson(jsonString);
//    var aulaDeleteByIdOperation = AulaDeleteByIdOperation.FromJson(jsonString);
//    var aulaFindOneByIdOperation = AulaFindOneByIdOperation.FromJson(jsonString);
//    var aulaFindOneInputView = AulaFindOneInputView.FromJson(jsonString);
//    var aulaFindOneResultView = AulaFindOneResultView.FromJson(jsonString);
//    var aulaInputCreateView = AulaInputCreateView.FromJson(jsonString);
//    var aulaInputUpdateView = AulaInputUpdateView.FromJson(jsonString);
//    var aulaListOperation = AulaListOperation.FromJson(jsonString);
//    var aulaListResultView = AulaListResultView.FromJson(jsonString);
//    var aulaUpdateByIdOperation = AulaUpdateByIdOperation.FromJson(jsonString);
//    var aulaView = AulaView.FromJson(jsonString);
//    var authCredentialsSetInitialPasswordInputView = AuthCredentialsSetInitialPasswordInputView.FromJson(jsonString);
//    var authCredentialsSetInitialPasswordOperation = AuthCredentialsSetInitialPasswordOperation.FromJson(jsonString);
//    var authLoginInputView = AuthLoginInputView.FromJson(jsonString);
//    var authLoginOperation = AuthLoginOperation.FromJson(jsonString);
//    var authRefreshInputView = AuthRefreshInputView.FromJson(jsonString);
//    var authRefreshOperation = AuthRefreshOperation.FromJson(jsonString);
//    var authSessionCredentialsView = AuthSessionCredentialsView.FromJson(jsonString);
//    var authWhoAmIOperation = AuthWhoAmIOperation.FromJson(jsonString);
//    var authWhoAmIResultView = AuthWhoAmIResultView.FromJson(jsonString);
//    var bloco = Bloco.FromJson(jsonString);
//    var blocoCreateOperation = BlocoCreateOperation.FromJson(jsonString);
//    var blocoDeleteByIdOperation = BlocoDeleteByIdOperation.FromJson(jsonString);
//    var blocoFindOneByIdOperation = BlocoFindOneByIdOperation.FromJson(jsonString);
//    var blocoFindOneInputView = BlocoFindOneInputView.FromJson(jsonString);
//    var blocoFindOneResultView = BlocoFindOneResultView.FromJson(jsonString);
//    var blocoGetCoverImage = BlocoGetCoverImage.FromJson(jsonString);
//    var blocoInputCreateView = BlocoInputCreateView.FromJson(jsonString);
//    var blocoInputUpdateView = BlocoInputUpdateView.FromJson(jsonString);
//    var blocoListOperation = BlocoListOperation.FromJson(jsonString);
//    var blocoListResultView = BlocoListResultView.FromJson(jsonString);
//    var blocoSetCoverImage = BlocoSetCoverImage.FromJson(jsonString);
//    var blocoUpdateByIdOperation = BlocoUpdateByIdOperation.FromJson(jsonString);
//    var blocoView = BlocoView.FromJson(jsonString);
//    var calendarioLetivo = CalendarioLetivo.FromJson(jsonString);
//    var calendarioLetivoCreateOperation = CalendarioLetivoCreateOperation.FromJson(jsonString);
//    var calendarioLetivoDeleteByIdOperation = CalendarioLetivoDeleteByIdOperation.FromJson(jsonString);
//    var calendarioLetivoFindOneByIdOperation = CalendarioLetivoFindOneByIdOperation.FromJson(jsonString);
//    var calendarioLetivoFindOneInputView = CalendarioLetivoFindOneInputView.FromJson(jsonString);
//    var calendarioLetivoFindOneResultView = CalendarioLetivoFindOneResultView.FromJson(jsonString);
//    var calendarioLetivoInputCreateView = CalendarioLetivoInputCreateView.FromJson(jsonString);
//    var calendarioLetivoInputUpdateView = CalendarioLetivoInputUpdateView.FromJson(jsonString);
//    var calendarioLetivoListOperation = CalendarioLetivoListOperation.FromJson(jsonString);
//    var calendarioLetivoListResultView = CalendarioLetivoListResultView.FromJson(jsonString);
//    var calendarioLetivoUpdateByIdOperation = CalendarioLetivoUpdateByIdOperation.FromJson(jsonString);
//    var calendarioLetivoView = CalendarioLetivoView.FromJson(jsonString);
//    var campus = Campus.FromJson(jsonString);
//    var campusCreateOperation = CampusCreateOperation.FromJson(jsonString);
//    var campusDeleteOneByIdOperation = CampusDeleteOneByIdOperation.FromJson(jsonString);
//    var campusFindOneByIdOperation = CampusFindOneByIdOperation.FromJson(jsonString);
//    var campusFindOneInputView = CampusFindOneInputView.FromJson(jsonString);
//    var campusFindOneResultView = CampusFindOneResultView.FromJson(jsonString);
//    var campusInputCreateView = CampusInputCreateView.FromJson(jsonString);
//    var campusInputUpdateView = CampusInputUpdateView.FromJson(jsonString);
//    var campusListOperation = CampusListOperation.FromJson(jsonString);
//    var campusListResultView = CampusListResultView.FromJson(jsonString);
//    var campusUpdateOperation = CampusUpdateOperation.FromJson(jsonString);
//    var campusView = CampusView.FromJson(jsonString);
//    var cidade = Cidade.FromJson(jsonString);
//    var cidadeFindOneByIdOperation = CidadeFindOneByIdOperation.FromJson(jsonString);
//    var cidadeFindOneInputView = CidadeFindOneInputView.FromJson(jsonString);
//    var cidadeFindOneResultView = CidadeFindOneResultView.FromJson(jsonString);
//    var cidadeListOperation = CidadeListOperation.FromJson(jsonString);
//    var cidadeListResultView = CidadeListResultView.FromJson(jsonString);
//    var cidadeView = CidadeView.FromJson(jsonString);
//    var curso = Curso.FromJson(jsonString);
//    var cursoCreateOperation = CursoCreateOperation.FromJson(jsonString);
//    var cursoDeleteByIdOperation = CursoDeleteByIdOperation.FromJson(jsonString);
//    var cursoFindOneByIdOperation = CursoFindOneByIdOperation.FromJson(jsonString);
//    var cursoFindOneInputView = CursoFindOneInputView.FromJson(jsonString);
//    var cursoFindOneResultView = CursoFindOneResultView.FromJson(jsonString);
//    var cursoGetImagemCapa = CursoGetImagemCapa.FromJson(jsonString);
//    var cursoInputCreateView = CursoInputCreateView.FromJson(jsonString);
//    var cursoInputUpdateView = CursoInputUpdateView.FromJson(jsonString);
//    var cursoListOperation = CursoListOperation.FromJson(jsonString);
//    var cursoListResultView = CursoListResultView.FromJson(jsonString);
//    var cursoSetImagemCapa = CursoSetImagemCapa.FromJson(jsonString);
//    var cursoUpdateByIdOperation = CursoUpdateByIdOperation.FromJson(jsonString);
//    var cursoView = CursoView.FromJson(jsonString);
//    var datedObject = DatedObject.FromJson(jsonString);
//    var diaCalendario = DiaCalendario.FromJson(jsonString);
//    var diaCalendarioCreateOperation = DiaCalendarioCreateOperation.FromJson(jsonString);
//    var diaCalendarioDeleteByIdOperation = DiaCalendarioDeleteByIdOperation.FromJson(jsonString);
//    var diaCalendarioFindOneByIdOperation = DiaCalendarioFindOneByIdOperation.FromJson(jsonString);
//    var diaCalendarioFindOneInputView = DiaCalendarioFindOneInputView.FromJson(jsonString);
//    var diaCalendarioFindOneResultView = DiaCalendarioFindOneResultView.FromJson(jsonString);
//    var diaCalendarioInputCreateView = DiaCalendarioInputCreateView.FromJson(jsonString);
//    var diaCalendarioInputUpdateView = DiaCalendarioInputUpdateView.FromJson(jsonString);
//    var diaCalendarioListOperation = DiaCalendarioListOperation.FromJson(jsonString);
//    var diaCalendarioListResultView = DiaCalendarioListResultView.FromJson(jsonString);
//    var diaCalendarioUpdateByIdOperation = DiaCalendarioUpdateByIdOperation.FromJson(jsonString);
//    var diaCalendarioView = DiaCalendarioView.FromJson(jsonString);
//    var diario = Diario.FromJson(jsonString);
//    var diarioCreateOperation = DiarioCreateOperation.FromJson(jsonString);
//    var diarioDeleteByIdOperation = DiarioDeleteByIdOperation.FromJson(jsonString);
//    var diarioFindOneByIdOperation = DiarioFindOneByIdOperation.FromJson(jsonString);
//    var diarioFindOneInputView = DiarioFindOneInputView.FromJson(jsonString);
//    var diarioFindOneResultView = DiarioFindOneResultView.FromJson(jsonString);
//    var diarioGetCoverImageOperation = DiarioGetCoverImageOperation.FromJson(jsonString);
//    var diarioInputCreateView = DiarioInputCreateView.FromJson(jsonString);
//    var diarioInputUpdateView = DiarioInputUpdateView.FromJson(jsonString);
//    var diarioListOperation = DiarioListOperation.FromJson(jsonString);
//    var diarioListResultView = DiarioListResultView.FromJson(jsonString);
//    var diarioPreferenciaAgrupamento = DiarioPreferenciaAgrupamento.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoCreateOperation = DiarioPreferenciaAgrupamentoCreateOperation.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoDeleteByIdOperation = DiarioPreferenciaAgrupamentoDeleteByIdOperation.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoFindByIdOperation = DiarioPreferenciaAgrupamentoFindByIdOperation.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoFindOneInputView = DiarioPreferenciaAgrupamentoFindOneInputView.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoFindOneResultView = DiarioPreferenciaAgrupamentoFindOneResultView.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoInputCreateView = DiarioPreferenciaAgrupamentoInputCreateView.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoInputUpdateView = DiarioPreferenciaAgrupamentoInputUpdateView.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoListOperation = DiarioPreferenciaAgrupamentoListOperation.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoListResultView = DiarioPreferenciaAgrupamentoListResultView.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoUpdateByIdOperation = DiarioPreferenciaAgrupamentoUpdateByIdOperation.FromJson(jsonString);
//    var diarioPreferenciaAgrupamentoView = DiarioPreferenciaAgrupamentoView.FromJson(jsonString);
//    var diarioProfessor = DiarioProfessor.FromJson(jsonString);
//    var diarioProfessorCreateOperation = DiarioProfessorCreateOperation.FromJson(jsonString);
//    var diarioProfessorDeleteByIdOperation = DiarioProfessorDeleteByIdOperation.FromJson(jsonString);
//    var diarioProfessorFindOneByIdOperation = DiarioProfessorFindOneByIdOperation.FromJson(jsonString);
//    var diarioProfessorFindOneInputView = DiarioProfessorFindOneInputView.FromJson(jsonString);
//    var diarioProfessorFindOneResultView = DiarioProfessorFindOneResultView.FromJson(jsonString);
//    var diarioProfessorInputCreateView = DiarioProfessorInputCreateView.FromJson(jsonString);
//    var diarioProfessorInputUpdateView = DiarioProfessorInputUpdateView.FromJson(jsonString);
//    var diarioProfessorListOperation = DiarioProfessorListOperation.FromJson(jsonString);
//    var diarioProfessorListResultView = DiarioProfessorListResultView.FromJson(jsonString);
//    var diarioProfessorUpdateByIdOperation = DiarioProfessorUpdateByIdOperation.FromJson(jsonString);
//    var diarioProfessorView = DiarioProfessorView.FromJson(jsonString);
//    var diarioSetCoverImageOperation = DiarioSetCoverImageOperation.FromJson(jsonString);
//    var diarioUpdateByIdOperation = DiarioUpdateByIdOperation.FromJson(jsonString);
//    var diarioView = DiarioView.FromJson(jsonString);
//    var disciplina = Disciplina.FromJson(jsonString);
//    var disciplinaCreateOperation = DisciplinaCreateOperation.FromJson(jsonString);
//    var disciplinaDeleteByIdOperation = DisciplinaDeleteByIdOperation.FromJson(jsonString);
//    var disciplinaFindOneByIdOperation = DisciplinaFindOneByIdOperation.FromJson(jsonString);
//    var disciplinaFindOneInputView = DisciplinaFindOneInputView.FromJson(jsonString);
//    var disciplinaFindOneResultView = DisciplinaFindOneResultView.FromJson(jsonString);
//    var disciplinaGetImagemCapa = DisciplinaGetImagemCapa.FromJson(jsonString);
//    var disciplinaInputCreateView = DisciplinaInputCreateView.FromJson(jsonString);
//    var disciplinaInputUpdateView = DisciplinaInputUpdateView.FromJson(jsonString);
//    var disciplinaListOperation = DisciplinaListOperation.FromJson(jsonString);
//    var disciplinaListResultView = DisciplinaListResultView.FromJson(jsonString);
//    var disciplinaSetImagemCapa = DisciplinaSetImagemCapa.FromJson(jsonString);
//    var disciplinaUpdateByIdOperation = DisciplinaUpdateByIdOperation.FromJson(jsonString);
//    var disciplinaView = DisciplinaView.FromJson(jsonString);
//    var disponibilidade = Disponibilidade.FromJson(jsonString);
//    var disponibilidadeCreateOperation = DisponibilidadeCreateOperation.FromJson(jsonString);
//    var disponibilidadeDeleteByIdOperation = DisponibilidadeDeleteByIdOperation.FromJson(jsonString);
//    var disponibilidadeDia = DisponibilidadeDia.FromJson(jsonString);
//    var disponibilidadeDiaCreateOperation = DisponibilidadeDiaCreateOperation.FromJson(jsonString);
//    var disponibilidadeDiaDeleteByIdOperation = DisponibilidadeDiaDeleteByIdOperation.FromJson(jsonString);
//    var disponibilidadeDiaFindOneByIdOperation = DisponibilidadeDiaFindOneByIdOperation.FromJson(jsonString);
//    var disponibilidadeDiaFindOneInputView = DisponibilidadeDiaFindOneInputView.FromJson(jsonString);
//    var disponibilidadeDiaFindOneResultView = DisponibilidadeDiaFindOneResultView.FromJson(jsonString);
//    var disponibilidadeDiaInputCreateView = DisponibilidadeDiaInputCreateView.FromJson(jsonString);
//    var disponibilidadeDiaInputUpdateView = DisponibilidadeDiaInputUpdateView.FromJson(jsonString);
//    var disponibilidadeDiaListOperation = DisponibilidadeDiaListOperation.FromJson(jsonString);
//    var disponibilidadeDiaListResultView = DisponibilidadeDiaListResultView.FromJson(jsonString);
//    var disponibilidadeDiaUpdateByIdOperation = DisponibilidadeDiaUpdateByIdOperation.FromJson(jsonString);
//    var disponibilidadeDiaView = DisponibilidadeDiaView.FromJson(jsonString);
//    var disponibilidadeFindOneByIdOperation = DisponibilidadeFindOneByIdOperation.FromJson(jsonString);
//    var disponibilidadeFindOneInputView = DisponibilidadeFindOneInputView.FromJson(jsonString);
//    var disponibilidadeFindOneResultView = DisponibilidadeFindOneResultView.FromJson(jsonString);
//    var disponibilidadeInputCreateView = DisponibilidadeInputCreateView.FromJson(jsonString);
//    var disponibilidadeInputUpdateView = DisponibilidadeInputUpdateView.FromJson(jsonString);
//    var disponibilidadeListOperation = DisponibilidadeListOperation.FromJson(jsonString);
//    var disponibilidadeListResultView = DisponibilidadeListResultView.FromJson(jsonString);
//    var disponibilidadeUpdateByIdOperation = DisponibilidadeUpdateByIdOperation.FromJson(jsonString);
//    var disponibilidadeView = DisponibilidadeView.FromJson(jsonString);
//    var endereco = Endereco.FromJson(jsonString);
//    var enderecoFindOneInputView = EnderecoFindOneInputView.FromJson(jsonString);
//    var enderecoFindOneResultView = EnderecoFindOneResultView.FromJson(jsonString);
//    var enderecoInput = EnderecoInput.FromJson(jsonString);
//    var enderecoView = EnderecoView.FromJson(jsonString);
//    var estado = Estado.FromJson(jsonString);
//    var estadoFindOneByIdOperation = EstadoFindOneByIdOperation.FromJson(jsonString);
//    var estadoFindOneInputView = EstadoFindOneInputView.FromJson(jsonString);
//    var estadoFindOneResultView = EstadoFindOneResultView.FromJson(jsonString);
//    var estadoListOperation = EstadoListOperation.FromJson(jsonString);
//    var estadoListResultView = EstadoListResultView.FromJson(jsonString);
//    var estadoView = EstadoView.FromJson(jsonString);
//    var etapa = Etapa.FromJson(jsonString);
//    var etapaCreateOperation = EtapaCreateOperation.FromJson(jsonString);
//    var etapaDeleteByIdOperation = EtapaDeleteByIdOperation.FromJson(jsonString);
//    var etapaFindOneByIdOperation = EtapaFindOneByIdOperation.FromJson(jsonString);
//    var etapaFindOneInputView = EtapaFindOneInputView.FromJson(jsonString);
//    var etapaFindOneResultView = EtapaFindOneResultView.FromJson(jsonString);
//    var etapaInputCreateView = EtapaInputCreateView.FromJson(jsonString);
//    var etapaInputUpdateView = EtapaInputUpdateView.FromJson(jsonString);
//    var etapaListOperation = EtapaListOperation.FromJson(jsonString);
//    var etapaListResultView = EtapaListResultView.FromJson(jsonString);
//    var etapaUpdateByIdOperation = EtapaUpdateByIdOperation.FromJson(jsonString);
//    var etapaView = EtapaView.FromJson(jsonString);
//    var evento = Evento.FromJson(jsonString);
//    var eventoCreateOperation = EventoCreateOperation.FromJson(jsonString);
//    var eventoDeleteByIdOperation = EventoDeleteByIdOperation.FromJson(jsonString);
//    var eventoFindOneByIdOperation = EventoFindOneByIdOperation.FromJson(jsonString);
//    var eventoFindOneInputView = EventoFindOneInputView.FromJson(jsonString);
//    var eventoFindOneResultView = EventoFindOneResultView.FromJson(jsonString);
//    var eventoInputCreateView = EventoInputCreateView.FromJson(jsonString);
//    var eventoInputUpdateView = EventoInputUpdateView.FromJson(jsonString);
//    var eventoListOperation = EventoListOperation.FromJson(jsonString);
//    var eventoListResultView = EventoListResultView.FromJson(jsonString);
//    var eventoUpdateByIdOperation = EventoUpdateByIdOperation.FromJson(jsonString);
//    var eventoView = EventoView.FromJson(jsonString);
//    var genericSearchInputView = GenericSearchInputView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacao = GradeHorarioOfertaFormacao.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoCreateOperation = GradeHorarioOfertaFormacaoCreateOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoDeleteByIdOperation = GradeHorarioOfertaFormacaoDeleteByIdOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoFindOneByIdOperation = GradeHorarioOfertaFormacaoFindOneByIdOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoFindOneInputView = GradeHorarioOfertaFormacaoFindOneInputView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoFindOneResultView = GradeHorarioOfertaFormacaoFindOneResultView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoInputCreateView = GradeHorarioOfertaFormacaoInputCreateView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoInputUpdateView = GradeHorarioOfertaFormacaoInputUpdateView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempo = GradeHorarioOfertaFormacaoIntervaloDeTempo.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation = GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation = GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation = GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView = GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView = GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView = GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView = GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoListOperation = GradeHorarioOfertaFormacaoIntervaloDeTempoListOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoListResultView = GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation = GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoIntervaloDeTempoView = GradeHorarioOfertaFormacaoIntervaloDeTempoView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoListOperation = GradeHorarioOfertaFormacaoListOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoListResultView = GradeHorarioOfertaFormacaoListResultView.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoUpdateByIdOperation = GradeHorarioOfertaFormacaoUpdateByIdOperation.FromJson(jsonString);
//    var gradeHorarioOfertaFormacaoView = GradeHorarioOfertaFormacaoView.FromJson(jsonString);
//    var horarioGerado = HorarioGerado.FromJson(jsonString);
//    var horarioGeradoAula = HorarioGeradoAula.FromJson(jsonString);
//    var horarioGeradoAulaCreateOperation = HorarioGeradoAulaCreateOperation.FromJson(jsonString);
//    var horarioGeradoAulaDeleteByIdOperation = HorarioGeradoAulaDeleteByIdOperation.FromJson(jsonString);
//    var horarioGeradoAulaFindByIdOperation = HorarioGeradoAulaFindByIdOperation.FromJson(jsonString);
//    var horarioGeradoAulaFindOneInputView = HorarioGeradoAulaFindOneInputView.FromJson(jsonString);
//    var horarioGeradoAulaFindOneResultView = HorarioGeradoAulaFindOneResultView.FromJson(jsonString);
//    var horarioGeradoAulaInputCreateView = HorarioGeradoAulaInputCreateView.FromJson(jsonString);
//    var horarioGeradoAulaInputUpdateView = HorarioGeradoAulaInputUpdateView.FromJson(jsonString);
//    var horarioGeradoAulaListOperation = HorarioGeradoAulaListOperation.FromJson(jsonString);
//    var horarioGeradoAulaListResultView = HorarioGeradoAulaListResultView.FromJson(jsonString);
//    var horarioGeradoAulaUpdateByIdOperation = HorarioGeradoAulaUpdateByIdOperation.FromJson(jsonString);
//    var horarioGeradoAulaView = HorarioGeradoAulaView.FromJson(jsonString);
//    var horarioGeradoCreateOperation = HorarioGeradoCreateOperation.FromJson(jsonString);
//    var horarioGeradoDeleteByIdOperation = HorarioGeradoDeleteByIdOperation.FromJson(jsonString);
//    var horarioGeradoFindByIdOperation = HorarioGeradoFindByIdOperation.FromJson(jsonString);
//    var horarioGeradoFindOneInputView = HorarioGeradoFindOneInputView.FromJson(jsonString);
//    var horarioGeradoFindOneResultView = HorarioGeradoFindOneResultView.FromJson(jsonString);
//    var horarioGeradoInputCreateView = HorarioGeradoInputCreateView.FromJson(jsonString);
//    var horarioGeradoInputUpdateView = HorarioGeradoInputUpdateView.FromJson(jsonString);
//    var horarioGeradoListOperation = HorarioGeradoListOperation.FromJson(jsonString);
//    var horarioGeradoListResultView = HorarioGeradoListResultView.FromJson(jsonString);
//    var horarioGeradoUpdateByIdOperation = HorarioGeradoUpdateByIdOperation.FromJson(jsonString);
//    var horarioGeradoView = HorarioGeradoView.FromJson(jsonString);
//    var imagem = Imagem.FromJson(jsonString);
//    var imagemArquivo = ImagemArquivo.FromJson(jsonString);
//    var imagemArquivoFindOneFromImagemResultView = ImagemArquivoFindOneFromImagemResultView.FromJson(jsonString);
//    var imagemArquivoFindOneInputView = ImagemArquivoFindOneInputView.FromJson(jsonString);
//    var imagemArquivoFindOneResultView = ImagemArquivoFindOneResultView.FromJson(jsonString);
//    var imagemArquivoView = ImagemArquivoView.FromJson(jsonString);
//    var imagemFindOneFromImagemArquivoResultView = ImagemFindOneFromImagemArquivoResultView.FromJson(jsonString);
//    var imagemFindOneInputView = ImagemFindOneInputView.FromJson(jsonString);
//    var imagemFindOneResultView = ImagemFindOneResultView.FromJson(jsonString);
//    var imagemView = ImagemView.FromJson(jsonString);
//    var intervaloDeTempo = IntervaloDeTempo.FromJson(jsonString);
//    var intervaloDeTempoFindOneResultView = IntervaloDeTempoFindOneResultView.FromJson(jsonString);
//    var intervaloDeTempoInputView = IntervaloDeTempoInputView.FromJson(jsonString);
//    var intervaloDeTempoView = IntervaloDeTempoView.FromJson(jsonString);
//    var modalidade = Modalidade.FromJson(jsonString);
//    var modalidadeCreateOperation = ModalidadeCreateOperation.FromJson(jsonString);
//    var modalidadeDeleteByIdOperation = ModalidadeDeleteByIdOperation.FromJson(jsonString);
//    var modalidadeFindOneByIdOperation = ModalidadeFindOneByIdOperation.FromJson(jsonString);
//    var modalidadeFindOneInputView = ModalidadeFindOneInputView.FromJson(jsonString);
//    var modalidadeFindOneResultView = ModalidadeFindOneResultView.FromJson(jsonString);
//    var modalidadeInputCreateView = ModalidadeInputCreateView.FromJson(jsonString);
//    var modalidadeInputUpdateView = ModalidadeInputUpdateView.FromJson(jsonString);
//    var modalidadeListOperation = ModalidadeListOperation.FromJson(jsonString);
//    var modalidadeListResultView = ModalidadeListResultView.FromJson(jsonString);
//    var modalidadeUpdateByIdOperation = ModalidadeUpdateByIdOperation.FromJson(jsonString);
//    var modalidadeView = ModalidadeView.FromJson(jsonString);
//    var nivelDeFormacao = NivelDeFormacao.FromJson(jsonString);
//    var nivelDeFormacaoCreateOperation = NivelDeFormacaoCreateOperation.FromJson(jsonString);
//    var nivelDeFormacaoDeleteByIdOperation = NivelDeFormacaoDeleteByIdOperation.FromJson(jsonString);
//    var nivelDeFormacaoFindOneByIdOperation = NivelDeFormacaoFindOneByIdOperation.FromJson(jsonString);
//    var nivelDeFormacaoFindOneInputView = NivelDeFormacaoFindOneInputView.FromJson(jsonString);
//    var nivelDeFormacaoFindOneResultView = NivelDeFormacaoFindOneResultView.FromJson(jsonString);
//    var nivelDeFormacaoInputCreateView = NivelDeFormacaoInputCreateView.FromJson(jsonString);
//    var nivelDeFormacaoInputUpdateView = NivelDeFormacaoInputUpdateView.FromJson(jsonString);
//    var nivelDeFormacaoListOperation = NivelDeFormacaoListOperation.FromJson(jsonString);
//    var nivelDeFormacaoListResultView = NivelDeFormacaoListResultView.FromJson(jsonString);
//    var nivelDeFormacaoUpdateByIdOperation = NivelDeFormacaoUpdateByIdOperation.FromJson(jsonString);
//    var nivelDeFormacaoView = NivelDeFormacaoView.FromJson(jsonString);
//    var objectIntegerId = ObjectIntegerId.FromJson(jsonString);
//    var objectUuid = ObjectUuid.FromJson(jsonString);
//    var ofertaFormacao = OfertaFormacao.FromJson(jsonString);
//    var ofertaFormacaoCreateOperation = OfertaFormacaoCreateOperation.FromJson(jsonString);
//    var ofertaFormacaoDeleteByIdOperation = OfertaFormacaoDeleteByIdOperation.FromJson(jsonString);
//    var ofertaFormacaoFindOneByIdOperation = OfertaFormacaoFindOneByIdOperation.FromJson(jsonString);
//    var ofertaFormacaoFindOneInputView = OfertaFormacaoFindOneInputView.FromJson(jsonString);
//    var ofertaFormacaoFindOneResultView = OfertaFormacaoFindOneResultView.FromJson(jsonString);
//    var ofertaFormacaoInputCreateView = OfertaFormacaoInputCreateView.FromJson(jsonString);
//    var ofertaFormacaoInputUpdateView = OfertaFormacaoInputUpdateView.FromJson(jsonString);
//    var ofertaFormacaoListOperation = OfertaFormacaoListOperation.FromJson(jsonString);
//    var ofertaFormacaoListResultView = OfertaFormacaoListResultView.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacao = OfertaFormacaoNivelFormacao.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoCreateOperation = OfertaFormacaoNivelFormacaoCreateOperation.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoDeleteByIdOperation = OfertaFormacaoNivelFormacaoDeleteByIdOperation.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoFindOneByIdOperation = OfertaFormacaoNivelFormacaoFindOneByIdOperation.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoFindOneInputView = OfertaFormacaoNivelFormacaoFindOneInputView.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoFindOneResultView = OfertaFormacaoNivelFormacaoFindOneResultView.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoInputCreateView = OfertaFormacaoNivelFormacaoInputCreateView.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoInputUpdateView = OfertaFormacaoNivelFormacaoInputUpdateView.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoListOperation = OfertaFormacaoNivelFormacaoListOperation.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoListResultView = OfertaFormacaoNivelFormacaoListResultView.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoUpdateByIdOperation = OfertaFormacaoNivelFormacaoUpdateByIdOperation.FromJson(jsonString);
//    var ofertaFormacaoNivelFormacaoView = OfertaFormacaoNivelFormacaoView.FromJson(jsonString);
//    var ofertaFormacaoUpdateByIdOperation = OfertaFormacaoUpdateByIdOperation.FromJson(jsonString);
//    var ofertaFormacaoView = OfertaFormacaoView.FromJson(jsonString);
//    var paginationFilterView = PaginationFilterView.FromJson(jsonString);
//    var paginationInputBaseView = PaginationInputBaseView.FromJson(jsonString);
//    var paginationInputView = PaginationInputView.FromJson(jsonString);
//    var paginationResultLinks = PaginationResultLinks.FromJson(jsonString);
//    var paginationResultMeta = PaginationResultMeta.FromJson(jsonString);
//    var paginationSortByView = PaginationSortByView.FromJson(jsonString);
//    var perfil = Perfil.FromJson(jsonString);
//    var perfilFindOneByIdOperation = PerfilFindOneByIdOperation.FromJson(jsonString);
//    var perfilFindOneInputView = PerfilFindOneInputView.FromJson(jsonString);
//    var perfilFindOneResultView = PerfilFindOneResultView.FromJson(jsonString);
//    var perfilListOperation = PerfilListOperation.FromJson(jsonString);
//    var perfilListResultView = PerfilListResultView.FromJson(jsonString);
//    var perfilUpdateOperation = PerfilUpdateOperation.FromJson(jsonString);
//    var perfilUpdateView = PerfilUpdateView.FromJson(jsonString);
//    var perfilView = PerfilView.FromJson(jsonString);
//    var professorDisponibilidade = ProfessorDisponibilidade.FromJson(jsonString);
//    var professorDisponibilidadeCreateOperation = ProfessorDisponibilidadeCreateOperation.FromJson(jsonString);
//    var professorDisponibilidadeDeleteByIdOperation = ProfessorDisponibilidadeDeleteByIdOperation.FromJson(jsonString);
//    var professorDisponibilidadeFindOneByIdOperation = ProfessorDisponibilidadeFindOneByIdOperation.FromJson(jsonString);
//    var professorDisponibilidadeFindOneInputView = ProfessorDisponibilidadeFindOneInputView.FromJson(jsonString);
//    var professorDisponibilidadeFindOneResultView = ProfessorDisponibilidadeFindOneResultView.FromJson(jsonString);
//    var professorDisponibilidadeInputCreateView = ProfessorDisponibilidadeInputCreateView.FromJson(jsonString);
//    var professorDisponibilidadeInputUpdateView = ProfessorDisponibilidadeInputUpdateView.FromJson(jsonString);
//    var professorDisponibilidadeListOperation = ProfessorDisponibilidadeListOperation.FromJson(jsonString);
//    var professorDisponibilidadeListResultView = ProfessorDisponibilidadeListResultView.FromJson(jsonString);
//    var professorDisponibilidadeUpdateByIdOperation = ProfessorDisponibilidadeUpdateByIdOperation.FromJson(jsonString);
//    var professorDisponibilidadeView = ProfessorDisponibilidadeView.FromJson(jsonString);
//    var reserva = Reserva.FromJson(jsonString);
//    var reservaCreateOperation = ReservaCreateOperation.FromJson(jsonString);
//    var reservaDeleteByIdOperation = ReservaDeleteByIdOperation.FromJson(jsonString);
//    var reservaFindOneByIdOperation = ReservaFindOneByIdOperation.FromJson(jsonString);
//    var reservaFindOneInputView = ReservaFindOneInputView.FromJson(jsonString);
//    var reservaFindOneResultView = ReservaFindOneResultView.FromJson(jsonString);
//    var reservaInputCreateView = ReservaInputCreateView.FromJson(jsonString);
//    var reservaInputUpdateView = ReservaInputUpdateView.FromJson(jsonString);
//    var reservaListOperation = ReservaListOperation.FromJson(jsonString);
//    var reservaListResultView = ReservaListResultView.FromJson(jsonString);
//    var reservaUpdateByIdOperation = ReservaUpdateByIdOperation.FromJson(jsonString);
//    var reservaView = ReservaView.FromJson(jsonString);
//    var tokens = Tokens.FromJson(jsonString);
//    var turma = Turma.FromJson(jsonString);
//    var turmaCreateOperation = TurmaCreateOperation.FromJson(jsonString);
//    var turmaDeleteByIdOperation = TurmaDeleteByIdOperation.FromJson(jsonString);
//    var turmaDisponibilidade = TurmaDisponibilidade.FromJson(jsonString);
//    var turmaDisponibilidadeCreateOperation = TurmaDisponibilidadeCreateOperation.FromJson(jsonString);
//    var turmaDisponibilidadeDeleteByIdOperation = TurmaDisponibilidadeDeleteByIdOperation.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneByIdOperation = TurmaDisponibilidadeFindOneByIdOperation.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneInputView = TurmaDisponibilidadeFindOneInputView.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneResultView = TurmaDisponibilidadeFindOneResultView.FromJson(jsonString);
//    var turmaDisponibilidadeInputCreateView = TurmaDisponibilidadeInputCreateView.FromJson(jsonString);
//    var turmaDisponibilidadeInputUpdateView = TurmaDisponibilidadeInputUpdateView.FromJson(jsonString);
//    var turmaDisponibilidadeListOperation = TurmaDisponibilidadeListOperation.FromJson(jsonString);
//    var turmaDisponibilidadeListResultView = TurmaDisponibilidadeListResultView.FromJson(jsonString);
//    var turmaDisponibilidadeUpdateByIdOperation = TurmaDisponibilidadeUpdateByIdOperation.FromJson(jsonString);
//    var turmaDisponibilidadeView = TurmaDisponibilidadeView.FromJson(jsonString);
//    var turmaFindOneByIdOperation = TurmaFindOneByIdOperation.FromJson(jsonString);
//    var turmaFindOneInputView = TurmaFindOneInputView.FromJson(jsonString);
//    var turmaFindOneResultView = TurmaFindOneResultView.FromJson(jsonString);
//    var turmaGetImagemCapa = TurmaGetImagemCapa.FromJson(jsonString);
//    var turmaInputCreateView = TurmaInputCreateView.FromJson(jsonString);
//    var turmaInputUpdateView = TurmaInputUpdateView.FromJson(jsonString);
//    var turmaListOperation = TurmaListOperation.FromJson(jsonString);
//    var turmaListResultView = TurmaListResultView.FromJson(jsonString);
//    var turmaSetImagemCapa = TurmaSetImagemCapa.FromJson(jsonString);
//    var turmaUpdateByIdOperation = TurmaUpdateByIdOperation.FromJson(jsonString);
//    var turmaView = TurmaView.FromJson(jsonString);
//    var usuario = Usuario.FromJson(jsonString);
//    var usuarioCreateOperation = UsuarioCreateOperation.FromJson(jsonString);
//    var usuarioDeleteByIdOperation = UsuarioDeleteByIdOperation.FromJson(jsonString);
//    var usuarioFindOneByIdOperation = UsuarioFindOneByIdOperation.FromJson(jsonString);
//    var usuarioFindOneInputView = UsuarioFindOneInputView.FromJson(jsonString);
//    var usuarioFindOneResultView = UsuarioFindOneResultView.FromJson(jsonString);
//    var usuarioGetImagemCapa = UsuarioGetImagemCapa.FromJson(jsonString);
//    var usuarioGetImagemPerfil = UsuarioGetImagemPerfil.FromJson(jsonString);
//    var usuarioInputCreateView = UsuarioInputCreateView.FromJson(jsonString);
//    var usuarioInputUpdateView = UsuarioInputUpdateView.FromJson(jsonString);
//    var usuarioListOperation = UsuarioListOperation.FromJson(jsonString);
//    var usuarioListResultView = UsuarioListResultView.FromJson(jsonString);
//    var usuarioSetImagemCapa = UsuarioSetImagemCapa.FromJson(jsonString);
//    var usuarioSetImagemPerfil = UsuarioSetImagemPerfil.FromJson(jsonString);
//    var usuarioUpdateByIdOperation = UsuarioUpdateByIdOperation.FromJson(jsonString);
//    var usuarioView = UsuarioView.FromJson(jsonString);
//    var date = Date.FromJson(jsonString);
//    var dateTime = DateTime.FromJson(jsonString);
//    var numericId = NumericId.FromJson(jsonString);
//    var sortByConstraint = SortByConstraint.FromJson(jsonString);
//    var time = Time.FromJson(jsonString);
//    var uuid = Uuid.FromJson(jsonString);
#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

namespace Ladesa.Dtos
{
    using System;
    using System.Collections.Generic;

    using System.Text.Json;
    using System.Text.Json.Serialization;
    using System.Globalization;

    /// <summary>
    /// Ambiente.
    /// </summary>
    public partial class Ambiente
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonPropertyName("bloco")]
        public AmbienteBloco Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Ambiente.
    ///
    /// Ambiente reservado.
    /// </summary>
    public partial class AmbienteElement
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonPropertyName("bloco")]
        public AmbienteBloco Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Bloco que o ambiente/sala pertence.
    ///
    /// Bloco.
    /// </summary>
    public partial class AmbienteBloco
    {
        /// <summary>
        /// Ambientes.
        /// </summary>
        [JsonPropertyName("ambientes")]
        public AmbienteElement[] Ambientes { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    /// <summary>
    /// ImagemArquivo.
    /// </summary>
    public partial class VersoeElement
    {
        /// <summary>
        /// Altura da imagem.
        /// </summary>
        [JsonPropertyName("altura")]
        public long Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonPropertyName("arquivo")]
        public ImagemArquivoArquivo Arquivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem.
        /// </summary>
        [JsonPropertyName("imagem")]
        public ImagemCapaClass Imagem { get; set; }

        /// <summary>
        /// Largura da imagem.
        /// </summary>
        [JsonPropertyName("largura")]
        public long Largura { get; set; }

        /// <summary>
        /// Mime-type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Imagem.
    /// </summary>
    public partial class ImagemCapaClass
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição da imagem.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Versões da imagem.
        /// </summary>
        [JsonPropertyName("versoes")]
        public VersoeElement[] Versoes { get; set; }
    }

    /// <summary>
    /// Arquivo.
    /// </summary>
    public partial class ImagemArquivoArquivo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Formato do arquivo.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome do arquivo.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho do arquivo (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento do conteúdo.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Campus.
    ///
    /// Campus ao qual o calendário letivo pertence.
    ///
    /// Campus que o curso pertence.
    ///
    /// Campus associado ao vínculo.
    /// </summary>
    public partial class BlocoCampus
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Endereço do campus
        /// </summary>
        [JsonPropertyName("endereco")]
        public CampusEndereco Endereco { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Endereço do campus
    ///
    /// Endereço.
    /// </summary>
    public partial class CampusEndereco
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade.
        /// </summary>
        [JsonPropertyName("cidade")]
        public EnderecoCidade Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Cidade.
    /// </summary>
    public partial class EnderecoCidade
    {
        /// <summary>
        /// Estado da cidade
        /// </summary>
        [JsonPropertyName("estado")]
        public CidadeEstado Estado { get; set; }

        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Estado da cidade
    ///
    /// Estado.
    /// </summary>
    public partial class CidadeEstado
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    public partial class AmbienteCreateOperation
    {
        [JsonPropertyName("input")]
        public AmbienteCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteCreateOperationOutput Output { get; set; }
    }

    public partial class AmbienteCreateOperationInput
    {
        [JsonPropertyName("body")]
        public PurpleBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um ambiente.
    /// </summary>
    public partial class PurpleBody
    {
        [JsonPropertyName("bloco")]
        public BodyBloco Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um bloco por id.
    /// </summary>
    public partial class BodyBloco
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AmbienteCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public AmbientePadraoElement Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um ambiente.
    /// </summary>
    public partial class AmbientePadraoElement
    {
        [JsonPropertyName("bloco")]
        public BlocoElement Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um bloco.
    /// </summary>
    public partial class BlocoElement
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um campus.
    /// </summary>
    public partial class CampusElement
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("endereco")]
        public SuccessEndereco Endereco { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um endereço.
    /// </summary>
    public partial class SuccessEndereco
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        [JsonPropertyName("cidade")]
        public CidadeElement Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma cidade.
    /// </summary>
    public partial class CidadeElement
    {
        [JsonPropertyName("estado")]
        public EstadoElement Estado { get; set; }

        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um estado.
    /// </summary>
    public partial class EstadoElement
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma imagem.
    /// </summary>
    public partial class ImagemPerfilClass
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição da imagem.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("versoes")]
        public VersoeClass[] Versoes { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagem de uma versão de imagem.
    /// </summary>
    public partial class VersoeClass
    {
        /// <summary>
        /// Altura da imagem.
        /// </summary>
        [JsonPropertyName("altura")]
        public long Altura { get; set; }

        [JsonPropertyName("arquivo")]
        public ImagemArquivoFindOneFromImagemResultViewArquivo Arquivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Largura da imagem.
        /// </summary>
        [JsonPropertyName("largura")]
        public long Largura { get; set; }

        /// <summary>
        /// Mime-type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Dados de saída para encontrar um arquivo por id.
    /// </summary>
    public partial class ImagemArquivoFindOneFromImagemResultViewArquivo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Formato do arquivo.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome do arquivo.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho do arquivo (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento do conteúdo.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    public partial class AmbienteDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public AmbienteDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class AmbienteDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public PurpleParams Params { get; set; }
    }

    public partial class PurpleParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AmbienteDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class AmbienteFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public AmbienteFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class AmbienteFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public FluffyParams Params { get; set; }
    }

    public partial class FluffyParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AmbienteFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public AmbientePadraoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um ambiente por id.
    /// </summary>
    public partial class AmbienteFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um ambiente.
    /// </summary>
    public partial class AmbienteFindOneResultView
    {
        [JsonPropertyName("bloco")]
        public BlocoElement Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    public partial class AmbienteGetCoverImage
    {
        [JsonPropertyName("input")]
        public AmbienteGetCoverImageInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteGetCoverImageOutput Output { get; set; }
    }

    public partial class AmbienteGetCoverImageInput
    {
        [JsonPropertyName("params")]
        public TentacledParams Params { get; set; }
    }

    public partial class TentacledParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AmbienteGetCoverImageOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um ambiente.
    /// </summary>
    public partial class AmbienteInputCreateView
    {
        [JsonPropertyName("bloco")]
        public BodyBloco Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um ambiente.
    /// </summary>
    public partial class AmbienteInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("bloco")]
        public BodyBloco Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    public partial class AmbienteListOperation
    {
        [JsonPropertyName("input")]
        public AmbienteListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteListOperationOutput Output { get; set; }
    }

    public partial class AmbienteListOperationInput
    {
        [JsonPropertyName("queries")]
        public PurpleQueries Queries { get; set; }
    }

    public partial class PurpleQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.bloco.campus.id")]
        public string[] FilterBlocoCampusId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.bloco.id")]
        public string[] FilterBlocoId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class AmbienteListOperationOutput
    {
        [JsonPropertyName("success")]
        public PurpleSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a ambientes.
    /// </summary>
    public partial class PurpleSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public AmbientePadraoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Links da busca.
    /// </summary>
    public partial class Links
    {
        [JsonPropertyName("current")]
        public string Current { get; set; }

        [JsonPropertyName("first")]
        public string First { get; set; }

        [JsonPropertyName("last")]
        public string Last { get; set; }

        [JsonPropertyName("next")]
        public string Next { get; set; }

        [JsonPropertyName("previous")]
        public string Previous { get; set; }
    }

    /// <summary>
    /// Metadados da busca.
    ///
    /// Metadados dos resultados de busca.
    /// </summary>
    public partial class Meta
    {
        /// <summary>
        /// Página atual.
        /// </summary>
        [JsonPropertyName("currentPage")]
        public long CurrentPage { get; set; }

        /// <summary>
        /// Filtros.
        /// </summary>
        [JsonPropertyName("filter")]
        public FilterElement[] Filter { get; set; }

        /// <summary>
        /// Quantidade de itens por página.
        /// </summary>
        [JsonPropertyName("itemsPerPage")]
        public long ItemsPerPage { get; set; }

        /// <summary>
        /// Termo textual da busca.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public SortByElement[] SortBy { get; set; }

        /// <summary>
        /// Total de itens.
        /// </summary>
        [JsonPropertyName("totalItems")]
        public long TotalItems { get; set; }

        /// <summary>
        /// Quantidade total de páginas.
        /// </summary>
        [JsonPropertyName("totalPages")]
        public long TotalPages { get; set; }
    }

    /// <summary>
    /// Configuração de filtro por restrições de uma propriedade.
    /// </summary>
    public partial class FilterElement
    {
        /// <summary>
        /// Propriedade filtrada.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }

        /// <summary>
        /// Restrições de filtragem.
        /// </summary>
        [JsonPropertyName("restrictions")]
        public string[] Restrictions { get; set; }
    }

    /// <summary>
    /// Configuração de ordenação de uma propriedade.
    /// </summary>
    public partial class SortByElement
    {
        /// <summary>
        /// Modo de ordenação.
        /// </summary>
        [JsonPropertyName("mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Propriedade ordenada.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }
    }

    /// <summary>
    /// Resultados da busca a ambientes.
    /// </summary>
    public partial class AmbienteListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public AmbientePadraoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class AmbienteSetCoverImage
    {
        [JsonPropertyName("input")]
        public AmbienteSetCoverImageInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteSetCoverImageOutput Output { get; set; }
    }

    public partial class AmbienteSetCoverImageInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public StickyParams Params { get; set; }
    }

    public partial class StickyParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AmbienteSetCoverImageOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class AmbienteUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public AmbienteUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AmbienteUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class AmbienteUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public FluffyBody Body { get; set; }

        [JsonPropertyName("params")]
        public IndigoParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um ambiente.
    /// </summary>
    public partial class FluffyBody
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("bloco")]
        public BodyBloco Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    public partial class IndigoParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AmbienteUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public AmbientePadraoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um ambiente.
    /// </summary>
    public partial class AmbienteView
    {
        [JsonPropertyName("bloco")]
        public BlocoElement Bloco { get; set; }

        /// <summary>
        /// Capacidade do ambiente/sala.
        /// </summary>
        [JsonPropertyName("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Arquivo.
    /// </summary>
    public partial class Arquivo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Formato do arquivo.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome do arquivo.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho do arquivo (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento do conteúdo.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um arquivo por id.
    /// </summary>
    public partial class ArquivoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de saída para encontrar um arquivo por id.
    /// </summary>
    public partial class ArquivoFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Formato do arquivo.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome do arquivo.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho do arquivo (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento do conteúdo.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Obtêm o conteúdo de um Arquivo.
    /// </summary>
    public partial class ArquivoGetFileOperation
    {
        [JsonPropertyName("input")]
        public ArquivoGetFileOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ArquivoGetFileOperationOutput Output { get; set; }
    }

    public partial class ArquivoGetFileOperationInput
    {
        [JsonPropertyName("queries")]
        public FluffyQueries Queries { get; set; }
    }

    public partial class FluffyQueries
    {
        /// <summary>
        /// Acesso via recurso: id.
        /// </summary>
        [JsonPropertyName("idRecurso")]
        public string IdRecurso { get; set; }

        /// <summary>
        /// Acesso via recurso: nome.
        /// </summary>
        [JsonPropertyName("nomeRecurso")]
        public string NomeRecurso { get; set; }
    }

    public partial class ArquivoGetFileOperationOutput
    {
        /// <summary>
        /// Binário do Arquivo.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um arquivo.
    /// </summary>
    public partial class ArquivoView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Formato do arquivo.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome do arquivo.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho do arquivo (em bytes).
        /// </summary>
        [JsonPropertyName("sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento do conteúdo.
        /// </summary>
        [JsonPropertyName("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Aula.
    /// </summary>
    public partial class Aula
    {
        /// <summary>
        /// Ambiente associado à aula.
        /// </summary>
        [JsonPropertyName("ambiente")]
        public AmbienteElement Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonPropertyName("diario")]
        public AulaDiario Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public AulaIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Modalidade da aula.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    /// <summary>
    /// Diário associado à aula.
    ///
    /// Diario.
    ///
    /// Diário vinculado.
    /// </summary>
    public partial class AulaDiario
    {
        /// <summary>
        /// Ambiente padrão.
        /// </summary>
        [JsonPropertyName("ambientePadrao")]
        public AmbienteElement AmbientePadrao { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Calendário Letivo vinculado ao diário.
        /// </summary>
        [JsonPropertyName("calendarioLetivo")]
        public DiarioCalendario CalendarioLetivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonPropertyName("disciplina")]
        public DiarioDisciplina Disciplina { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa do diário.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonPropertyName("turma")]
        public DiarioTurma Turma { get; set; }
    }

    /// <summary>
    /// Calendário Letivo vinculado ao diário.
    ///
    /// CalendarioLetivo.
    ///
    /// Calendario.
    ///
    /// calendário.
    /// </summary>
    public partial class DiarioCalendario
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Campus ao qual o calendário letivo pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Oferta de formação do calendário letivo.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Oferta de formação do calendário letivo.
    ///
    /// OfertaFormacao.
    ///
    /// Oferta de formação do curso.
    ///
    /// Oferta de formação.
    /// </summary>
    public partial class CalendarioLetivoOfertaFormacao
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Disciplina vinculada ao diário.
    ///
    /// Disciplina.
    /// </summary>
    public partial class DiarioDisciplina
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa da disciplina.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Turma vinculada ao diário.
    ///
    /// Turma.
    /// </summary>
    public partial class DiarioTurma
    {
        /// <summary>
        /// Ambiente padrão da sala de aula.
        /// </summary>
        [JsonPropertyName("ambientePadraoAula")]
        public AmbienteElement AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonPropertyName("curso")]
        public TurmaCurso Curso { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa da Turma.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Curso da Turma.
    ///
    /// Curso.
    /// </summary>
    public partial class TurmaCurso
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa do curso.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        /// <summary>
        /// Oferta de formação do curso.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Intervalo de Tempo associado à aula.
    ///
    /// Intervalo de Tempo.
    ///
    /// Intervalo de tempo.
    /// </summary>
    public partial class AulaIntervaloDeTempo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    public partial class AulaCreateOperation
    {
        [JsonPropertyName("input")]
        public AulaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AulaCreateOperationOutput Output { get; set; }
    }

    public partial class AulaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public TentacledBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Aula.
    /// </summary>
    public partial class TentacledBody
    {
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um ambiente por id.
    /// </summary>
    public partial class BodyAmbiente
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um diário por ID.
    /// </summary>
    public partial class BodyDiario
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um Intervalo de Tempo.
    /// </summary>
    public partial class BodyIntervaloDeTempo
    {
        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    public partial class AulaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public AulaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Aula.
    /// </summary>
    public partial class AulaListResultViewSuccess
    {
        [JsonPropertyName("ambiente")]
        public AmbientePadraoElement Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Modalidade da aula.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um diário.
    /// </summary>
    public partial class DiarioElement
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbientePadraoElement AmbientePadrao { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("calendarioLetivo")]
        public CalendarioElement CalendarioLetivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disciplina")]
        public DisciplinaElement Disciplina { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        [JsonPropertyName("turma")]
        public TurmaElement Turma { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um calendário letivo.
    /// </summary>
    public partial class CalendarioElement
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoElement
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Disciplina.
    /// </summary>
    public partial class DisciplinaElement
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Turma.
    /// </summary>
    public partial class TurmaElement
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbientePadraoElement AmbientePadraoAula { get; set; }

        [JsonPropertyName("curso")]
        public CursoElement Curso { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Curso.
    /// </summary>
    public partial class CursoElement
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Intervalo de Tempo.
    /// </summary>
    public partial class SuccessIntervaloDeTempo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    public partial class AulaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public AulaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AulaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class AulaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public IndecentParams Params { get; set; }
    }

    public partial class IndecentParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AulaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class AulaFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public AulaFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AulaFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class AulaFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public HilariousParams Params { get; set; }
    }

    public partial class HilariousParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AulaFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public AulaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Aula por ID.
    /// </summary>
    public partial class AulaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Aula.
    /// </summary>
    public partial class AulaFindOneResultView
    {
        [JsonPropertyName("ambiente")]
        public AmbientePadraoElement Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Modalidade da aula.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Aula.
    /// </summary>
    public partial class AulaInputCreateView
    {
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Aula.
    /// </summary>
    public partial class AulaInputUpdateView
    {
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    public partial class AulaListOperation
    {
        [JsonPropertyName("input")]
        public AulaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AulaListOperationOutput Output { get; set; }
    }

    public partial class AulaListOperationInput
    {
        [JsonPropertyName("queries")]
        public TentacledQueries Queries { get; set; }
    }

    public partial class TentacledQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambiente.id")]
        public string[] FilterAmbienteId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.diario.id")]
        public string[] FilterDiarioId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class AulaListOperationOutput
    {
        [JsonPropertyName("success")]
        public FluffySuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Aulas.
    /// </summary>
    public partial class FluffySuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public AulaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Aulas.
    /// </summary>
    public partial class AulaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public AulaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class AulaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public AulaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AulaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class AulaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public StickyBody Body { get; set; }

        [JsonPropertyName("params")]
        public AmbitiousParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Aula.
    /// </summary>
    public partial class StickyBody
    {
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    public partial class AmbitiousParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class AulaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public AulaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Aula.
    /// </summary>
    public partial class AulaView
    {
        [JsonPropertyName("ambiente")]
        public AmbientePadraoElement Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Modalidade da aula.
        /// </summary>
        [JsonPropertyName("modalidade")]
        public string Modalidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada para definir a senha inicial.
    /// </summary>
    public partial class AuthCredentialsSetInitialPasswordInputView
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nova senha.
        /// </summary>
        [JsonPropertyName("senha")]
        public string Senha { get; set; }
    }

    /// <summary>
    /// Operação para definir a senha inicial.
    /// </summary>
    public partial class AuthCredentialsSetInitialPasswordOperation
    {
        [JsonPropertyName("input")]
        public AuthCredentialsSetInitialPasswordOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AuthCredentialsSetInitialPasswordOperationOutput Output { get; set; }
    }

    public partial class AuthCredentialsSetInitialPasswordOperationInput
    {
        [JsonPropertyName("body")]
        public IndigoBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para definir a senha inicial.
    /// </summary>
    public partial class IndigoBody
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nova senha.
        /// </summary>
        [JsonPropertyName("senha")]
        public string Senha { get; set; }
    }

    public partial class AuthCredentialsSetInitialPasswordOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para autenticação.
    /// </summary>
    public partial class AuthLoginInputView
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Senha do usuário.
        /// </summary>
        [JsonPropertyName("senha")]
        public string Senha { get; set; }
    }

    /// <summary>
    /// Operação de login.
    /// </summary>
    public partial class AuthLoginOperation
    {
        [JsonPropertyName("input")]
        public AuthLoginOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AuthLoginOperationOutput Output { get; set; }
    }

    public partial class AuthLoginOperationInput
    {
        [JsonPropertyName("body")]
        public IndecentBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para autenticação.
    /// </summary>
    public partial class IndecentBody
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Senha do usuário.
        /// </summary>
        [JsonPropertyName("senha")]
        public string Senha { get; set; }
    }

    public partial class AuthLoginOperationOutput
    {
        [JsonPropertyName("success")]
        public TentacledSuccess Success { get; set; }
    }

    /// <summary>
    /// Credenciais de sessão.
    /// </summary>
    public partial class TentacledSuccess
    {
        /// <summary>
        /// Token de acesso.
        /// </summary>
        [JsonPropertyName("access_token")]
        public string AccessToken { get; set; }

        /// <summary>
        /// Tempo de expiração do token.
        /// </summary>
        [JsonPropertyName("expires_at")]
        public long? ExpiresAt { get; set; }

        /// <summary>
        /// Tempo de expiração do token.
        /// </summary>
        [JsonPropertyName("expires_in")]
        public long? ExpiresIn { get; set; }

        /// <summary>
        /// Token de identificação.
        /// </summary>
        [JsonPropertyName("id_token")]
        public string IdToken { get; set; }

        /// <summary>
        /// Token de refresh.
        /// </summary>
        [JsonPropertyName("refresh_token")]
        public string RefreshToken { get; set; }

        /// <summary>
        /// Escopo da autenticação.
        /// </summary>
        [JsonPropertyName("scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Estado da sessão.
        /// </summary>
        [JsonPropertyName("session_state")]
        public string SessionState { get; set; }

        /// <summary>
        /// Tipo do token.
        /// </summary>
        [JsonPropertyName("token_type")]
        public string TokenType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para refresh de autenticação.
    /// </summary>
    public partial class AuthRefreshInputView
    {
        /// <summary>
        /// Token de refresh.
        /// </summary>
        [JsonPropertyName("refreshToken")]
        public string RefreshToken { get; set; }
    }

    /// <summary>
    /// Obtêm as credenciais de sessão por meio do envio do token de refresh.
    /// </summary>
    public partial class AuthRefreshOperation
    {
        [JsonPropertyName("input")]
        public AuthRefreshOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public AuthRefreshOperationOutput Output { get; set; }
    }

    public partial class AuthRefreshOperationInput
    {
        [JsonPropertyName("body")]
        public HilariousBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para refresh de autenticação.
    /// </summary>
    public partial class HilariousBody
    {
        /// <summary>
        /// Token de refresh.
        /// </summary>
        [JsonPropertyName("refreshToken")]
        public string RefreshToken { get; set; }
    }

    public partial class AuthRefreshOperationOutput
    {
        [JsonPropertyName("success")]
        public TentacledSuccess Success { get; set; }
    }

    /// <summary>
    /// Credenciais de sessão.
    /// </summary>
    public partial class AuthSessionCredentialsView
    {
        /// <summary>
        /// Token de acesso.
        /// </summary>
        [JsonPropertyName("access_token")]
        public string AccessToken { get; set; }

        /// <summary>
        /// Tempo de expiração do token.
        /// </summary>
        [JsonPropertyName("expires_at")]
        public long? ExpiresAt { get; set; }

        /// <summary>
        /// Tempo de expiração do token.
        /// </summary>
        [JsonPropertyName("expires_in")]
        public long? ExpiresIn { get; set; }

        /// <summary>
        /// Token de identificação.
        /// </summary>
        [JsonPropertyName("id_token")]
        public string IdToken { get; set; }

        /// <summary>
        /// Token de refresh.
        /// </summary>
        [JsonPropertyName("refresh_token")]
        public string RefreshToken { get; set; }

        /// <summary>
        /// Escopo da autenticação.
        /// </summary>
        [JsonPropertyName("scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Estado da sessão.
        /// </summary>
        [JsonPropertyName("session_state")]
        public string SessionState { get; set; }

        /// <summary>
        /// Tipo do token.
        /// </summary>
        [JsonPropertyName("token_type")]
        public string TokenType { get; set; }
    }

    /// <summary>
    /// Obtêm informações sobre o estado de autenticação do ator.
    /// </summary>
    public partial class AuthWhoAmIOperation
    {
        [JsonPropertyName("output")]
        public AuthWhoAmIOperationOutput Output { get; set; }
    }

    public partial class AuthWhoAmIOperationOutput
    {
        [JsonPropertyName("success")]
        public StickySuccess Success { get; set; }
    }

    /// <summary>
    /// Informações sobre o ator..
    /// </summary>
    public partial class StickySuccess
    {
        /// <summary>
        /// Vínculos do usuário logado.
        /// </summary>
        [JsonPropertyName("perfisAtivos")]
        public PerfilElement[] PerfisAtivos { get; set; }

        /// <summary>
        /// Usuário autenticado.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Vínculo.
    /// </summary>
    public partial class PerfilElement
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Usuário.
    /// </summary>
    public partial class UsuarioElement
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        [JsonPropertyName("imagemPerfil")]
        public ImagemPerfilClass ImagemPerfil { get; set; }

        /// <summary>
        /// Diz que o usuário tem poderes de administrador.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Informações sobre o ator..
    /// </summary>
    public partial class AuthWhoAmIResultView
    {
        /// <summary>
        /// Vínculos do usuário logado.
        /// </summary>
        [JsonPropertyName("perfisAtivos")]
        public PerfilElement[] PerfisAtivos { get; set; }

        /// <summary>
        /// Usuário autenticado.
        /// </summary>
        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    /// <summary>
    /// Bloco.
    /// </summary>
    public partial class Bloco
    {
        /// <summary>
        /// Ambientes.
        /// </summary>
        [JsonPropertyName("ambientes")]
        public AmbienteElement[] Ambientes { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    public partial class BlocoCreateOperation
    {
        [JsonPropertyName("input")]
        public BlocoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoCreateOperationOutput Output { get; set; }
    }

    public partial class BlocoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public AmbitiousBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um bloco.
    /// </summary>
    public partial class AmbitiousBody
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um campus por id.
    /// </summary>
    public partial class BodyCampus
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class BlocoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public BlocoElement Success { get; set; }
    }

    public partial class BlocoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public BlocoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class BlocoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public CunningParams Params { get; set; }
    }

    public partial class CunningParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class BlocoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class BlocoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public BlocoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class BlocoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public MagentaParams Params { get; set; }
    }

    public partial class MagentaParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class BlocoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public BlocoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um bloco por id.
    /// </summary>
    public partial class BlocoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um bloco.
    /// </summary>
    public partial class BlocoFindOneResultView
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    public partial class BlocoGetCoverImage
    {
        [JsonPropertyName("input")]
        public BlocoGetCoverImageInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoGetCoverImageOutput Output { get; set; }
    }

    public partial class BlocoGetCoverImageInput
    {
        [JsonPropertyName("params")]
        public FriskyParams Params { get; set; }
    }

    public partial class FriskyParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class BlocoGetCoverImageOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um bloco.
    /// </summary>
    public partial class BlocoInputCreateView
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um bloco.
    /// </summary>
    public partial class BlocoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    public partial class BlocoListOperation
    {
        [JsonPropertyName("input")]
        public BlocoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoListOperationOutput Output { get; set; }
    }

    public partial class BlocoListOperationInput
    {
        [JsonPropertyName("queries")]
        public StickyQueries Queries { get; set; }
    }

    public partial class StickyQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class BlocoListOperationOutput
    {
        [JsonPropertyName("success")]
        public IndigoSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a blocos.
    /// </summary>
    public partial class IndigoSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public BlocoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a blocos.
    /// </summary>
    public partial class BlocoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public BlocoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class BlocoSetCoverImage
    {
        [JsonPropertyName("input")]
        public BlocoSetCoverImageInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoSetCoverImageOutput Output { get; set; }
    }

    public partial class BlocoSetCoverImageInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public MischievousParams Params { get; set; }
    }

    public partial class MischievousParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class BlocoSetCoverImageOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class BlocoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public BlocoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public BlocoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class BlocoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public CunningBody Body { get; set; }

        [JsonPropertyName("params")]
        public BraggadociousParams Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um bloco.
    /// </summary>
    public partial class CunningBody
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    public partial class BraggadociousParams
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class BlocoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public BlocoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um bloco.
    /// </summary>
    public partial class BlocoView
    {
        [JsonPropertyName("ambientes")]
        public AmbientePadraoElement[] Ambientes { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonPropertyName("codigo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Codigo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }
    }

    /// <summary>
    /// CalendarioLetivo.
    /// </summary>
    public partial class CalendarioLetivo
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Campus ao qual o calendário letivo pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Oferta de formação do calendário letivo.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class CalendarioLetivoCreateOperation
    {
        [JsonPropertyName("input")]
        public CalendarioLetivoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CalendarioLetivoCreateOperationOutput Output { get; set; }
    }

    public partial class CalendarioLetivoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public MagentaBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um calendário letivo.
    /// </summary>
    public partial class MagentaBody
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma oferta de formação por ID.
    /// </summary>
    public partial class BodyOfertaFormacao
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CalendarioLetivoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public CalendarioElement Success { get; set; }
    }

    public partial class CalendarioLetivoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public CalendarioLetivoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CalendarioLetivoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class CalendarioLetivoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params1 Params { get; set; }
    }

    public partial class Params1
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CalendarioLetivoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class CalendarioLetivoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public CalendarioLetivoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CalendarioLetivoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class CalendarioLetivoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params2 Params { get; set; }
    }

    public partial class Params2
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CalendarioLetivoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public CalendarioElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um calendário letivo por ID.
    /// </summary>
    public partial class CalendarioLetivoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um calendário letivo.
    /// </summary>
    public partial class CalendarioLetivoFindOneResultView
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um calendário letivo.
    /// </summary>
    public partial class CalendarioLetivoInputCreateView
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um calendário letivo.
    /// </summary>
    public partial class CalendarioLetivoInputUpdateView
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ano")]
        public long? Ano { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class CalendarioLetivoListOperation
    {
        [JsonPropertyName("input")]
        public CalendarioLetivoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CalendarioLetivoListOperationOutput Output { get; set; }
    }

    public partial class CalendarioLetivoListOperationInput
    {
        [JsonPropertyName("queries")]
        public IndigoQueries Queries { get; set; }
    }

    public partial class IndigoQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ofertaFormacao.id")]
        public string[] FilterOfertaFormacaoId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class CalendarioLetivoListOperationOutput
    {
        [JsonPropertyName("success")]
        public IndecentSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a CalendarioLetivos.
    /// </summary>
    public partial class IndecentSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CalendarioElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a CalendarioLetivos.
    /// </summary>
    public partial class CalendarioLetivoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CalendarioElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class CalendarioLetivoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public CalendarioLetivoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CalendarioLetivoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class CalendarioLetivoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public FriskyBody Body { get; set; }

        [JsonPropertyName("params")]
        public Params3 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um calendário letivo.
    /// </summary>
    public partial class FriskyBody
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ano")]
        public long? Ano { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class Params3
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CalendarioLetivoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public CalendarioElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um calendário letivo.
    /// </summary>
    public partial class CalendarioLetivoView
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonPropertyName("ano")]
        public long Ano { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Campus.
    /// </summary>
    public partial class Campus
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Endereço do campus
        /// </summary>
        [JsonPropertyName("endereco")]
        public CampusEndereco Endereco { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Operação de criação de um campus.
    /// </summary>
    public partial class CampusCreateOperation
    {
        [JsonPropertyName("input")]
        public CampusCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CampusCreateOperationOutput Output { get; set; }
    }

    public partial class CampusCreateOperationInput
    {
        [JsonPropertyName("body")]
        public MischievousBody Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um campus.
    /// </summary>
    public partial class MischievousBody
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        [JsonPropertyName("endereco")]
        public BodyEndereco Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um endereco.
    /// </summary>
    public partial class BodyEndereco
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        [JsonPropertyName("cidade")]
        public EnderecoInputCidade Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma cidade por id.
    /// </summary>
    public partial class EnderecoInputCidade
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    public partial class CampusCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public CampusElement Success { get; set; }
    }

    public partial class CampusDeleteOneByIdOperation
    {
        [JsonPropertyName("input")]
        public CampusDeleteOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CampusDeleteOneByIdOperationOutput Output { get; set; }
    }

    public partial class CampusDeleteOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params4 Params { get; set; }
    }

    public partial class Params4
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CampusDeleteOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class CampusFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public CampusFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CampusFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class CampusFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params5 Params { get; set; }
    }

    public partial class Params5
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CampusFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public CampusElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um campus por id.
    /// </summary>
    public partial class CampusFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um campus.
    /// </summary>
    public partial class CampusFindOneResultView
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("endereco")]
        public SuccessEndereco Endereco { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um campus.
    /// </summary>
    public partial class CampusInputCreateView
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        [JsonPropertyName("endereco")]
        public BodyEndereco Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um campus.
    /// </summary>
    public partial class CampusInputUpdateView
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("endereco")]
        public BodyEndereco Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    public partial class CampusListOperation
    {
        [JsonPropertyName("input")]
        public CampusListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CampusListOperationOutput Output { get; set; }
    }

    public partial class CampusListOperationInput
    {
        [JsonPropertyName("queries")]
        public IndecentQueries Queries { get; set; }
    }

    public partial class IndecentQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.endereco.cidade.estado.id")]
        public string[] FilterEnderecoCidadeEstadoId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.endereco.cidade.id")]
        public string[] FilterEnderecoCidadeId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class CampusListOperationOutput
    {
        [JsonPropertyName("success")]
        public HilariousSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a campi.
    /// </summary>
    public partial class HilariousSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CampusElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a campi.
    /// </summary>
    public partial class CampusListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CampusElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Operação de atualização de um campus.
    /// </summary>
    public partial class CampusUpdateOperation
    {
        [JsonPropertyName("input")]
        public CampusUpdateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CampusUpdateOperationOutput Output { get; set; }
    }

    public partial class CampusUpdateOperationInput
    {
        [JsonPropertyName("body")]
        public BraggadociousBody Body { get; set; }

        [JsonPropertyName("params")]
        public Params6 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um campus.
    /// </summary>
    public partial class BraggadociousBody
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("endereco")]
        public BodyEndereco Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    public partial class Params6
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CampusUpdateOperationOutput
    {
        [JsonPropertyName("success")]
        public CampusElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um campus.
    /// </summary>
    public partial class CampusView
    {
        /// <summary>
        /// Apelido do campus.
        /// </summary>
        [JsonPropertyName("apelido")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do campus.
        /// </summary>
        [JsonPropertyName("cnpj")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("endereco")]
        public SuccessEndereco Endereco { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do campus.
        /// </summary>
        [JsonPropertyName("nomeFantasia")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do campus.
        /// </summary>
        [JsonPropertyName("razaoSocial")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Cidade.
    /// </summary>
    public partial class Cidade
    {
        /// <summary>
        /// Estado da cidade
        /// </summary>
        [JsonPropertyName("estado")]
        public CidadeEstado Estado { get; set; }

        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class CidadeFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public CidadeFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CidadeFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class CidadeFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params7 Params { get; set; }
    }

    public partial class Params7
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    public partial class CidadeFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public CidadeElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma cidade por id.
    /// </summary>
    public partial class CidadeFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma cidade.
    /// </summary>
    public partial class CidadeFindOneResultView
    {
        [JsonPropertyName("estado")]
        public EstadoElement Estado { get; set; }

        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class CidadeListOperation
    {
        [JsonPropertyName("input")]
        public CidadeListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CidadeListOperationOutput Output { get; set; }
    }

    public partial class CidadeListOperationInput
    {
        [JsonPropertyName("queries")]
        public HilariousQueries Queries { get; set; }
    }

    public partial class HilariousQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.estado.id")]
        public string[] FilterEstadoId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class CidadeListOperationOutput
    {
        [JsonPropertyName("success")]
        public AmbitiousSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a cidades.
    /// </summary>
    public partial class AmbitiousSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CidadeElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a cidades.
    /// </summary>
    public partial class CidadeListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CidadeElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Visão completa de uma cidade.
    /// </summary>
    public partial class CidadeView
    {
        [JsonPropertyName("estado")]
        public EstadoElement Estado { get; set; }

        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da cidade.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Curso.
    /// </summary>
    public partial class Curso
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa do curso.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        /// <summary>
        /// Oferta de formação do curso.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class CursoCreateOperation
    {
        [JsonPropertyName("input")]
        public CursoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoCreateOperationOutput Output { get; set; }
    }

    public partial class CursoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body1 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Curso.
    /// </summary>
    public partial class Body1
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class CursoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public CursoElement Success { get; set; }
    }

    public partial class CursoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public CursoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class CursoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params8 Params { get; set; }
    }

    public partial class Params8
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CursoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class CursoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public CursoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class CursoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params9 Params { get; set; }
    }

    public partial class Params9
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CursoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public CursoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Curso por ID.
    /// </summary>
    public partial class CursoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Curso.
    /// </summary>
    public partial class CursoFindOneResultView
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    public partial class CursoGetImagemCapa
    {
        [JsonPropertyName("input")]
        public CursoGetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoGetImagemCapaOutput Output { get; set; }
    }

    public partial class CursoGetImagemCapaInput
    {
        [JsonPropertyName("params")]
        public Params10 Params { get; set; }
    }

    public partial class Params10
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CursoGetImagemCapaOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Curso.
    /// </summary>
    public partial class CursoInputCreateView
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Curso.
    /// </summary>
    public partial class CursoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class CursoListOperation
    {
        [JsonPropertyName("input")]
        public CursoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoListOperationOutput Output { get; set; }
    }

    public partial class CursoListOperationInput
    {
        [JsonPropertyName("queries")]
        public AmbitiousQueries Queries { get; set; }
    }

    public partial class AmbitiousQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ofertaFormacao.id")]
        public string[] FilterOfertaFormacaoId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class CursoListOperationOutput
    {
        [JsonPropertyName("success")]
        public CunningSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Cursos.
    /// </summary>
    public partial class CunningSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CursoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Cursos.
    /// </summary>
    public partial class CursoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public CursoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class CursoSetImagemCapa
    {
        [JsonPropertyName("input")]
        public CursoSetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoSetImagemCapaOutput Output { get; set; }
    }

    public partial class CursoSetImagemCapaInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public Params11 Params { get; set; }
    }

    public partial class Params11
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CursoSetImagemCapaOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class CursoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public CursoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public CursoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class CursoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body2 Body { get; set; }

        [JsonPropertyName("params")]
        public Params12 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Curso.
    /// </summary>
    public partial class Body2
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class Params12
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class CursoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public CursoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um Curso.
    /// </summary>
    public partial class CursoView
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Estrutura datada.
    /// </summary>
    public partial class DatedObject
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }
    }

    /// <summary>
    /// DiaCalendario.
    /// </summary>
    public partial class DiaCalendario
    {
        /// <summary>
        /// Calendario.
        /// </summary>
        [JsonPropertyName("calendario")]
        public DiarioCalendario Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiaCalendarioCreateOperation
    {
        [JsonPropertyName("input")]
        public DiaCalendarioCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiaCalendarioCreateOperationOutput Output { get; set; }
    }

    public partial class DiaCalendarioCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body3 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiaCalendario.
    /// </summary>
    public partial class Body3
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um calendário letivo por ID.
    /// </summary>
    public partial class BodyCalendarioLetivo
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiaCalendarioCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DiaCalendarioListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioListResultViewSuccess
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiaCalendarioDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DiaCalendarioDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiaCalendarioDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DiaCalendarioDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params13 Params { get; set; }
    }

    public partial class Params13
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiaCalendarioDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DiaCalendarioFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public DiaCalendarioFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiaCalendarioFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class DiaCalendarioFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params14 Params { get; set; }
    }

    public partial class Params14
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiaCalendarioFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiaCalendarioListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiaCalendario por ID.
    /// </summary>
    public partial class DiaCalendarioFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioFindOneResultView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioInputCreateView
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioInputUpdateView
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diaLetivo")]
        public bool? DiaLetivo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("feriado")]
        public bool? Feriado { get; set; }
    }

    public partial class DiaCalendarioListOperation
    {
        [JsonPropertyName("input")]
        public DiaCalendarioListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiaCalendarioListOperationOutput Output { get; set; }
    }

    public partial class DiaCalendarioListOperationInput
    {
        [JsonPropertyName("queries")]
        public CunningQueries Queries { get; set; }
    }

    public partial class CunningQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendario.id")]
        public string[] FilterCalendarioId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DiaCalendarioListOperationOutput
    {
        [JsonPropertyName("success")]
        public MagentaSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DiaCalendarios.
    /// </summary>
    public partial class MagentaSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiaCalendarioListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DiaCalendarios.
    /// </summary>
    public partial class DiaCalendarioListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiaCalendarioListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class DiaCalendarioUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DiaCalendarioUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiaCalendarioUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DiaCalendarioUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body4 Body { get; set; }

        [JsonPropertyName("params")]
        public Params15 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiaCalendario.
    /// </summary>
    public partial class Body4
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diaLetivo")]
        public bool? DiaLetivo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("feriado")]
        public bool? Feriado { get; set; }
    }

    public partial class Params15
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiaCalendarioUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiaCalendarioListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonPropertyName("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonPropertyName("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Diario.
    /// </summary>
    public partial class Diario
    {
        /// <summary>
        /// Ambiente padrão.
        /// </summary>
        [JsonPropertyName("ambientePadrao")]
        public AmbienteElement AmbientePadrao { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Calendário Letivo vinculado ao diário.
        /// </summary>
        [JsonPropertyName("calendarioLetivo")]
        public DiarioCalendario CalendarioLetivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonPropertyName("disciplina")]
        public DiarioDisciplina Disciplina { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa do diário.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonPropertyName("turma")]
        public DiarioTurma Turma { get; set; }
    }

    public partial class DiarioCreateOperation
    {
        [JsonPropertyName("input")]
        public DiarioCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioCreateOperationOutput Output { get; set; }
    }

    public partial class DiarioCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body5 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um diário.
    /// </summary>
    public partial class Body5
    {
        [JsonPropertyName("ambientePadrao")]
        public BodyAmbiente AmbientePadrao { get; set; }

        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("calendarioLetivo")]
        public BodyCalendarioLetivo CalendarioLetivo { get; set; }

        [JsonPropertyName("disciplina")]
        public BodyDisciplina Disciplina { get; set; }

        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Disciplina por ID.
    /// </summary>
    public partial class BodyDisciplina
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Turma por ID.
    /// </summary>
    public partial class BodyTurma
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioElement Success { get; set; }
    }

    public partial class DiarioDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params16 Params { get; set; }
    }

    public partial class Params16
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DiarioFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params17 Params { get; set; }
    }

    public partial class Params17
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um diário por ID.
    /// </summary>
    public partial class DiarioFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um diário.
    /// </summary>
    public partial class DiarioFindOneResultView
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbientePadraoElement AmbientePadrao { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("calendarioLetivo")]
        public CalendarioElement CalendarioLetivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disciplina")]
        public DisciplinaElement Disciplina { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        [JsonPropertyName("turma")]
        public TurmaElement Turma { get; set; }
    }

    /// <summary>
    /// Operações extras para a imagem de capa do diário.
    /// </summary>
    public partial class DiarioGetCoverImageOperation
    {
        [JsonPropertyName("input")]
        public DiarioGetCoverImageOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioGetCoverImageOperationOutput Output { get; set; }
    }

    public partial class DiarioGetCoverImageOperationInput
    {
        [JsonPropertyName("params")]
        public Params18 Params { get; set; }
    }

    public partial class Params18
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioGetCoverImageOperationOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um diário.
    /// </summary>
    public partial class DiarioInputCreateView
    {
        [JsonPropertyName("ambientePadrao")]
        public BodyAmbiente AmbientePadrao { get; set; }

        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("calendarioLetivo")]
        public BodyCalendarioLetivo CalendarioLetivo { get; set; }

        [JsonPropertyName("disciplina")]
        public BodyDisciplina Disciplina { get; set; }

        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um diário.
    /// </summary>
    public partial class DiarioInputUpdateView
    {
        [JsonPropertyName("ambientePadrao")]
        public BodyAmbiente AmbientePadrao { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ativo")]
        public bool? Ativo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendarioLetivo")]
        public BodyCalendarioLetivo CalendarioLetivo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disciplina")]
        public BodyDisciplina Disciplina { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    public partial class DiarioListOperation
    {
        [JsonPropertyName("input")]
        public DiarioListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioListOperationOutput Output { get; set; }
    }

    public partial class DiarioListOperationInput
    {
        [JsonPropertyName("queries")]
        public MagentaQueries Queries { get; set; }
    }

    public partial class MagentaQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadrao.id")]
        public string[] FilterAmbientePadraoId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendarioLetivo.id")]
        public string[] FilterCalendarioLetivoId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.disciplina.id")]
        public string[] FilterDisciplinaId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.turma.id")]
        public string[] FilterTurmaId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DiarioListOperationOutput
    {
        [JsonPropertyName("success")]
        public FriskySuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Diarios.
    /// </summary>
    public partial class FriskySuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Diarios.
    /// </summary>
    public partial class DiarioListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamento
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonPropertyName("aulasSeguidas")]
        public long AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonPropertyName("diario")]
        public AulaDiario Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de tempo.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public AulaIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoCreateOperation
    {
        [JsonPropertyName("input")]
        public DiarioPreferenciaAgrupamentoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioPreferenciaAgrupamentoCreateOperationOutput Output { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body6 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class Body6
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonPropertyName("aulasSeguidas")]
        public long AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioPreferenciaAgrupamentoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoListResultViewSuccess
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonPropertyName("aulasSeguidas")]
        public long AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioPreferenciaAgrupamentoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioPreferenciaAgrupamentoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params19 Params { get; set; }
    }

    public partial class Params19
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoFindByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioPreferenciaAgrupamentoFindByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioPreferenciaAgrupamentoFindByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoFindByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params20 Params { get; set; }
    }

    public partial class Params20
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoFindByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioPreferenciaAgrupamentoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiarioPreferenciaAgrupamento por ID.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoFindOneResultView
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonPropertyName("aulasSeguidas")]
        public long AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoInputCreateView
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonPropertyName("aulasSeguidas")]
        public long AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoInputUpdateView
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("aulasSeguidas")]
        public long? AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diaSemanaIso")]
        public long? DiaSemanaIso { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoListOperation
    {
        [JsonPropertyName("input")]
        public DiarioPreferenciaAgrupamentoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioPreferenciaAgrupamentoListOperationOutput Output { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoListOperationInput
    {
        [JsonPropertyName("queries")]
        public FriskyQueries Queries { get; set; }
    }

    public partial class FriskyQueries
    {
        [JsonPropertyName("filter_diario_id")]
        public string[] FilterDiarioId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoListOperationOutput
    {
        [JsonPropertyName("success")]
        public MischievousSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca de DiarioPreferenciaAgrupamentos.
    /// </summary>
    public partial class MischievousSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioPreferenciaAgrupamentoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca de DiarioPreferenciaAgrupamentos.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioPreferenciaAgrupamentoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioPreferenciaAgrupamentoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioPreferenciaAgrupamentoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body7 Body { get; set; }

        [JsonPropertyName("params")]
        public Params21 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class Body7
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("aulasSeguidas")]
        public long? AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diaSemanaIso")]
        public long? DiaSemanaIso { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class Params21
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioPreferenciaAgrupamentoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioPreferenciaAgrupamentoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um DiarioPreferenciaAgrupamento.
    /// </summary>
    public partial class DiarioPreferenciaAgrupamentoView
    {
        /// <summary>
        /// Quantidade de aulas seguidas.
        /// </summary>
        [JsonPropertyName("aulasSeguidas")]
        public long AulasSeguidas { get; set; }

        /// <summary>
        /// Fim da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Início da vigência da preferência de agrupamento.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonPropertyName("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessor
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonPropertyName("diario")]
        public AulaDiario Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Perfil do usuário ao campus.
        /// </summary>
        [JsonPropertyName("perfil")]
        public DiarioProfessorPerfil Perfil { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    /// <summary>
    /// Perfil do usuário ao campus.
    ///
    /// Vínculo.
    ///
    /// Professor.
    /// </summary>
    public partial class DiarioProfessorPerfil
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonPropertyName("usuario")]
        public PerfilUsuario Usuario { get; set; }
    }

    /// <summary>
    /// Usuário associado ao vínculo.
    ///
    /// Usuário.
    ///
    /// Usuário que fez a reserva.
    /// </summary>
    public partial class PerfilUsuario
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa do usuário.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Imagem de perfil do usuário.
        /// </summary>
        [JsonPropertyName("imagemPerfil")]
        public ImagemCapaClass ImagemPerfil { get; set; }

        /// <summary>
        /// Diz que o usuário tem poderes de administrador.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class DiarioProfessorCreateOperation
    {
        [JsonPropertyName("input")]
        public DiarioProfessorCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioProfessorCreateOperationOutput Output { get; set; }
    }

    public partial class DiarioProfessorCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body8 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiarioProfessor.
    /// </summary>
    public partial class Body8
    {
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }

        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Vínculo por ID.
    /// </summary>
    public partial class BodyPerfil
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioProfessorCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioProfessorElement Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorElement
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("perfil")]
        public PerfilElement Perfil { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    public partial class DiarioProfessorDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioProfessorDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioProfessorDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioProfessorDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params22 Params { get; set; }
    }

    public partial class Params22
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioProfessorDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DiarioProfessorFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioProfessorFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioProfessorFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioProfessorFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params23 Params { get; set; }
    }

    public partial class Params23
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioProfessorFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioProfessorElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiarioProfessor por ID.
    /// </summary>
    public partial class DiarioProfessorFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("perfil")]
        public PerfilElement Perfil { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorInputCreateView
    {
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }

        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("situacao")]
        public bool? Situacao { get; set; }
    }

    public partial class DiarioProfessorListOperation
    {
        [JsonPropertyName("input")]
        public DiarioProfessorListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioProfessorListOperationOutput Output { get; set; }
    }

    public partial class DiarioProfessorListOperationInput
    {
        [JsonPropertyName("queries")]
        public MischievousQueries Queries { get; set; }
    }

    public partial class MischievousQueries
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.diario.id")]
        public string[] FilterDiarioId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.perfil.id")]
        public string[] FilterPerfilId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DiarioProfessorListOperationOutput
    {
        [JsonPropertyName("success")]
        public BraggadociousSuccess Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DiarioProfessor.
    /// </summary>
    public partial class BraggadociousSuccess
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioProfessorElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DiarioProfessorElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class DiarioProfessorUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioProfessorUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioProfessorUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioProfessorUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body9 Body { get; set; }

        [JsonPropertyName("params")]
        public Params24 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiarioProfessor.
    /// </summary>
    public partial class Body9
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diario")]
        public BodyDiario Diario { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("situacao")]
        public bool? Situacao { get; set; }
    }

    public partial class Params24
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioProfessorUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioProfessorElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("diario")]
        public DiarioElement Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("perfil")]
        public PerfilElement Perfil { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    public partial class DiarioSetCoverImageOperation
    {
        [JsonPropertyName("input")]
        public DiarioSetCoverImageOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioSetCoverImageOperationOutput Output { get; set; }
    }

    public partial class DiarioSetCoverImageOperationInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public Params25 Params { get; set; }
    }

    public partial class Params25
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioSetCoverImageOperationOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DiarioUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DiarioUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DiarioUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DiarioUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body10 Body { get; set; }

        [JsonPropertyName("params")]
        public Params26 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um diário.
    /// </summary>
    public partial class Body10
    {
        [JsonPropertyName("ambientePadrao")]
        public BodyAmbiente AmbientePadrao { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ativo")]
        public bool? Ativo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendarioLetivo")]
        public BodyCalendarioLetivo CalendarioLetivo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disciplina")]
        public BodyDisciplina Disciplina { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    public partial class Params26
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DiarioUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DiarioElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um diário.
    /// </summary>
    public partial class DiarioView
    {
        [JsonPropertyName("ambientePadrao")]
        public AmbientePadraoElement AmbientePadrao { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("calendarioLetivo")]
        public CalendarioElement CalendarioLetivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disciplina")]
        public DisciplinaElement Disciplina { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        [JsonPropertyName("turma")]
        public TurmaElement Turma { get; set; }
    }

    /// <summary>
    /// Disciplina.
    /// </summary>
    public partial class Disciplina
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa da disciplina.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    public partial class DisciplinaCreateOperation
    {
        [JsonPropertyName("input")]
        public DisciplinaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaCreateOperationOutput Output { get; set; }
    }

    public partial class DisciplinaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body11 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Disciplina.
    /// </summary>
    public partial class Body11
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    public partial class DisciplinaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DisciplinaElement Success { get; set; }
    }

    public partial class DisciplinaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DisciplinaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DisciplinaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params27 Params { get; set; }
    }

    public partial class Params27
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisciplinaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DisciplinaFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public DisciplinaFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class DisciplinaFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params28 Params { get; set; }
    }

    public partial class Params28
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisciplinaFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DisciplinaElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Disciplina por ID.
    /// </summary>
    public partial class DisciplinaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Disciplina.
    /// </summary>
    public partial class DisciplinaFindOneResultView
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    public partial class DisciplinaGetImagemCapa
    {
        [JsonPropertyName("input")]
        public DisciplinaGetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaGetImagemCapaOutput Output { get; set; }
    }

    public partial class DisciplinaGetImagemCapaInput
    {
        [JsonPropertyName("params")]
        public Params29 Params { get; set; }
    }

    public partial class Params29
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisciplinaGetImagemCapaOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Disciplina.
    /// </summary>
    public partial class DisciplinaInputCreateView
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Disciplina.
    /// </summary>
    public partial class DisciplinaInputUpdateView
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("cargaHoraria")]
        public long? CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    public partial class DisciplinaListOperation
    {
        [JsonPropertyName("input")]
        public DisciplinaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaListOperationOutput Output { get; set; }
    }

    public partial class DisciplinaListOperationInput
    {
        [JsonPropertyName("queries")]
        public BraggadociousQueries Queries { get; set; }
    }

    public partial class BraggadociousQueries
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DisciplinaListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success1 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Disciplinas.
    /// </summary>
    public partial class Success1
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisciplinaElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Disciplinas.
    /// </summary>
    public partial class DisciplinaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisciplinaElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class DisciplinaSetImagemCapa
    {
        [JsonPropertyName("input")]
        public DisciplinaSetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaSetImagemCapaOutput Output { get; set; }
    }

    public partial class DisciplinaSetImagemCapaInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public Params30 Params { get; set; }
    }

    public partial class Params30
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisciplinaSetImagemCapaOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DisciplinaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DisciplinaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisciplinaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DisciplinaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body12 Body { get; set; }

        [JsonPropertyName("params")]
        public Params31 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Disciplina.
    /// </summary>
    public partial class Body12
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("cargaHoraria")]
        public long? CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    public partial class Params31
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisciplinaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DisciplinaElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Disciplina.
    /// </summary>
    public partial class DisciplinaView
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonPropertyName("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonPropertyName("nomeAbreviado")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Disponibilidade.
    /// </summary>
    public partial class Disponibilidade
    {
        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeCreateOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeCreateOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body13 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Disponibilidade.
    /// </summary>
    public partial class Body13
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }
    }

    public partial class DisponibilidadeCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DisponibilidadeElement Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Disponibilidade.
    /// </summary>
    public partial class DisponibilidadeElement
    {
        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params32 Params { get; set; }
    }

    public partial class Params32
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDia
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disponibilidade.
        /// </summary>
        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeDiaDisponibilidade Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de tempo.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public AulaIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    /// <summary>
    /// Disponibilidade.
    /// </summary>
    public partial class DisponibilidadeDiaDisponibilidade
    {
        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDiaCreateOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeDiaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeDiaCreateOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeDiaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body14 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DisponibilidadeDia.
    /// </summary>
    public partial class Body14
    {
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Disponibilidade por ID.
    /// </summary>
    public partial class BodyDisponibilidade
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDiaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public DisponibilidadeDiaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDiaListResultViewSuccess
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class DisponibilidadeDiaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeDiaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeDiaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeDiaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params33 Params { get; set; }
    }

    public partial class Params33
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDiaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class DisponibilidadeDiaFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeDiaFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeDiaFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeDiaFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params34 Params { get; set; }
    }

    public partial class Params34
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDiaFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DisponibilidadeDiaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DisponibilidadeDia por ID.
    /// </summary>
    public partial class DisponibilidadeDiaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDiaFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDiaInputCreateView
    {
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDiaInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class DisponibilidadeDiaListOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeDiaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeDiaListOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeDiaListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries1 Queries { get; set; }
    }

    public partial class Queries1
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.disponibilidade.id")]
        public string[] FilterDisponibilidadeId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DisponibilidadeDiaListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success2 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DisponibilidadeDia.
    /// </summary>
    public partial class Success2
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisponibilidadeDiaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDiaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisponibilidadeDiaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class DisponibilidadeDiaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeDiaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeDiaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeDiaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body15 Body { get; set; }

        [JsonPropertyName("params")]
        public Params35 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DisponibilidadeDia.
    /// </summary>
    public partial class Body15
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class Params35
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeDiaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DisponibilidadeDiaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um DisponibilidadeDia.
    /// </summary>
    public partial class DisponibilidadeDiaView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class DisponibilidadeFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params36 Params { get; set; }
    }

    public partial class Params36
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DisponibilidadeElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Disponibilidade por ID.
    /// </summary>
    public partial class DisponibilidadeFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Disponibilidade.
    /// </summary>
    public partial class DisponibilidadeFindOneResultView
    {
        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Disponibilidade.
    /// </summary>
    public partial class DisponibilidadeInputCreateView
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Disponibilidade.
    /// </summary>
    public partial class DisponibilidadeInputUpdateView
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }
    }

    public partial class DisponibilidadeListOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeListOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries2 Queries { get; set; }
    }

    public partial class Queries2
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class DisponibilidadeListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success3 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Disponibilidades.
    /// </summary>
    public partial class Success3
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisponibilidadeElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Disponibilidades.
    /// </summary>
    public partial class DisponibilidadeListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public DisponibilidadeElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class DisponibilidadeUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public DisponibilidadeUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public DisponibilidadeUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class DisponibilidadeUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body16 Body { get; set; }

        [JsonPropertyName("params")]
        public Params37 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Disponibilidade.
    /// </summary>
    public partial class Body16
    {
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }
    }

    public partial class Params37
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class DisponibilidadeUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public DisponibilidadeElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Disponibilidade.
    /// </summary>
    public partial class DisponibilidadeView
    {
        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Endereço.
    /// </summary>
    public partial class Endereco
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade.
        /// </summary>
        [JsonPropertyName("cidade")]
        public EnderecoCidade Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um endereço por id.
    /// </summary>
    public partial class EnderecoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um endereço.
    /// </summary>
    public partial class EnderecoFindOneResultView
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        [JsonPropertyName("cidade")]
        public CidadeElement Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um endereco.
    /// </summary>
    public partial class EnderecoInput
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        [JsonPropertyName("cidade")]
        public EnderecoInputCidade Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Visão completa de um endereco.
    /// </summary>
    public partial class EnderecoView
    {
        /// <summary>
        /// Bairro.
        /// </summary>
        [JsonPropertyName("bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// Código postal (CEP).
        /// </summary>
        [JsonPropertyName("cep")]
        public string Cep { get; set; }

        [JsonPropertyName("cidade")]
        public CidadeElement Cidade { get; set; }

        /// <summary>
        /// Complemento.
        /// </summary>
        [JsonPropertyName("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro.
        /// </summary>
        [JsonPropertyName("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número.
        /// </summary>
        [JsonPropertyName("numero")]
        public long Numero { get; set; }

        /// <summary>
        /// Ponto de referência.
        /// </summary>
        [JsonPropertyName("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Estado.
    /// </summary>
    public partial class Estado
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    public partial class EstadoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public EstadoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EstadoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class EstadoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params38 Params { get; set; }
    }

    public partial class Params38
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    public partial class EstadoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public EstadoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um estado por id.
    /// </summary>
    public partial class EstadoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um estado.
    /// </summary>
    public partial class EstadoFindOneResultView
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    public partial class EstadoListOperation
    {
        [JsonPropertyName("input")]
        public EstadoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EstadoListOperationOutput Output { get; set; }
    }

    public partial class EstadoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries3 Queries { get; set; }
    }

    public partial class Queries3
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class EstadoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success4 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a estados.
    /// </summary>
    public partial class Success4
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EstadoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a estados.
    /// </summary>
    public partial class EstadoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EstadoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Visão completa de um estado.
    /// </summary>
    public partial class EstadoView
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do estado.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do estado.
        /// </summary>
        [JsonPropertyName("sigla")]
        public string Sigla { get; set; }
    }

    /// <summary>
    /// Etapa.
    /// </summary>
    public partial class Etapa
    {
        /// <summary>
        /// Calendario.
        /// </summary>
        [JsonPropertyName("calendario")]
        public DiarioCalendario Calendario { get; set; }

        /// <summary>
        /// Cor da etapa.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Número da etapa.
        /// </summary>
        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    public partial class EtapaCreateOperation
    {
        [JsonPropertyName("input")]
        public EtapaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EtapaCreateOperationOutput Output { get; set; }
    }

    public partial class EtapaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body17 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Etapa.
    /// </summary>
    public partial class Body17
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    public partial class EtapaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public EtapaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Etapa.
    /// </summary>
    public partial class EtapaListResultViewSuccess
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Cor da etapa.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Número da etapa.
        /// </summary>
        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    public partial class EtapaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public EtapaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EtapaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class EtapaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params39 Params { get; set; }
    }

    public partial class Params39
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class EtapaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class EtapaFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public EtapaFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EtapaFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class EtapaFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params40 Params { get; set; }
    }

    public partial class Params40
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class EtapaFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public EtapaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Etapa por ID.
    /// </summary>
    public partial class EtapaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Etapa.
    /// </summary>
    public partial class EtapaFindOneResultView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Cor da etapa.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Número da etapa.
        /// </summary>
        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Etapa.
    /// </summary>
    public partial class EtapaInputCreateView
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Etapa.
    /// </summary>
    public partial class EtapaInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    public partial class EtapaListOperation
    {
        [JsonPropertyName("input")]
        public EtapaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EtapaListOperationOutput Output { get; set; }
    }

    public partial class EtapaListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries4 Queries { get; set; }
    }

    public partial class Queries4
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendario.id")]
        public string[] FilterCalendarioId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class EtapaListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success5 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Etapas.
    /// </summary>
    public partial class Success5
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EtapaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Etapas.
    /// </summary>
    public partial class EtapaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EtapaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class EtapaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public EtapaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EtapaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class EtapaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body18 Body { get; set; }

        [JsonPropertyName("params")]
        public Params41 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Etapa.
    /// </summary>
    public partial class Body18
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    public partial class Params41
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class EtapaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public EtapaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Etapa.
    /// </summary>
    public partial class EtapaView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Cor da etapa.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonPropertyName("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonPropertyName("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Número da etapa.
        /// </summary>
        [JsonPropertyName("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Evento.
    /// </summary>
    public partial class Evento
    {
        /// <summary>
        /// Calendario.
        /// </summary>
        [JsonPropertyName("calendario")]
        public DiarioCalendario Calendario { get; set; }

        /// <summary>
        /// Cor da Evento.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do evento.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class EventoCreateOperation
    {
        [JsonPropertyName("input")]
        public EventoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EventoCreateOperationOutput Output { get; set; }
    }

    public partial class EventoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body19 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Evento.
    /// </summary>
    public partial class Body19
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class EventoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public EventoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Evento.
    /// </summary>
    public partial class EventoListResultViewSuccess
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Cor da Evento.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do evento.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class EventoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public EventoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EventoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class EventoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params42 Params { get; set; }
    }

    public partial class Params42
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class EventoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class EventoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public EventoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EventoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class EventoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params43 Params { get; set; }
    }

    public partial class Params43
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class EventoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public EventoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Evento por ID.
    /// </summary>
    public partial class EventoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Evento.
    /// </summary>
    public partial class EventoFindOneResultView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Cor da Evento.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do evento.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Evento.
    /// </summary>
    public partial class EventoInputCreateView
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Evento.
    /// </summary>
    public partial class EventoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class EventoListOperation
    {
        [JsonPropertyName("input")]
        public EventoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EventoListOperationOutput Output { get; set; }
    }

    public partial class EventoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries5 Queries { get; set; }
    }

    public partial class Queries5
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.calendario.id")]
        public string[] FilterCalendarioId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class EventoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success6 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Eventos.
    /// </summary>
    public partial class Success6
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EventoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Eventos.
    /// </summary>
    public partial class EventoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public EventoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class EventoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public EventoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public EventoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class EventoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body20 Body { get; set; }

        [JsonPropertyName("params")]
        public Params44 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Evento.
    /// </summary>
    public partial class Body20
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class Params44
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class EventoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public EventoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um Evento.
    /// </summary>
    public partial class EventoView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Cor da Evento.
        /// </summary>
        [JsonPropertyName("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome do evento.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }
    }

    public partial class GenericSearchInputView
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// GradeHorarioOfertaFormacao.
    /// </summary>
    public partial class GradeHorarioOfertaFormacao
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Oferta de formação.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoCreateOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoCreateOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body21 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class Body21
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public GradeHorarioOfertaFormacaoElement Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoElement
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params45 Params { get; set; }
    }

    public partial class Params45
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params46 Params { get; set; }
    }

    public partial class Params46
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public GradeHorarioOfertaFormacaoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma oferta de formação por ID.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoFindOneResultView
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoInputCreateView
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// GradeHorarioOfertaFormacaoIntervaloDeTempo.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Grade de horário da oferta de formação.
        /// </summary>
        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoGradeHorarioOfertaFormacao GradeHorarioOfertaFormacao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de tempo.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public AulaIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Grade de horário da oferta de formação.
    ///
    /// GradeHorarioOfertaFormacao.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoGradeHorarioOfertaFormacao
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Oferta de formação.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body22 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class Body22
    {
        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public BodyGradeHorarioOfertaFormacao GradeHorarioOfertaFormacao { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma oferta de formação por ID.
    /// </summary>
    public partial class BodyGradeHorarioOfertaFormacao
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListResultViewSuccess
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public GradeHorarioOfertaFormacaoElement GradeHorarioOfertaFormacao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params47 Params { get; set; }
    }

    public partial class Params47
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params48 Params { get; set; }
    }

    public partial class Params48
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma oferta de formação por ID.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public GradeHorarioOfertaFormacaoElement GradeHorarioOfertaFormacao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView
    {
        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public BodyGradeHorarioOfertaFormacao GradeHorarioOfertaFormacao { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public BodyGradeHorarioOfertaFormacao GradeHorarioOfertaFormacao { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries6 Queries { get; set; }
    }

    public partial class Queries6
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success7 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a GradeHorarioOfertaFormacaoIntervaloDeTempos.
    /// </summary>
    public partial class Success7
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a GradeHorarioOfertaFormacaoIntervaloDeTempos.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body23 Body { get; set; }

        [JsonPropertyName("params")]
        public Params49 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class Body23
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public BodyGradeHorarioOfertaFormacao GradeHorarioOfertaFormacao { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class Params49
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public GradeHorarioOfertaFormacaoIntervaloDeTempoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("gradeHorarioOfertaFormacao")]
        public GradeHorarioOfertaFormacaoElement GradeHorarioOfertaFormacao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoListOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoListOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries7 Queries { get; set; }
    }

    public partial class Queries7
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success8 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a GradeHorarioOfertaFormacaos.
    /// </summary>
    public partial class Success8
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public GradeHorarioOfertaFormacaoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a GradeHorarioOfertaFormacaos.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public GradeHorarioOfertaFormacaoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public GradeHorarioOfertaFormacaoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public GradeHorarioOfertaFormacaoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body24 Body { get; set; }

        [JsonPropertyName("params")]
        public Params50 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class Body24
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class Params50
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class GradeHorarioOfertaFormacaoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public GradeHorarioOfertaFormacaoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma oferta de formação.
    /// </summary>
    public partial class GradeHorarioOfertaFormacaoView
    {
        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// HorarioGerado.
    /// </summary>
    public partial class HorarioGerado
    {
        /// <summary>
        /// calendário.
        /// </summary>
        [JsonPropertyName("calendario")]
        public DiarioCalendario Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    /// <summary>
    /// HorarioGeradoAula.
    /// </summary>
    public partial class HorarioGeradoAula
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Vínculo de diário e professor.
        /// </summary>
        [JsonPropertyName("diarioProfessor")]
        public HorarioGeradoAulaDiarioProfessor DiarioProfessor { get; set; }

        /// <summary>
        /// Horário ao qual a aula pertence.
        /// </summary>
        [JsonPropertyName("horarioGerado")]
        public HorarioGeradoAulaHorarioGerado HorarioGerado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de tempo.
        /// </summary>
        [JsonPropertyName("intervaloDeTempo")]
        public AulaIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Vínculo de diário e professor.
    ///
    /// DiarioProfessor.
    /// </summary>
    public partial class HorarioGeradoAulaDiarioProfessor
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonPropertyName("diario")]
        public AulaDiario Diario { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Perfil do usuário ao campus.
        /// </summary>
        [JsonPropertyName("perfil")]
        public DiarioProfessorPerfil Perfil { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonPropertyName("situacao")]
        public bool Situacao { get; set; }
    }

    /// <summary>
    /// Horário ao qual a aula pertence.
    ///
    /// HorarioGerado.
    /// </summary>
    public partial class HorarioGeradoAulaHorarioGerado
    {
        /// <summary>
        /// calendário.
        /// </summary>
        [JsonPropertyName("calendario")]
        public DiarioCalendario Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    public partial class HorarioGeradoAulaCreateOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoAulaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoAulaCreateOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoAulaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body25 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um HorarioGeradoAula.
    /// </summary>
    public partial class Body25
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diarioProfessor")]
        public BodyDiarioProfessor DiarioProfessor { get; set; }

        [JsonPropertyName("horarioGerado")]
        public BodyHorarioGerado HorarioGerado { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiarioProfessor por ID.
    /// </summary>
    public partial class BodyDiarioProfessor
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um HorarioGerado por ID.
    /// </summary>
    public partial class BodyHorarioGerado
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoAulaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public HorarioGeradoAulaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um HorarioGeradoAula.
    /// </summary>
    public partial class HorarioGeradoAulaListResultViewSuccess
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diarioProfessor")]
        public DiarioProfessorElement DiarioProfessor { get; set; }

        [JsonPropertyName("horarioGerado")]
        public HorarioGeradoElement HorarioGerado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um HorarioGerado.
    /// </summary>
    public partial class HorarioGeradoElement
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    public partial class HorarioGeradoAulaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoAulaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoAulaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoAulaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params51 Params { get; set; }
    }

    public partial class Params51
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoAulaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class HorarioGeradoAulaFindByIdOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoAulaFindByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoAulaFindByIdOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoAulaFindByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params52 Params { get; set; }
    }

    public partial class Params52
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoAulaFindByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public HorarioGeradoAulaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um HorarioGeradoAula por ID.
    /// </summary>
    public partial class HorarioGeradoAulaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um HorarioGeradoAula.
    /// </summary>
    public partial class HorarioGeradoAulaFindOneResultView
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diarioProfessor")]
        public DiarioProfessorElement DiarioProfessor { get; set; }

        [JsonPropertyName("horarioGerado")]
        public HorarioGeradoElement HorarioGerado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um HorarioGeradoAula.
    /// </summary>
    public partial class HorarioGeradoAulaInputCreateView
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diarioProfessor")]
        public BodyDiarioProfessor DiarioProfessor { get; set; }

        [JsonPropertyName("horarioGerado")]
        public BodyHorarioGerado HorarioGerado { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um HorarioGeradoAula.
    /// </summary>
    public partial class HorarioGeradoAulaInputUpdateView
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diarioProfessor")]
        public BodyDiarioProfessor DiarioProfessor { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("horarioGerado")]
        public BodyHorarioGerado HorarioGerado { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class HorarioGeradoAulaListOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoAulaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoAulaListOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoAulaListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries8 Queries { get; set; }
    }

    public partial class Queries8
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class HorarioGeradoAulaListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success9 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca de HorarioGeradoAulas.
    /// </summary>
    public partial class Success9
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public HorarioGeradoAulaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca de HorarioGeradoAulas.
    /// </summary>
    public partial class HorarioGeradoAulaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public HorarioGeradoAulaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class HorarioGeradoAulaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoAulaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoAulaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoAulaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body26 Body { get; set; }

        [JsonPropertyName("params")]
        public Params53 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um HorarioGeradoAula.
    /// </summary>
    public partial class Body26
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("data")]
        public DateTimeOffset? Data { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("diarioProfessor")]
        public BodyDiarioProfessor DiarioProfessor { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("horarioGerado")]
        public BodyHorarioGerado HorarioGerado { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo")]
        public BodyIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class Params53
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoAulaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public HorarioGeradoAulaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um HorarioGeradoAula.
    /// </summary>
    public partial class HorarioGeradoAulaView
    {
        /// <summary>
        /// Data da aula gerada.
        /// </summary>
        [JsonPropertyName("data")]
        public DateTimeOffset Data { get; set; }

        [JsonPropertyName("diarioProfessor")]
        public DiarioProfessorElement DiarioProfessor { get; set; }

        [JsonPropertyName("horarioGerado")]
        public HorarioGeradoElement HorarioGerado { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("intervaloDeTempo")]
        public SuccessIntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    public partial class HorarioGeradoCreateOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoCreateOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body27 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um HorarioGerado.
    /// </summary>
    public partial class Body27
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    public partial class HorarioGeradoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public HorarioGeradoElement Success { get; set; }
    }

    public partial class HorarioGeradoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params54 Params { get; set; }
    }

    public partial class Params54
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class HorarioGeradoFindByIdOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoFindByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoFindByIdOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoFindByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params55 Params { get; set; }
    }

    public partial class Params55
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoFindByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public HorarioGeradoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um HorarioGerado por ID.
    /// </summary>
    public partial class HorarioGeradoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um HorarioGerado.
    /// </summary>
    public partial class HorarioGeradoFindOneResultView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um HorarioGerado.
    /// </summary>
    public partial class HorarioGeradoInputCreateView
    {
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um HorarioGerado.
    /// </summary>
    public partial class HorarioGeradoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    public partial class HorarioGeradoListOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoListOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries9 Queries { get; set; }
    }

    public partial class Queries9
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class HorarioGeradoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success10 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca de HorariosGerados.
    /// </summary>
    public partial class Success10
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public HorarioGeradoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca de HorariosGerados.
    /// </summary>
    public partial class HorarioGeradoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public HorarioGeradoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class HorarioGeradoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public HorarioGeradoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public HorarioGeradoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class HorarioGeradoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body28 Body { get; set; }

        [JsonPropertyName("params")]
        public Params56 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um HorarioGerado.
    /// </summary>
    public partial class Body28
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("calendario")]
        public BodyCalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    public partial class Params56
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class HorarioGeradoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public HorarioGeradoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um HorarioGerado.
    /// </summary>
    public partial class HorarioGeradoView
    {
        [JsonPropertyName("calendario")]
        public CalendarioElement Calendario { get; set; }

        /// <summary>
        /// Data em que o horário foi gerado.
        /// </summary>
        [JsonPropertyName("dataGeracao")]
        public DateTimeOffset? DataGeracao { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Status do horário gerado.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Tipo do horário gerado.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Fim da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaFim")]
        public DateTimeOffset? VigenciaFim { get; set; }

        /// <summary>
        /// Início da vigência do horário gerado.
        /// </summary>
        [JsonPropertyName("vigenciaInicio")]
        public DateTimeOffset? VigenciaInicio { get; set; }
    }

    /// <summary>
    /// Imagem.
    /// </summary>
    public partial class Imagem
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição da imagem.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Versões da imagem.
        /// </summary>
        [JsonPropertyName("versoes")]
        public VersoeElement[] Versoes { get; set; }
    }

    /// <summary>
    /// ImagemArquivo.
    /// </summary>
    public partial class ImagemArquivo
    {
        /// <summary>
        /// Altura da imagem.
        /// </summary>
        [JsonPropertyName("altura")]
        public long Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonPropertyName("arquivo")]
        public ImagemArquivoArquivo Arquivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem.
        /// </summary>
        [JsonPropertyName("imagem")]
        public ImagemCapaClass Imagem { get; set; }

        /// <summary>
        /// Largura da imagem.
        /// </summary>
        [JsonPropertyName("largura")]
        public long Largura { get; set; }

        /// <summary>
        /// Mime-type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagem de uma versão de imagem.
    /// </summary>
    public partial class ImagemArquivoFindOneFromImagemResultView
    {
        /// <summary>
        /// Altura da imagem.
        /// </summary>
        [JsonPropertyName("altura")]
        public long Altura { get; set; }

        [JsonPropertyName("arquivo")]
        public ImagemArquivoFindOneFromImagemResultViewArquivo Arquivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Largura da imagem.
        /// </summary>
        [JsonPropertyName("largura")]
        public long Largura { get; set; }

        /// <summary>
        /// Mime-type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma versão de uma imagem por ID.
    /// </summary>
    public partial class ImagemArquivoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma versão de uma versão de imagem.
    /// </summary>
    public partial class ImagemArquivoFindOneResultView
    {
        /// <summary>
        /// Altura da imagem.
        /// </summary>
        [JsonPropertyName("altura")]
        public long Altura { get; set; }

        [JsonPropertyName("arquivo")]
        public ImagemArquivoFindOneFromImagemResultViewArquivo Arquivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagem")]
        public ImagemArquivoFindOneResultViewImagem Imagem { get; set; }

        /// <summary>
        /// Largura da imagem.
        /// </summary>
        [JsonPropertyName("largura")]
        public long Largura { get; set; }

        /// <summary>
        /// Mime-type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagemArquivo de uma imagem.
    /// </summary>
    public partial class ImagemArquivoFindOneResultViewImagem
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de uma versão de uma imagem.
    /// </summary>
    public partial class ImagemArquivoView
    {
        /// <summary>
        /// Altura da imagem.
        /// </summary>
        [JsonPropertyName("altura")]
        public long Altura { get; set; }

        [JsonPropertyName("arquivo")]
        public ImagemArquivoFindOneFromImagemResultViewArquivo Arquivo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonPropertyName("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagem")]
        public ImagemArquivoFindOneResultViewImagem Imagem { get; set; }

        /// <summary>
        /// Largura da imagem.
        /// </summary>
        [JsonPropertyName("largura")]
        public long Largura { get; set; }

        /// <summary>
        /// Mime-type da imagem.
        /// </summary>
        [JsonPropertyName("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagemArquivo de uma imagem.
    /// </summary>
    public partial class ImagemFindOneFromImagemArquivoResultView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma imagem por ID.
    /// </summary>
    public partial class ImagemFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma imagem.
    /// </summary>
    public partial class ImagemFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição da imagem.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("versoes")]
        public VersoeClass[] Versoes { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Imagem.
    /// </summary>
    public partial class ImagemView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição da imagem.
        /// </summary>
        [JsonPropertyName("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("versoes")]
        public VersoeClass[] Versoes { get; set; }
    }

    /// <summary>
    /// Intervalo de Tempo.
    /// </summary>
    public partial class IntervaloDeTempo
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Intervalo de Tempo.
    /// </summary>
    public partial class IntervaloDeTempoFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um Intervalo de Tempo.
    /// </summary>
    public partial class IntervaloDeTempoInputView
    {
        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Visão completa de um Intervalo de Tempo.
    /// </summary>
    public partial class IntervaloDeTempoView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonPropertyName("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonPropertyName("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Modalidade.
    /// </summary>
    public partial class Modalidade
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class ModalidadeCreateOperation
    {
        [JsonPropertyName("input")]
        public ModalidadeCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ModalidadeCreateOperationOutput Output { get; set; }
    }

    public partial class ModalidadeCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body29 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma modalidade.
    /// </summary>
    public partial class Body29
    {
        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class ModalidadeCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public ModalidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma modalidade.
    /// </summary>
    public partial class ModalidadeListResultViewSuccess
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class ModalidadeDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public ModalidadeDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ModalidadeDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class ModalidadeDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params57 Params { get; set; }
    }

    public partial class Params57
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ModalidadeDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class ModalidadeFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public ModalidadeFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ModalidadeFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class ModalidadeFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params58 Params { get; set; }
    }

    public partial class Params58
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ModalidadeFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public ModalidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma modalidade por ID.
    /// </summary>
    public partial class ModalidadeFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma modalidade.
    /// </summary>
    public partial class ModalidadeFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma modalidade.
    /// </summary>
    public partial class ModalidadeInputCreateView
    {
        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma modalidade.
    /// </summary>
    public partial class ModalidadeInputUpdateView
    {
        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class ModalidadeListOperation
    {
        [JsonPropertyName("input")]
        public ModalidadeListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ModalidadeListOperationOutput Output { get; set; }
    }

    public partial class ModalidadeListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries10 Queries { get; set; }
    }

    public partial class Queries10
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class ModalidadeListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success11 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Modalidades.
    /// </summary>
    public partial class Success11
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ModalidadeListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Modalidades.
    /// </summary>
    public partial class ModalidadeListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ModalidadeListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class ModalidadeUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public ModalidadeUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ModalidadeUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class ModalidadeUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body30 Body { get; set; }

        [JsonPropertyName("params")]
        public Params59 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma modalidade.
    /// </summary>
    public partial class Body30
    {
        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class Params59
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ModalidadeUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public ModalidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma modalidade.
    /// </summary>
    public partial class ModalidadeView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da modalidade.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// NivelDeFormacao.
    /// </summary>
    public partial class NivelDeFormacao
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class NivelDeFormacaoCreateOperation
    {
        [JsonPropertyName("input")]
        public NivelDeFormacaoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public NivelDeFormacaoCreateOperationOutput Output { get; set; }
    }

    public partial class NivelDeFormacaoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body31 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um nível de formação.
    /// </summary>
    public partial class Body31
    {
        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class NivelDeFormacaoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public NivelFormcaoElement Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um nível de formação.
    /// </summary>
    public partial class NivelFormcaoElement
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class NivelDeFormacaoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public NivelDeFormacaoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public NivelDeFormacaoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class NivelDeFormacaoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params60 Params { get; set; }
    }

    public partial class Params60
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class NivelDeFormacaoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class NivelDeFormacaoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public NivelDeFormacaoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public NivelDeFormacaoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class NivelDeFormacaoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params61 Params { get; set; }
    }

    public partial class Params61
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class NivelDeFormacaoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public NivelFormcaoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um nível de formação por ID.
    /// </summary>
    public partial class NivelDeFormacaoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um nível de formação.
    /// </summary>
    public partial class NivelDeFormacaoFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um nível de formação.
    /// </summary>
    public partial class NivelDeFormacaoInputCreateView
    {
        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um nível de formação.
    /// </summary>
    public partial class NivelDeFormacaoInputUpdateView
    {
        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class NivelDeFormacaoListOperation
    {
        [JsonPropertyName("input")]
        public NivelDeFormacaoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public NivelDeFormacaoListOperationOutput Output { get; set; }
    }

    public partial class NivelDeFormacaoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries11 Queries { get; set; }
    }

    public partial class Queries11
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class NivelDeFormacaoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success12 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca aos níveis de formações.
    /// </summary>
    public partial class Success12
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public NivelFormcaoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca aos níveis de formações.
    /// </summary>
    public partial class NivelDeFormacaoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public NivelFormcaoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class NivelDeFormacaoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public NivelDeFormacaoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public NivelDeFormacaoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class NivelDeFormacaoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body32 Body { get; set; }

        [JsonPropertyName("params")]
        public Params62 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um nível de formação.
    /// </summary>
    public partial class Body32
    {
        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class Params62
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class NivelDeFormacaoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public NivelFormcaoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um nível de formação.
    /// </summary>
    public partial class NivelDeFormacaoView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Estrutura identificada por id no formato numérico.
    /// </summary>
    public partial class ObjectIntegerId
    {
        /// <summary>
        /// Identificador do registro (numérico).
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Estrutura identificada por id no formato uuid.
    /// </summary>
    public partial class ObjectUuid
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// OfertaFormacao.
    /// </summary>
    public partial class OfertaFormacao
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class OfertaFormacaoCreateOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoCreateOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body33 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class Body33
    {
        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class OfertaFormacaoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public OfertaFormacaoElement Success { get; set; }
    }

    public partial class OfertaFormacaoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params63 Params { get; set; }
    }

    public partial class Params63
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class OfertaFormacaoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params64 Params { get; set; }
    }

    public partial class Params64
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public OfertaFormacaoElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma oferta de formação por ID.
    /// </summary>
    public partial class OfertaFormacaoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoInputCreateView
    {
        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoInputUpdateView
    {
        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class OfertaFormacaoListOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoListOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries12 Queries { get; set; }
    }

    public partial class Queries12
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class OfertaFormacaoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success13 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a OfertaFormacaos.
    /// </summary>
    public partial class Success13
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public OfertaFormacaoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a OfertaFormacaos.
    /// </summary>
    public partial class OfertaFormacaoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public OfertaFormacaoElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// OfertaFormacaoNivelFormacao.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacao
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nível de formação.
        /// </summary>
        [JsonPropertyName("nivelFormacao")]
        public NivelFormacao NivelFormacao { get; set; }

        /// <summary>
        /// Oferta de formação.
        /// </summary>
        [JsonPropertyName("ofertaFormacao")]
        public CalendarioLetivoOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Nível de formação.
    ///
    /// NivelDeFormacao.
    /// </summary>
    public partial class NivelFormacao
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Apelido do nível de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoCreateOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoNivelFormacaoCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoNivelFormacaoCreateOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body34 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class Body34
    {
        [JsonPropertyName("nivelFormcao")]
        public Nivel NivelFormcao { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um nível de formação por ID.
    /// </summary>
    public partial class Nivel
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public OfertaFormacaoNivelFormacaoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoListResultViewSuccess
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoNivelFormacaoDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoNivelFormacaoDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params65 Params { get; set; }
    }

    public partial class Params65
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoNivelFormacaoFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoNivelFormacaoFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params66 Params { get; set; }
    }

    public partial class Params66
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public OfertaFormacaoNivelFormacaoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma oferta de formação por ID.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoInputCreateView
    {
        [JsonPropertyName("nivelFormcao")]
        public Nivel NivelFormcao { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nivelFormcao")]
        public Nivel NivelFormcao { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoListOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoNivelFormacaoListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoNivelFormacaoListOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries13 Queries { get; set; }
    }

    public partial class Queries13
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success14 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a OfertaFormacaoNivelFormacaos.
    /// </summary>
    public partial class Success14
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public OfertaFormacaoNivelFormacaoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a OfertaFormacaoNivelFormacaos.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public OfertaFormacaoNivelFormacaoListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoNivelFormacaoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoNivelFormacaoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body35 Body { get; set; }

        [JsonPropertyName("params")]
        public Params67 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class Body35
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nivelFormcao")]
        public Nivel NivelFormcao { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ofertaFormacao")]
        public BodyOfertaFormacao OfertaFormacao { get; set; }
    }

    public partial class Params67
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoNivelFormacaoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public OfertaFormacaoNivelFormacaoListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoNivelFormacaoView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("nivelFormcao")]
        public NivelFormcaoElement NivelFormcao { get; set; }

        [JsonPropertyName("ofertaFormacao")]
        public OfertaFormacaoElement OfertaFormacao { get; set; }
    }

    public partial class OfertaFormacaoUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public OfertaFormacaoUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public OfertaFormacaoUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class OfertaFormacaoUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body36 Body { get; set; }

        [JsonPropertyName("params")]
        public Params68 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma oferta de formação.
    /// </summary>
    public partial class Body36
    {
        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    public partial class Params68
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class OfertaFormacaoUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public OfertaFormacaoElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma oferta de formação.
    /// </summary>
    public partial class OfertaFormacaoView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da oferta de formação.
        /// </summary>
        [JsonPropertyName("nome")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Nome { get; set; }

        /// <summary>
        /// Apelido da oferta de formação.
        /// </summary>
        [JsonPropertyName("slug")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Configuração de filtro por restrições de uma propriedade.
    /// </summary>
    public partial class PaginationFilterView
    {
        /// <summary>
        /// Propriedade filtrada.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }

        /// <summary>
        /// Restrições de filtragem.
        /// </summary>
        [JsonPropertyName("restrictions")]
        public string[] Restrictions { get; set; }
    }

    public partial class PaginationInputBaseView
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }
    }

    public partial class PaginationInputView
    {
        /// <summary>
        /// Filtros.
        /// </summary>
        [JsonPropertyName("filter")]
        public FilterElement[] Filter { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public SortByElement[] SortBy { get; set; }
    }

    public partial class PaginationResultLinks
    {
        [JsonPropertyName("current")]
        public string Current { get; set; }

        [JsonPropertyName("first")]
        public string First { get; set; }

        [JsonPropertyName("last")]
        public string Last { get; set; }

        [JsonPropertyName("next")]
        public string Next { get; set; }

        [JsonPropertyName("previous")]
        public string Previous { get; set; }
    }

    /// <summary>
    /// Metadados dos resultados de busca.
    /// </summary>
    public partial class PaginationResultMeta
    {
        /// <summary>
        /// Página atual.
        /// </summary>
        [JsonPropertyName("currentPage")]
        public long CurrentPage { get; set; }

        /// <summary>
        /// Filtros.
        /// </summary>
        [JsonPropertyName("filter")]
        public FilterElement[] Filter { get; set; }

        /// <summary>
        /// Quantidade de itens por página.
        /// </summary>
        [JsonPropertyName("itemsPerPage")]
        public long ItemsPerPage { get; set; }

        /// <summary>
        /// Termo textual da busca.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonPropertyName("sortBy")]
        public SortByElement[] SortBy { get; set; }

        /// <summary>
        /// Total de itens.
        /// </summary>
        [JsonPropertyName("totalItems")]
        public long TotalItems { get; set; }

        /// <summary>
        /// Quantidade total de páginas.
        /// </summary>
        [JsonPropertyName("totalPages")]
        public long TotalPages { get; set; }
    }

    /// <summary>
    /// Configuração de ordenação de uma propriedade.
    /// </summary>
    public partial class PaginationSortByView
    {
        /// <summary>
        /// Modo de ordenação.
        /// </summary>
        [JsonPropertyName("mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Propriedade ordenada.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }
    }

    /// <summary>
    /// Vínculo.
    /// </summary>
    public partial class Perfil
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonPropertyName("campus")]
        public BlocoCampus Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonPropertyName("usuario")]
        public PerfilUsuario Usuario { get; set; }
    }

    public partial class PerfilFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public PerfilFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public PerfilFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class PerfilFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params69 Params { get; set; }
    }

    public partial class Params69
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class PerfilFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public PerfilElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Vínculo por ID.
    /// </summary>
    public partial class PerfilFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Vínculo.
    /// </summary>
    public partial class PerfilFindOneResultView
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    public partial class PerfilListOperation
    {
        [JsonPropertyName("input")]
        public PerfilListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public PerfilListOperationOutput Output { get; set; }
    }

    public partial class PerfilListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries14 Queries { get; set; }
    }

    public partial class Queries14
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.campus.id")]
        public string[] FilterCampusId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.usuario.id")]
        public string[] FilterUsuarioId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filterAtivo")]
        public string[] FilterAtivo { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class PerfilListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success15 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Vínculos.
    /// </summary>
    public partial class Success15
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public PerfilElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Vínculos.
    /// </summary>
    public partial class PerfilListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public PerfilElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class PerfilUpdateOperation
    {
        [JsonPropertyName("input")]
        public PerfilUpdateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public PerfilUpdateOperationOutput Output { get; set; }
    }

    public partial class PerfilUpdateOperationInput
    {
        [JsonPropertyName("body")]
        public Body37 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a alteração de vínculo de um Usuário a um Campus.
    /// </summary>
    public partial class Body37
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Cargos do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargos")]
        public string[] Cargos { get; set; }

        [JsonPropertyName("usuario")]
        public BodyUsuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Usuário por ID.
    /// </summary>
    public partial class BodyUsuario
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class PerfilUpdateOperationOutput
    {
        [JsonPropertyName("success")]
        public Success15 Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a alteração de vínculo de um Usuário a um Campus.
    /// </summary>
    public partial class PerfilUpdateView
    {
        [JsonPropertyName("campus")]
        public BodyCampus Campus { get; set; }

        /// <summary>
        /// Cargos do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargos")]
        public string[] Cargos { get; set; }

        [JsonPropertyName("usuario")]
        public BodyUsuario Usuario { get; set; }
    }

    /// <summary>
    /// Visão completa de um Vínculo.
    /// </summary>
    public partial class PerfilView
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonPropertyName("ativo")]
        public bool Ativo { get; set; }

        [JsonPropertyName("campus")]
        public CampusElement Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonPropertyName("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    /// <summary>
    /// ProfessorDisponibilidade.
    /// </summary>
    public partial class ProfessorDisponibilidade
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disponibilidade.
        /// </summary>
        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeDiaDisponibilidade Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Professor.
        /// </summary>
        [JsonPropertyName("perfil")]
        public DiarioProfessorPerfil Perfil { get; set; }
    }

    public partial class ProfessorDisponibilidadeCreateOperation
    {
        [JsonPropertyName("input")]
        public ProfessorDisponibilidadeCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ProfessorDisponibilidadeCreateOperationOutput Output { get; set; }
    }

    public partial class ProfessorDisponibilidadeCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body38 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class Body38
    {
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }
    }

    public partial class ProfessorDisponibilidadeCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public ProfessorDisponibilidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class ProfessorDisponibilidadeListResultViewSuccess
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("perfil")]
        public PerfilElement Perfil { get; set; }
    }

    public partial class ProfessorDisponibilidadeDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public ProfessorDisponibilidadeDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ProfessorDisponibilidadeDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class ProfessorDisponibilidadeDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params70 Params { get; set; }
    }

    public partial class Params70
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ProfessorDisponibilidadeDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class ProfessorDisponibilidadeFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public ProfessorDisponibilidadeFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ProfessorDisponibilidadeFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class ProfessorDisponibilidadeFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params71 Params { get; set; }
    }

    public partial class Params71
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ProfessorDisponibilidadeFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public ProfessorDisponibilidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma ProfessorDisponibilidade por ID.
    /// </summary>
    public partial class ProfessorDisponibilidadeFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class ProfessorDisponibilidadeFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("perfil")]
        public PerfilElement Perfil { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class ProfessorDisponibilidadeInputCreateView
    {
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class ProfessorDisponibilidadeInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }
    }

    public partial class ProfessorDisponibilidadeListOperation
    {
        [JsonPropertyName("input")]
        public ProfessorDisponibilidadeListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ProfessorDisponibilidadeListOperationOutput Output { get; set; }
    }

    public partial class ProfessorDisponibilidadeListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries15 Queries { get; set; }
    }

    public partial class Queries15
    {
        [JsonPropertyName("filter_professor_id")]
        public string[] FilterProfessorId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class ProfessorDisponibilidadeListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success16 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a ProfessorDisponibilidades.
    /// </summary>
    public partial class Success16
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ProfessorDisponibilidadeListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a ProfessorDisponibilidades.
    /// </summary>
    public partial class ProfessorDisponibilidadeListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ProfessorDisponibilidadeListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class ProfessorDisponibilidadeUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public ProfessorDisponibilidadeUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ProfessorDisponibilidadeUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class ProfessorDisponibilidadeUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body39 Body { get; set; }

        [JsonPropertyName("params")]
        public Params72 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class Body39
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("perfil")]
        public BodyPerfil Perfil { get; set; }
    }

    public partial class Params72
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ProfessorDisponibilidadeUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public ProfessorDisponibilidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma ProfessorDisponibilidade.
    /// </summary>
    public partial class ProfessorDisponibilidadeView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("perfil")]
        public PerfilElement Perfil { get; set; }
    }

    /// <summary>
    /// Reserva.
    /// </summary>
    public partial class Reserva
    {
        /// <summary>
        /// Ambiente reservado.
        /// </summary>
        [JsonPropertyName("ambiente")]
        public AmbienteElement Ambiente { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonPropertyName("usuario")]
        public PerfilUsuario Usuario { get; set; }
    }

    public partial class ReservaCreateOperation
    {
        [JsonPropertyName("input")]
        public ReservaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ReservaCreateOperationOutput Output { get; set; }
    }

    public partial class ReservaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body40 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Reserva.
    /// </summary>
    public partial class Body40
    {
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonPropertyName("usuario")]
        public BodyUsuario Usuario { get; set; }
    }

    public partial class ReservaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public ReservaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Reserva.
    /// </summary>
    public partial class ReservaListResultViewSuccess
    {
        [JsonPropertyName("ambiente")]
        public AmbientePadraoElement Ambiente { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    public partial class ReservaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public ReservaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ReservaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class ReservaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params73 Params { get; set; }
    }

    public partial class Params73
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ReservaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class ReservaFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public ReservaFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ReservaFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class ReservaFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params74 Params { get; set; }
    }

    public partial class Params74
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ReservaFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public ReservaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Reserva por ID.
    /// </summary>
    public partial class ReservaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Reserva.
    /// </summary>
    public partial class ReservaFindOneResultView
    {
        [JsonPropertyName("ambiente")]
        public AmbientePadraoElement Ambiente { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Reserva.
    /// </summary>
    public partial class ReservaInputCreateView
    {
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonPropertyName("usuario")]
        public BodyUsuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Reserva.
    /// </summary>
    public partial class ReservaInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("usuario")]
        public BodyUsuario Usuario { get; set; }
    }

    public partial class ReservaListOperation
    {
        [JsonPropertyName("input")]
        public ReservaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ReservaListOperationOutput Output { get; set; }
    }

    public partial class ReservaListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries16 Queries { get; set; }
    }

    public partial class Queries16
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.dataInicio")]
        public string[] FilterDataInicio { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.dataTermino")]
        public string[] FilterDataTermino { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo.periodoFim")]
        public string[] IntervaloDeTempoPeriodoFim { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("intervaloDeTempo.periodoInicio")]
        public string[] IntervaloDeTempoPeriodoInicio { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class ReservaListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success17 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Reservas.
    /// </summary>
    public partial class Success17
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ReservaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Reservas.
    /// </summary>
    public partial class ReservaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public ReservaListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class ReservaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public ReservaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public ReservaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class ReservaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body41 Body { get; set; }

        [JsonPropertyName("params")]
        public Params75 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Reserva.
    /// </summary>
    public partial class Body41
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ambiente")]
        public BodyAmbiente Ambiente { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("usuario")]
        public BodyUsuario Usuario { get; set; }
    }

    public partial class Params75
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class ReservaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public ReservaListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Reserva.
    /// </summary>
    public partial class ReservaView
    {
        [JsonPropertyName("ambiente")]
        public AmbientePadraoElement Ambiente { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Motivo da reserva.
        /// </summary>
        [JsonPropertyName("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
        /// </summary>
        [JsonPropertyName("rrule")]
        public string Rrule { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonPropertyName("situacao")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Situacao { get; set; }

        /// <summary>
        /// Tipo da reserva.
        /// </summary>
        [JsonPropertyName("tipo")]
        public string Tipo { get; set; }

        [JsonPropertyName("usuario")]
        public UsuarioElement Usuario { get; set; }
    }

    /// <summary>
    /// Turma.
    /// </summary>
    public partial class Turma
    {
        /// <summary>
        /// Ambiente padrão da sala de aula.
        /// </summary>
        [JsonPropertyName("ambientePadraoAula")]
        public AmbienteElement AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonPropertyName("curso")]
        public TurmaCurso Curso { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa da Turma.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    public partial class TurmaCreateOperation
    {
        [JsonPropertyName("input")]
        public TurmaCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaCreateOperationOutput Output { get; set; }
    }

    public partial class TurmaCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body42 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Turma.
    /// </summary>
    public partial class Body42
    {
        [JsonPropertyName("ambientePadraoAula")]
        public BodyAmbiente AmbientePadraoAula { get; set; }

        [JsonPropertyName("curso")]
        public BodyCurso Curso { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Curso por ID.
    /// </summary>
    public partial class BodyCurso
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public TurmaElement Success { get; set; }
    }

    public partial class TurmaDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public TurmaDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class TurmaDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params76 Params { get; set; }
    }

    public partial class Params76
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidade
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disponibilidade.
        /// </summary>
        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeDiaDisponibilidade Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Turma.
        /// </summary>
        [JsonPropertyName("turma")]
        public DiarioTurma Turma { get; set; }
    }

    public partial class TurmaDisponibilidadeCreateOperation
    {
        [JsonPropertyName("input")]
        public TurmaDisponibilidadeCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaDisponibilidadeCreateOperationOutput Output { get; set; }
    }

    public partial class TurmaDisponibilidadeCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body43 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma TurmaDisponibilidade.
    /// </summary>
    public partial class Body43
    {
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    public partial class TurmaDisponibilidadeCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public TurmaDisponibilidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeListResultViewSuccess
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("turma")]
        public TurmaElement Turma { get; set; }
    }

    public partial class TurmaDisponibilidadeDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public TurmaDisponibilidadeDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaDisponibilidadeDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class TurmaDisponibilidadeDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params77 Params { get; set; }
    }

    public partial class Params77
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaDisponibilidadeDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class TurmaDisponibilidadeFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public TurmaDisponibilidadeFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaDisponibilidadeFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class TurmaDisponibilidadeFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params78 Params { get; set; }
    }

    public partial class Params78
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaDisponibilidadeFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public TurmaDisponibilidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma TurmaDisponibilidade por ID.
    /// </summary>
    public partial class TurmaDisponibilidadeFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("turma")]
        public TurmaElement Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeInputCreateView
    {
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    public partial class TurmaDisponibilidadeListOperation
    {
        [JsonPropertyName("input")]
        public TurmaDisponibilidadeListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaDisponibilidadeListOperationOutput Output { get; set; }
    }

    public partial class TurmaDisponibilidadeListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries17 Queries { get; set; }
    }

    public partial class Queries17
    {
        [JsonPropertyName("filter_turma_id")]
        public string[] FilterTurmaId { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class TurmaDisponibilidadeListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success18 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a TurmaDisponibilidades.
    /// </summary>
    public partial class Success18
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaDisponibilidadeListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a TurmaDisponibilidades.
    /// </summary>
    public partial class TurmaDisponibilidadeListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaDisponibilidadeListResultViewSuccess[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class TurmaDisponibilidadeUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public TurmaDisponibilidadeUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaDisponibilidadeUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class TurmaDisponibilidadeUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body44 Body { get; set; }

        [JsonPropertyName("params")]
        public Params79 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma TurmaDisponibilidade.
    /// </summary>
    public partial class Body44
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("disponibilidade")]
        public BodyDisponibilidade Disponibilidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("turma")]
        public BodyTurma Turma { get; set; }
    }

    public partial class Params79
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaDisponibilidadeUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public TurmaDisponibilidadeListResultViewSuccess Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        [JsonPropertyName("disponibilidade")]
        public DisponibilidadeElement Disponibilidade { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("turma")]
        public TurmaElement Turma { get; set; }
    }

    public partial class TurmaFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public TurmaFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class TurmaFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params80 Params { get; set; }
    }

    public partial class Params80
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public TurmaElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Turma por ID.
    /// </summary>
    public partial class TurmaFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Turma.
    /// </summary>
    public partial class TurmaFindOneResultView
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbientePadraoElement AmbientePadraoAula { get; set; }

        [JsonPropertyName("curso")]
        public CursoElement Curso { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    public partial class TurmaGetImagemCapa
    {
        [JsonPropertyName("input")]
        public TurmaGetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaGetImagemCapaOutput Output { get; set; }
    }

    public partial class TurmaGetImagemCapaInput
    {
        [JsonPropertyName("params")]
        public Params81 Params { get; set; }
    }

    public partial class Params81
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaGetImagemCapaOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Turma.
    /// </summary>
    public partial class TurmaInputCreateView
    {
        [JsonPropertyName("ambientePadraoAula")]
        public BodyAmbiente AmbientePadraoAula { get; set; }

        [JsonPropertyName("curso")]
        public BodyCurso Curso { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Turma.
    /// </summary>
    public partial class TurmaInputUpdateView
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ambientePadraoAula")]
        public BodyAmbiente AmbientePadraoAula { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("curso")]
        public BodyCurso Curso { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    public partial class TurmaListOperation
    {
        [JsonPropertyName("input")]
        public TurmaListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaListOperationOutput Output { get; set; }
    }

    public partial class TurmaListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries18 Queries { get; set; }
    }

    public partial class Queries18
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.capacidade")]
        public string[] FilterAmbientePadraoAulaCapacidade { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.codigo")]
        public string[] FilterAmbientePadraoAulaCodigo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.nome")]
        public string[] FilterAmbientePadraoAulaNome { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.ambientePadraoAula.tipo")]
        public string[] FilterAmbientePadraoAulaTipo { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.campus.id")]
        public string[] FilterCursoCampusId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.modalidade.id")]
        public string[] FilterCursoModalidadeId { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.nome")]
        public string[] FilterCursoNome { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("filter.curso.nomeAbreviado")]
        public string[] FilterCursoNomeAbreviado { get; set; }

        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class TurmaListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success19 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Turmas.
    /// </summary>
    public partial class Success19
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Turmas.
    /// </summary>
    public partial class TurmaListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public TurmaElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class TurmaSetImagemCapa
    {
        [JsonPropertyName("input")]
        public TurmaSetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaSetImagemCapaOutput Output { get; set; }
    }

    public partial class TurmaSetImagemCapaInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public Params82 Params { get; set; }
    }

    public partial class Params82
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaSetImagemCapaOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class TurmaUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public TurmaUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public TurmaUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class TurmaUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body45 Body { get; set; }

        [JsonPropertyName("params")]
        public Params83 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Turma.
    /// </summary>
    public partial class Body45
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("ambientePadraoAula")]
        public BodyAmbiente AmbientePadraoAula { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("curso")]
        public BodyCurso Curso { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    public partial class Params83
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class TurmaUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public TurmaElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Turma.
    /// </summary>
    public partial class TurmaView
    {
        [JsonPropertyName("ambientePadraoAula")]
        public AmbientePadraoElement AmbientePadraoAula { get; set; }

        [JsonPropertyName("curso")]
        public CursoElement Curso { get; set; }

        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        /// <summary>
        /// Período da Turma.
        /// </summary>
        [JsonPropertyName("periodo")]
        [JsonConverter(typeof(MinMaxLengthCheckConverter))]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Usuário.
    /// </summary>
    public partial class Usuario
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem de capa do usuário.
        /// </summary>
        [JsonPropertyName("imagemCapa")]
        public ImagemCapaClass ImagemCapa { get; set; }

        /// <summary>
        /// Imagem de perfil do usuário.
        /// </summary>
        [JsonPropertyName("imagemPerfil")]
        public ImagemCapaClass ImagemPerfil { get; set; }

        /// <summary>
        /// Diz que o usuário tem poderes de administrador.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class UsuarioCreateOperation
    {
        [JsonPropertyName("input")]
        public UsuarioCreateOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioCreateOperationOutput Output { get; set; }
    }

    public partial class UsuarioCreateOperationInput
    {
        [JsonPropertyName("body")]
        public Body46 Body { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um usuário.
    /// </summary>
    public partial class Body46
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class UsuarioCreateOperationOutput
    {
        [JsonPropertyName("success")]
        public UsuarioElement Success { get; set; }
    }

    public partial class UsuarioDeleteByIdOperation
    {
        [JsonPropertyName("input")]
        public UsuarioDeleteByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioDeleteByIdOperationOutput Output { get; set; }
    }

    public partial class UsuarioDeleteByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params84 Params { get; set; }
    }

    public partial class Params84
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioDeleteByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class UsuarioFindOneByIdOperation
    {
        [JsonPropertyName("input")]
        public UsuarioFindOneByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioFindOneByIdOperationOutput Output { get; set; }
    }

    public partial class UsuarioFindOneByIdOperationInput
    {
        [JsonPropertyName("params")]
        public Params85 Params { get; set; }
    }

    public partial class Params85
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioFindOneByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public UsuarioElement Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Usuário por ID.
    /// </summary>
    public partial class UsuarioFindOneInputView
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Usuário.
    /// </summary>
    public partial class UsuarioFindOneResultView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        [JsonPropertyName("imagemPerfil")]
        public ImagemPerfilClass ImagemPerfil { get; set; }

        /// <summary>
        /// Diz que o usuário tem poderes de administrador.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class UsuarioGetImagemCapa
    {
        [JsonPropertyName("input")]
        public UsuarioGetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioGetImagemCapaOutput Output { get; set; }
    }

    public partial class UsuarioGetImagemCapaInput
    {
        [JsonPropertyName("params")]
        public Params86 Params { get; set; }
    }

    public partial class Params86
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioGetImagemCapaOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Obtêm a imagem de perfil.
    /// </summary>
    public partial class UsuarioGetImagemPerfil
    {
        [JsonPropertyName("input")]
        public UsuarioGetImagemPerfilInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioGetImagemPerfilOutput Output { get; set; }
    }

    public partial class UsuarioGetImagemPerfilInput
    {
        [JsonPropertyName("params")]
        public Params87 Params { get; set; }
    }

    public partial class Params87
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioGetImagemPerfilOutput
    {
        /// <summary>
        /// Binário.
        /// </summary>
        [JsonPropertyName("success")]
        public string Success { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um usuário.
    /// </summary>
    public partial class UsuarioInputCreateView
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Usuário.
    /// </summary>
    public partial class UsuarioInputUpdateView
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class UsuarioListOperation
    {
        [JsonPropertyName("input")]
        public UsuarioListOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioListOperationOutput Output { get; set; }
    }

    public partial class UsuarioListOperationInput
    {
        [JsonPropertyName("queries")]
        public Queries19 Queries { get; set; }
    }

    public partial class Queries19
    {
        /// <summary>
        /// Limite da quantidade de resultados por página.
        /// </summary>
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Página de consulta.
        /// </summary>
        [JsonPropertyName("page")]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonPropertyName("sortBy")]
        public string[] SortBy { get; set; }
    }

    public partial class UsuarioListOperationOutput
    {
        [JsonPropertyName("success")]
        public Success20 Success { get; set; }
    }

    /// <summary>
    /// Resultados da busca a usuários.
    /// </summary>
    public partial class Success20
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public UsuarioElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    /// <summary>
    /// Resultados da busca a usuários.
    /// </summary>
    public partial class UsuarioListResultView
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonPropertyName("data")]
        public UsuarioElement[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonPropertyName("links")]
        public Links Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }
    }

    public partial class UsuarioSetImagemCapa
    {
        [JsonPropertyName("input")]
        public UsuarioSetImagemCapaInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioSetImagemCapaOutput Output { get; set; }
    }

    public partial class UsuarioSetImagemCapaInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public Params88 Params { get; set; }
    }

    public partial class Params88
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioSetImagemCapaOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    /// <summary>
    /// Define a imagem de perfil.
    /// </summary>
    public partial class UsuarioSetImagemPerfil
    {
        [JsonPropertyName("input")]
        public UsuarioSetImagemPerfilInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioSetImagemPerfilOutput Output { get; set; }
    }

    public partial class UsuarioSetImagemPerfilInput
    {
        /// <summary>
        /// Binário da imagem.
        /// </summary>
        [JsonPropertyName("body")]
        public string Body { get; set; }

        [JsonPropertyName("params")]
        public Params89 Params { get; set; }
    }

    public partial class Params89
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioSetImagemPerfilOutput
    {
        /// <summary>
        /// Resultado da operação.
        /// </summary>
        [JsonPropertyName("success")]
        public bool Success { get; set; }
    }

    public partial class UsuarioUpdateByIdOperation
    {
        [JsonPropertyName("input")]
        public UsuarioUpdateByIdOperationInput Input { get; set; }

        [JsonPropertyName("output")]
        public UsuarioUpdateByIdOperationOutput Output { get; set; }
    }

    public partial class UsuarioUpdateByIdOperationInput
    {
        [JsonPropertyName("body")]
        public Body47 Body { get; set; }

        [JsonPropertyName("params")]
        public Params90 Params { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Usuário.
    /// </summary>
    public partial class Body47
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    public partial class Params90
    {
        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }
    }

    public partial class UsuarioUpdateByIdOperationOutput
    {
        [JsonPropertyName("success")]
        public UsuarioElement Success { get; set; }
    }

    /// <summary>
    /// Visão completa de um Usuário.
    /// </summary>
    public partial class UsuarioView
    {
        /// <summary>
        /// Data e hora da criação do registro.
        /// </summary>
        [JsonPropertyName("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        /// <summary>
        /// Data e hora da exclusão do registro.
        /// </summary>
        [JsonPropertyName("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data e hora da alteração do registro.
        /// </summary>
        [JsonPropertyName("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }

        /// <summary>
        /// Identificador do registro (uuid).
        /// </summary>
        [JsonPropertyName("id")]
        public Guid Id { get; set; }

        [JsonPropertyName("imagemCapa")]
        public ImagemPerfilClass ImagemCapa { get; set; }

        [JsonPropertyName("imagemPerfil")]
        public ImagemPerfilClass ImagemPerfil { get; set; }

        /// <summary>
        /// Diz que o usuário tem poderes de administrador.
        /// </summary>
        [JsonPropertyName("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula SIAPE do usuário.
        /// </summary>
        [JsonPropertyName("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonPropertyName("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Define os nomes de indentificação das entidades.
    /// </summary>
    public enum TokensEnum { Ambiente, AmbienteCreate, AmbienteDeleteOneById, AmbienteFindOneById, AmbienteFindOneInputView, AmbienteFindOneResultView, AmbienteGetImagemCapa, AmbienteInputCreateView, AmbienteInputUpdateView, AmbienteList, AmbienteListResultView, AmbienteSetImagemCapa, AmbienteUpdateOneById, AmbienteView, Arquivo, ArquivoFindOneInputView, ArquivoFindOneResultView, ArquivoGetFile, ArquivoView, Aula, AulaCreate, AulaDeleteOneById, AulaFindOneById, AulaFindOneInputView, AulaFindOneResultView, AulaInputCreateView, AulaInputUpdateView, AulaList, AulaListResultView, AulaUpdateOneById, AulaView, AuthLogin, AuthLoginInputView, AuthRefresh, AuthRefreshInputView, AuthSessionCredentialsView, AuthSetInitialPassword, AuthSetInitialPasswordInputView, AuthWhoAmI, AuthWhoAmIInputView, Bloco, BlocoCreate, BlocoDeleteOneById, BlocoFindOneById, BlocoFindOneInputView, BlocoFindOneResultView, BlocoGetImagemCapa, BlocoInputCreateView, BlocoInputUpdateView, BlocoList, BlocoListResultView, BlocoSetImagemCapa, BlocoUpdateOneById, BlocoView, CalendarioLetivo, CalendarioLetivoCreate, CalendarioLetivoDeleteOneById, CalendarioLetivoFindOneById, CalendarioLetivoFindOneInputView, CalendarioLetivoFindOneResultView, CalendarioLetivoInputCreateView, CalendarioLetivoInputUpdateView, CalendarioLetivoList, CalendarioLetivoListResultView, CalendarioLetivoUpdateOneById, CalendarioLetivoView, Campus, CampusCreate, CampusDeleteOneById, CampusFindOneById, CampusFindOneInputView, CampusFindOneResultView, CampusInputCreateView, CampusInputUpdateView, CampusList, CampusListResultView, CampusUpdateOneById, CampusView, Cidade, CidadeFindOneById, CidadeFindOneInputView, CidadeFindOneResultView, CidadeList, CidadeListResultView, CidadeView, Curso, CursoCreate, CursoDeleteOneById, CursoFindOneById, CursoFindOneInputView, CursoFindOneResultView, CursoGetImagemCapa, CursoInputCreateView, CursoInputUpdateView, CursoList, CursoListResultView, CursoSetImagemCapa, CursoUpdateOneById, CursoView, DiaCalendario, DiaCalendarioCreate, DiaCalendarioDeleteOneById, DiaCalendarioFindOneById, DiaCalendarioFindOneInputView, DiaCalendarioFindOneResultView, DiaCalendarioInputCreateView, DiaCalendarioInputUpdateView, DiaCalendarioList, DiaCalendarioListResultView, DiaCalendarioUpdateOneById, DiaCalendarioView, Diario, DiarioCreate, DiarioDeleteOneById, DiarioFindOneById, DiarioFindOneInputView, DiarioFindOneResultView, DiarioGetImagemCapa, DiarioInputCreateView, DiarioInputUpdateView, DiarioList, DiarioListResultView, DiarioPreferenciaAgrupamento, DiarioPreferenciaAgrupamentoCreate, DiarioPreferenciaAgrupamentoDeleteOneById, DiarioPreferenciaAgrupamentoFindOneById, DiarioPreferenciaAgrupamentoFindOneInputView, DiarioPreferenciaAgrupamentoFindOneResultView, DiarioPreferenciaAgrupamentoInputCreateView, DiarioPreferenciaAgrupamentoInputUpdateView, DiarioPreferenciaAgrupamentoList, DiarioPreferenciaAgrupamentoListResultView, DiarioPreferenciaAgrupamentoUpdateOneById, DiarioPreferenciaAgrupamentoView, DiarioProfessor, DiarioProfessorCreate, DiarioProfessorDeleteOneById, DiarioProfessorFindOneById, DiarioProfessorFindOneInputView, DiarioProfessorFindOneResultView, DiarioProfessorInputCreateView, DiarioProfessorInputUpdateView, DiarioProfessorList, DiarioProfessorListResultView, DiarioProfessorUpdateOneById, DiarioProfessorView, DiarioSetImagemCapa, DiarioUpdateOneById, DiarioView, Disciplina, DisciplinaCreate, DisciplinaDeleteOneById, DisciplinaFindOneById, DisciplinaFindOneInputView, DisciplinaFindOneResultView, DisciplinaGetImagemCapa, DisciplinaInputCreateView, DisciplinaInputUpdateView, DisciplinaList, DisciplinaListResultView, DisciplinaSetImagemCapa, DisciplinaUpdateOneById, DisciplinaView, Disponibilidade, DisponibilidadeCreate, DisponibilidadeDeleteOneById, DisponibilidadeDia, DisponibilidadeDiaCreate, DisponibilidadeDiaDeleteOneById, DisponibilidadeDiaFindOneById, DisponibilidadeDiaFindOneInputView, DisponibilidadeDiaFindOneResultView, DisponibilidadeDiaInputCreateView, DisponibilidadeDiaInputUpdateView, DisponibilidadeDiaList, DisponibilidadeDiaListResultView, DisponibilidadeDiaUpdateOneById, DisponibilidadeDiaView, DisponibilidadeFindOneById, DisponibilidadeFindOneInputView, DisponibilidadeFindOneResultView, DisponibilidadeInputCreateView, DisponibilidadeInputUpdateView, DisponibilidadeList, DisponibilidadeListResultView, DisponibilidadeUpdateOneById, DisponibilidadeView, Endereco, EnderecoFindOneById, EnderecoFindOneInputView, EnderecoFindOneResultView, EnderecoInputView, EnderecoView, Estado, EstadoFindOneById, EstadoFindOneInputView, EstadoFindOneResultView, EstadoList, EstadoListResultView, EstadoView, Etapa, EtapaCreate, EtapaDeleteOneById, EtapaFindOneById, EtapaFindOneInputView, EtapaFindOneResultView, EtapaInputCreateView, EtapaInputUpdateView, EtapaList, EtapaListResultView, EtapaUpdateOneById, EtapaView, Evento, EventoCreate, EventoDeleteOneById, EventoFindOneById, EventoFindOneInputView, EventoFindOneResultView, EventoInputCreateView, EventoInputUpdateView, EventoList, EventoListResultView, EventoUpdateOneById, EventoView, GetImagem, GradeHorarioOfertaFormacao, GradeHorarioOfertaFormacaoCreate, GradeHorarioOfertaFormacaoDeleteOneById, GradeHorarioOfertaFormacaoFindOneById, GradeHorarioOfertaFormacaoFindOneInputView, GradeHorarioOfertaFormacaoFindOneResultView, GradeHorarioOfertaFormacaoInputCreateView, GradeHorarioOfertaFormacaoInputUpdateView, GradeHorarioOfertaFormacaoIntervaloDeTempo, GradeHorarioOfertaFormacaoIntervaloDeTempoCreate, GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneById, GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneById, GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView, GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView, GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView, GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView, GradeHorarioOfertaFormacaoIntervaloDeTempoList, GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView, GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneById, GradeHorarioOfertaFormacaoIntervaloDeTempoView, GradeHorarioOfertaFormacaoList, GradeHorarioOfertaFormacaoListResultView, GradeHorarioOfertaFormacaoUpdateOneById, GradeHorarioOfertaFormacaoView, HorarioGerado, HorarioGeradoAula, HorarioGeradoAulaCreate, HorarioGeradoAulaDeleteOneById, HorarioGeradoAulaFindOneById, HorarioGeradoAulaFindOneInputView, HorarioGeradoAulaFindOneResultView, HorarioGeradoAulaInputCreateView, HorarioGeradoAulaInputUpdateView, HorarioGeradoAulaList, HorarioGeradoAulaListResultView, HorarioGeradoAulaUpdateOneById, HorarioGeradoAulaView, HorarioGeradoCreate, HorarioGeradoDeleteOneById, HorarioGeradoFindOneById, HorarioGeradoFindOneInputView, HorarioGeradoFindOneResultView, HorarioGeradoInputCreateView, HorarioGeradoInputUpdateView, HorarioGeradoList, HorarioGeradoListResultView, HorarioGeradoUpdateOneById, HorarioGeradoView, ImageFindOneFromImagemArquivoResultView, Imagem, ImagemArquivo, ImagemArquivoFindOneFromImagemResultView, ImagemArquivoFindOneInputView, ImagemArquivoFindOneResultView, ImagemArquivoView, ImagemFindOneInputView, ImagemFindOneResultView, ImagemView, IntervaloDeTempo, IntervaloDeTempoFindOneResultView, IntervaloDeTempoInputView, IntervaloDeTempoView, Modalidade, ModalidadeCreate, ModalidadeDeleteOneById, ModalidadeFindOneById, ModalidadeFindOneInputView, ModalidadeFindOneResultView, ModalidadeInputCreateView, ModalidadeInputUpdateView, ModalidadeList, ModalidadeListResultView, ModalidadeUpdateOneById, ModalidadeView, NivelDeFormacao, NivelDeFormacaoCreate, NivelDeFormacaoDeleteOneById, NivelDeFormacaoFindOneById, NivelDeFormacaoFindOneInputView, NivelDeFormacaoFindOneResultView, NivelDeFormacaoInputCreateView, NivelDeFormacaoInputUpdateView, NivelDeFormacaoList, NivelDeFormacaoListResultView, NivelDeFormacaoUpdateOneById, NivelDeFormacaoView, OfertaFormacao, OfertaFormacaoCreate, OfertaFormacaoDeleteOneById, OfertaFormacaoFindOneById, OfertaFormacaoFindOneInputView, OfertaFormacaoFindOneResultView, OfertaFormacaoInputCreateView, OfertaFormacaoInputUpdateView, OfertaFormacaoList, OfertaFormacaoListResultView, OfertaFormacaoNivelFormacao, OfertaFormacaoNivelFormacaoCreate, OfertaFormacaoNivelFormacaoDeleteOneById, OfertaFormacaoNivelFormacaoFindOneById, OfertaFormacaoNivelFormacaoFindOneInputView, OfertaFormacaoNivelFormacaoFindOneResultView, OfertaFormacaoNivelFormacaoInputCreateView, OfertaFormacaoNivelFormacaoInputUpdateView, OfertaFormacaoNivelFormacaoList, OfertaFormacaoNivelFormacaoListResultView, OfertaFormacaoNivelFormacaoUpdateOneById, OfertaFormacaoNivelFormacaoView, OfertaFormacaoUpdateOneById, OfertaFormacaoView, PaginatedFilterView, PaginatedInputBaseView, PaginatedInputView, PaginatedResultLinksView, PaginatedResultMetaView, PaginatedResultView, PaginatedSortByView, Perfil, PerfilCreate, PerfilDeleteOneById, PerfilFindOneById, PerfilFindOneInputView, PerfilFindOneResultView, PerfilInputCreateView, PerfilInputUpdateView, PerfilList, PerfilListResultView, PerfilUpdateOneById, PerfilView, ProfessorDisponibilidade, ProfessorDisponibilidadeCreate, ProfessorDisponibilidadeDeleteOneById, ProfessorDisponibilidadeFindOneById, ProfessorDisponibilidadeFindOneInputView, ProfessorDisponibilidadeFindOneResultView, ProfessorDisponibilidadeInputCreateView, ProfessorDisponibilidadeInputUpdateView, ProfessorDisponibilidadeList, ProfessorDisponibilidadeListResultView, ProfessorDisponibilidadeUpdateOneById, ProfessorDisponibilidadeView, Reserva, ReservaCreate, ReservaDeleteOneById, ReservaFindOneById, ReservaFindOneInputView, ReservaFindOneResultView, ReservaInputCreateView, ReservaInputUpdateView, ReservaList, ReservaListResultView, ReservaUpdateOneById, ReservaView, SearchInputView, SetImagem, Turma, TurmaCreate, TurmaDeleteOneById, TurmaDisponibilidade, TurmaDisponibilidadeCreate, TurmaDisponibilidadeDeleteOneById, TurmaDisponibilidadeFindOneById, TurmaDisponibilidadeFindOneInputView, TurmaDisponibilidadeFindOneResultView, TurmaDisponibilidadeInputCreateView, TurmaDisponibilidadeInputUpdateView, TurmaDisponibilidadeList, TurmaDisponibilidadeListResultView, TurmaDisponibilidadeUpdateOneById, TurmaDisponibilidadeView, TurmaFindOneById, TurmaFindOneInputView, TurmaFindOneResultView, TurmaGetImagemCapa, TurmaInputCreateView, TurmaInputUpdateView, TurmaList, TurmaListResultView, TurmaSetImagemCapa, TurmaUpdateOneById, TurmaView, Usuario, UsuarioCreate, UsuarioDeleteOneById, UsuarioFindOneById, UsuarioFindOneInputView, UsuarioFindOneResultView, UsuarioGetImagemCapa, UsuarioGetImagemPerfil, UsuarioInputCreateView, UsuarioInputUpdateView, UsuarioList, UsuarioListResultView, UsuarioSetImagemCapa, UsuarioSetImagemPerfil, UsuarioUpdateOneById, UsuarioView };

    public partial class Ambiente
    {
        public static Ambiente FromJson(string json) => JsonSerializer.Deserialize<Ambiente>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteCreateOperation
    {
        public static AmbienteCreateOperation FromJson(string json) => JsonSerializer.Deserialize<AmbienteCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteDeleteByIdOperation
    {
        public static AmbienteDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<AmbienteDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindOneByIdOperation
    {
        public static AmbienteFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindOneInputView
    {
        public static AmbienteFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteFindOneResultView
    {
        public static AmbienteFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<AmbienteFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteGetCoverImage
    {
        public static AmbienteGetCoverImage FromJson(string json) => JsonSerializer.Deserialize<AmbienteGetCoverImage>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteInputCreateView
    {
        public static AmbienteInputCreateView FromJson(string json) => JsonSerializer.Deserialize<AmbienteInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteInputUpdateView
    {
        public static AmbienteInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<AmbienteInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteListOperation
    {
        public static AmbienteListOperation FromJson(string json) => JsonSerializer.Deserialize<AmbienteListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteListResultView
    {
        public static AmbienteListResultView FromJson(string json) => JsonSerializer.Deserialize<AmbienteListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteSetCoverImage
    {
        public static AmbienteSetCoverImage FromJson(string json) => JsonSerializer.Deserialize<AmbienteSetCoverImage>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteUpdateByIdOperation
    {
        public static AmbienteUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<AmbienteUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AmbienteView
    {
        public static AmbienteView FromJson(string json) => JsonSerializer.Deserialize<AmbienteView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Arquivo
    {
        public static Arquivo FromJson(string json) => JsonSerializer.Deserialize<Arquivo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoFindOneInputView
    {
        public static ArquivoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<ArquivoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoFindOneResultView
    {
        public static ArquivoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<ArquivoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoGetFileOperation
    {
        public static ArquivoGetFileOperation FromJson(string json) => JsonSerializer.Deserialize<ArquivoGetFileOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ArquivoView
    {
        public static ArquivoView FromJson(string json) => JsonSerializer.Deserialize<ArquivoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Aula
    {
        public static Aula FromJson(string json) => JsonSerializer.Deserialize<Aula>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaCreateOperation
    {
        public static AulaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<AulaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaDeleteByIdOperation
    {
        public static AulaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<AulaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindOneByIdOperation
    {
        public static AulaFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<AulaFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindOneInputView
    {
        public static AulaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<AulaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaFindOneResultView
    {
        public static AulaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<AulaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaInputCreateView
    {
        public static AulaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<AulaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaInputUpdateView
    {
        public static AulaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<AulaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaListOperation
    {
        public static AulaListOperation FromJson(string json) => JsonSerializer.Deserialize<AulaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaListResultView
    {
        public static AulaListResultView FromJson(string json) => JsonSerializer.Deserialize<AulaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaUpdateByIdOperation
    {
        public static AulaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<AulaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AulaView
    {
        public static AulaView FromJson(string json) => JsonSerializer.Deserialize<AulaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthCredentialsSetInitialPasswordInputView
    {
        public static AuthCredentialsSetInitialPasswordInputView FromJson(string json) => JsonSerializer.Deserialize<AuthCredentialsSetInitialPasswordInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthCredentialsSetInitialPasswordOperation
    {
        public static AuthCredentialsSetInitialPasswordOperation FromJson(string json) => JsonSerializer.Deserialize<AuthCredentialsSetInitialPasswordOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthLoginInputView
    {
        public static AuthLoginInputView FromJson(string json) => JsonSerializer.Deserialize<AuthLoginInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthLoginOperation
    {
        public static AuthLoginOperation FromJson(string json) => JsonSerializer.Deserialize<AuthLoginOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthRefreshInputView
    {
        public static AuthRefreshInputView FromJson(string json) => JsonSerializer.Deserialize<AuthRefreshInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthRefreshOperation
    {
        public static AuthRefreshOperation FromJson(string json) => JsonSerializer.Deserialize<AuthRefreshOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthSessionCredentialsView
    {
        public static AuthSessionCredentialsView FromJson(string json) => JsonSerializer.Deserialize<AuthSessionCredentialsView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthWhoAmIOperation
    {
        public static AuthWhoAmIOperation FromJson(string json) => JsonSerializer.Deserialize<AuthWhoAmIOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class AuthWhoAmIResultView
    {
        public static AuthWhoAmIResultView FromJson(string json) => JsonSerializer.Deserialize<AuthWhoAmIResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Bloco
    {
        public static Bloco FromJson(string json) => JsonSerializer.Deserialize<Bloco>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoCreateOperation
    {
        public static BlocoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<BlocoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoDeleteByIdOperation
    {
        public static BlocoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<BlocoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindOneByIdOperation
    {
        public static BlocoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<BlocoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindOneInputView
    {
        public static BlocoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<BlocoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoFindOneResultView
    {
        public static BlocoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<BlocoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoGetCoverImage
    {
        public static BlocoGetCoverImage FromJson(string json) => JsonSerializer.Deserialize<BlocoGetCoverImage>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoInputCreateView
    {
        public static BlocoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<BlocoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoInputUpdateView
    {
        public static BlocoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<BlocoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoListOperation
    {
        public static BlocoListOperation FromJson(string json) => JsonSerializer.Deserialize<BlocoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoListResultView
    {
        public static BlocoListResultView FromJson(string json) => JsonSerializer.Deserialize<BlocoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoSetCoverImage
    {
        public static BlocoSetCoverImage FromJson(string json) => JsonSerializer.Deserialize<BlocoSetCoverImage>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoUpdateByIdOperation
    {
        public static BlocoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<BlocoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class BlocoView
    {
        public static BlocoView FromJson(string json) => JsonSerializer.Deserialize<BlocoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivo
    {
        public static CalendarioLetivo FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoCreateOperation
    {
        public static CalendarioLetivoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoDeleteByIdOperation
    {
        public static CalendarioLetivoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneByIdOperation
    {
        public static CalendarioLetivoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneInputView
    {
        public static CalendarioLetivoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneResultView
    {
        public static CalendarioLetivoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoInputCreateView
    {
        public static CalendarioLetivoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoInputUpdateView
    {
        public static CalendarioLetivoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoListOperation
    {
        public static CalendarioLetivoListOperation FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoListResultView
    {
        public static CalendarioLetivoListResultView FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoUpdateByIdOperation
    {
        public static CalendarioLetivoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CalendarioLetivoView
    {
        public static CalendarioLetivoView FromJson(string json) => JsonSerializer.Deserialize<CalendarioLetivoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Campus
    {
        public static Campus FromJson(string json) => JsonSerializer.Deserialize<Campus>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusCreateOperation
    {
        public static CampusCreateOperation FromJson(string json) => JsonSerializer.Deserialize<CampusCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusDeleteOneByIdOperation
    {
        public static CampusDeleteOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CampusDeleteOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindOneByIdOperation
    {
        public static CampusFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CampusFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindOneInputView
    {
        public static CampusFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<CampusFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusFindOneResultView
    {
        public static CampusFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<CampusFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusInputCreateView
    {
        public static CampusInputCreateView FromJson(string json) => JsonSerializer.Deserialize<CampusInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusInputUpdateView
    {
        public static CampusInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<CampusInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusListOperation
    {
        public static CampusListOperation FromJson(string json) => JsonSerializer.Deserialize<CampusListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusListResultView
    {
        public static CampusListResultView FromJson(string json) => JsonSerializer.Deserialize<CampusListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusUpdateOperation
    {
        public static CampusUpdateOperation FromJson(string json) => JsonSerializer.Deserialize<CampusUpdateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CampusView
    {
        public static CampusView FromJson(string json) => JsonSerializer.Deserialize<CampusView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Cidade
    {
        public static Cidade FromJson(string json) => JsonSerializer.Deserialize<Cidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindOneByIdOperation
    {
        public static CidadeFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CidadeFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindOneInputView
    {
        public static CidadeFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<CidadeFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeFindOneResultView
    {
        public static CidadeFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<CidadeFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeListOperation
    {
        public static CidadeListOperation FromJson(string json) => JsonSerializer.Deserialize<CidadeListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeListResultView
    {
        public static CidadeListResultView FromJson(string json) => JsonSerializer.Deserialize<CidadeListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CidadeView
    {
        public static CidadeView FromJson(string json) => JsonSerializer.Deserialize<CidadeView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Curso
    {
        public static Curso FromJson(string json) => JsonSerializer.Deserialize<Curso>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoCreateOperation
    {
        public static CursoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<CursoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoDeleteByIdOperation
    {
        public static CursoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CursoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindOneByIdOperation
    {
        public static CursoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CursoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindOneInputView
    {
        public static CursoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<CursoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoFindOneResultView
    {
        public static CursoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<CursoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoGetImagemCapa
    {
        public static CursoGetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<CursoGetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoInputCreateView
    {
        public static CursoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<CursoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoInputUpdateView
    {
        public static CursoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<CursoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoListOperation
    {
        public static CursoListOperation FromJson(string json) => JsonSerializer.Deserialize<CursoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoListResultView
    {
        public static CursoListResultView FromJson(string json) => JsonSerializer.Deserialize<CursoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoSetImagemCapa
    {
        public static CursoSetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<CursoSetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoUpdateByIdOperation
    {
        public static CursoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<CursoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class CursoView
    {
        public static CursoView FromJson(string json) => JsonSerializer.Deserialize<CursoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DatedObject
    {
        public static DatedObject FromJson(string json) => JsonSerializer.Deserialize<DatedObject>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendario
    {
        public static DiaCalendario FromJson(string json) => JsonSerializer.Deserialize<DiaCalendario>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioCreateOperation
    {
        public static DiaCalendarioCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioDeleteByIdOperation
    {
        public static DiaCalendarioDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneByIdOperation
    {
        public static DiaCalendarioFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneInputView
    {
        public static DiaCalendarioFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneResultView
    {
        public static DiaCalendarioFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioInputCreateView
    {
        public static DiaCalendarioInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioInputUpdateView
    {
        public static DiaCalendarioInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioListOperation
    {
        public static DiaCalendarioListOperation FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioListResultView
    {
        public static DiaCalendarioListResultView FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioUpdateByIdOperation
    {
        public static DiaCalendarioUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiaCalendarioView
    {
        public static DiaCalendarioView FromJson(string json) => JsonSerializer.Deserialize<DiaCalendarioView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Diario
    {
        public static Diario FromJson(string json) => JsonSerializer.Deserialize<Diario>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioCreateOperation
    {
        public static DiarioCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioDeleteByIdOperation
    {
        public static DiarioDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindOneByIdOperation
    {
        public static DiarioFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindOneInputView
    {
        public static DiarioFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DiarioFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioFindOneResultView
    {
        public static DiarioFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DiarioFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioGetCoverImageOperation
    {
        public static DiarioGetCoverImageOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioGetCoverImageOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioInputCreateView
    {
        public static DiarioInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DiarioInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioInputUpdateView
    {
        public static DiarioInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DiarioInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioListOperation
    {
        public static DiarioListOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioListResultView
    {
        public static DiarioListResultView FromJson(string json) => JsonSerializer.Deserialize<DiarioListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamento
    {
        public static DiarioPreferenciaAgrupamento FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamento>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoCreateOperation
    {
        public static DiarioPreferenciaAgrupamentoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoDeleteByIdOperation
    {
        public static DiarioPreferenciaAgrupamentoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoFindByIdOperation
    {
        public static DiarioPreferenciaAgrupamentoFindByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoFindByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoFindOneInputView
    {
        public static DiarioPreferenciaAgrupamentoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoFindOneResultView
    {
        public static DiarioPreferenciaAgrupamentoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoInputCreateView
    {
        public static DiarioPreferenciaAgrupamentoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoInputUpdateView
    {
        public static DiarioPreferenciaAgrupamentoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoListOperation
    {
        public static DiarioPreferenciaAgrupamentoListOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoListResultView
    {
        public static DiarioPreferenciaAgrupamentoListResultView FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoUpdateByIdOperation
    {
        public static DiarioPreferenciaAgrupamentoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioPreferenciaAgrupamentoView
    {
        public static DiarioPreferenciaAgrupamentoView FromJson(string json) => JsonSerializer.Deserialize<DiarioPreferenciaAgrupamentoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessor
    {
        public static DiarioProfessor FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessor>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorCreateOperation
    {
        public static DiarioProfessorCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorDeleteByIdOperation
    {
        public static DiarioProfessorDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneByIdOperation
    {
        public static DiarioProfessorFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneInputView
    {
        public static DiarioProfessorFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneResultView
    {
        public static DiarioProfessorFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorInputCreateView
    {
        public static DiarioProfessorInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorInputUpdateView
    {
        public static DiarioProfessorInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorListOperation
    {
        public static DiarioProfessorListOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorListResultView
    {
        public static DiarioProfessorListResultView FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorUpdateByIdOperation
    {
        public static DiarioProfessorUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioProfessorView
    {
        public static DiarioProfessorView FromJson(string json) => JsonSerializer.Deserialize<DiarioProfessorView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioSetCoverImageOperation
    {
        public static DiarioSetCoverImageOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioSetCoverImageOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioUpdateByIdOperation
    {
        public static DiarioUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DiarioUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DiarioView
    {
        public static DiarioView FromJson(string json) => JsonSerializer.Deserialize<DiarioView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Disciplina
    {
        public static Disciplina FromJson(string json) => JsonSerializer.Deserialize<Disciplina>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaCreateOperation
    {
        public static DisciplinaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DisciplinaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaDeleteByIdOperation
    {
        public static DisciplinaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisciplinaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindOneByIdOperation
    {
        public static DisciplinaFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindOneInputView
    {
        public static DisciplinaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaFindOneResultView
    {
        public static DisciplinaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DisciplinaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaGetImagemCapa
    {
        public static DisciplinaGetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<DisciplinaGetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaInputCreateView
    {
        public static DisciplinaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DisciplinaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaInputUpdateView
    {
        public static DisciplinaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DisciplinaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaListOperation
    {
        public static DisciplinaListOperation FromJson(string json) => JsonSerializer.Deserialize<DisciplinaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaListResultView
    {
        public static DisciplinaListResultView FromJson(string json) => JsonSerializer.Deserialize<DisciplinaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaSetImagemCapa
    {
        public static DisciplinaSetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<DisciplinaSetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaUpdateByIdOperation
    {
        public static DisciplinaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisciplinaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisciplinaView
    {
        public static DisciplinaView FromJson(string json) => JsonSerializer.Deserialize<DisciplinaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Disponibilidade
    {
        public static Disponibilidade FromJson(string json) => JsonSerializer.Deserialize<Disponibilidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeCreateOperation
    {
        public static DisponibilidadeCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDeleteByIdOperation
    {
        public static DisponibilidadeDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDia
    {
        public static DisponibilidadeDia FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDia>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaCreateOperation
    {
        public static DisponibilidadeDiaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaDeleteByIdOperation
    {
        public static DisponibilidadeDiaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaFindOneByIdOperation
    {
        public static DisponibilidadeDiaFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaFindOneInputView
    {
        public static DisponibilidadeDiaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaFindOneResultView
    {
        public static DisponibilidadeDiaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaInputCreateView
    {
        public static DisponibilidadeDiaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaInputUpdateView
    {
        public static DisponibilidadeDiaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaListOperation
    {
        public static DisponibilidadeDiaListOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaListResultView
    {
        public static DisponibilidadeDiaListResultView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaUpdateByIdOperation
    {
        public static DisponibilidadeDiaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeDiaView
    {
        public static DisponibilidadeDiaView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeDiaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeFindOneByIdOperation
    {
        public static DisponibilidadeFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeFindOneInputView
    {
        public static DisponibilidadeFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeFindOneResultView
    {
        public static DisponibilidadeFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeInputCreateView
    {
        public static DisponibilidadeInputCreateView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeInputUpdateView
    {
        public static DisponibilidadeInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeListOperation
    {
        public static DisponibilidadeListOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeListResultView
    {
        public static DisponibilidadeListResultView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeUpdateByIdOperation
    {
        public static DisponibilidadeUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class DisponibilidadeView
    {
        public static DisponibilidadeView FromJson(string json) => JsonSerializer.Deserialize<DisponibilidadeView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Endereco
    {
        public static Endereco FromJson(string json) => JsonSerializer.Deserialize<Endereco>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoFindOneInputView
    {
        public static EnderecoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<EnderecoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoFindOneResultView
    {
        public static EnderecoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<EnderecoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoInput
    {
        public static EnderecoInput FromJson(string json) => JsonSerializer.Deserialize<EnderecoInput>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EnderecoView
    {
        public static EnderecoView FromJson(string json) => JsonSerializer.Deserialize<EnderecoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Estado
    {
        public static Estado FromJson(string json) => JsonSerializer.Deserialize<Estado>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindOneByIdOperation
    {
        public static EstadoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EstadoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindOneInputView
    {
        public static EstadoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<EstadoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoFindOneResultView
    {
        public static EstadoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<EstadoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoListOperation
    {
        public static EstadoListOperation FromJson(string json) => JsonSerializer.Deserialize<EstadoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoListResultView
    {
        public static EstadoListResultView FromJson(string json) => JsonSerializer.Deserialize<EstadoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EstadoView
    {
        public static EstadoView FromJson(string json) => JsonSerializer.Deserialize<EstadoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Etapa
    {
        public static Etapa FromJson(string json) => JsonSerializer.Deserialize<Etapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaCreateOperation
    {
        public static EtapaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<EtapaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaDeleteByIdOperation
    {
        public static EtapaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EtapaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindOneByIdOperation
    {
        public static EtapaFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EtapaFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindOneInputView
    {
        public static EtapaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<EtapaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaFindOneResultView
    {
        public static EtapaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<EtapaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaInputCreateView
    {
        public static EtapaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<EtapaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaInputUpdateView
    {
        public static EtapaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<EtapaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaListOperation
    {
        public static EtapaListOperation FromJson(string json) => JsonSerializer.Deserialize<EtapaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaListResultView
    {
        public static EtapaListResultView FromJson(string json) => JsonSerializer.Deserialize<EtapaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaUpdateByIdOperation
    {
        public static EtapaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EtapaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EtapaView
    {
        public static EtapaView FromJson(string json) => JsonSerializer.Deserialize<EtapaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Evento
    {
        public static Evento FromJson(string json) => JsonSerializer.Deserialize<Evento>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoCreateOperation
    {
        public static EventoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<EventoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoDeleteByIdOperation
    {
        public static EventoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EventoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindOneByIdOperation
    {
        public static EventoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EventoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindOneInputView
    {
        public static EventoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<EventoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoFindOneResultView
    {
        public static EventoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<EventoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoInputCreateView
    {
        public static EventoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<EventoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoInputUpdateView
    {
        public static EventoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<EventoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoListOperation
    {
        public static EventoListOperation FromJson(string json) => JsonSerializer.Deserialize<EventoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoListResultView
    {
        public static EventoListResultView FromJson(string json) => JsonSerializer.Deserialize<EventoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoUpdateByIdOperation
    {
        public static EventoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<EventoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class EventoView
    {
        public static EventoView FromJson(string json) => JsonSerializer.Deserialize<EventoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GenericSearchInputView
    {
        public static GenericSearchInputView FromJson(string json) => JsonSerializer.Deserialize<GenericSearchInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacao
    {
        public static GradeHorarioOfertaFormacao FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacao>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoCreateOperation
    {
        public static GradeHorarioOfertaFormacaoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoDeleteByIdOperation
    {
        public static GradeHorarioOfertaFormacaoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoFindOneByIdOperation
    {
        public static GradeHorarioOfertaFormacaoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoFindOneInputView
    {
        public static GradeHorarioOfertaFormacaoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoFindOneResultView
    {
        public static GradeHorarioOfertaFormacaoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoInputCreateView
    {
        public static GradeHorarioOfertaFormacaoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoInputUpdateView
    {
        public static GradeHorarioOfertaFormacaoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempo
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempo FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListOperation
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoListOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoIntervaloDeTempoView
    {
        public static GradeHorarioOfertaFormacaoIntervaloDeTempoView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoIntervaloDeTempoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoListOperation
    {
        public static GradeHorarioOfertaFormacaoListOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoListResultView
    {
        public static GradeHorarioOfertaFormacaoListResultView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoUpdateByIdOperation
    {
        public static GradeHorarioOfertaFormacaoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class GradeHorarioOfertaFormacaoView
    {
        public static GradeHorarioOfertaFormacaoView FromJson(string json) => JsonSerializer.Deserialize<GradeHorarioOfertaFormacaoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGerado
    {
        public static HorarioGerado FromJson(string json) => JsonSerializer.Deserialize<HorarioGerado>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAula
    {
        public static HorarioGeradoAula FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAula>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaCreateOperation
    {
        public static HorarioGeradoAulaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaDeleteByIdOperation
    {
        public static HorarioGeradoAulaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaFindByIdOperation
    {
        public static HorarioGeradoAulaFindByIdOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaFindByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaFindOneInputView
    {
        public static HorarioGeradoAulaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaFindOneResultView
    {
        public static HorarioGeradoAulaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaInputCreateView
    {
        public static HorarioGeradoAulaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaInputUpdateView
    {
        public static HorarioGeradoAulaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaListOperation
    {
        public static HorarioGeradoAulaListOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaListResultView
    {
        public static HorarioGeradoAulaListResultView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaUpdateByIdOperation
    {
        public static HorarioGeradoAulaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoAulaView
    {
        public static HorarioGeradoAulaView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoAulaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoCreateOperation
    {
        public static HorarioGeradoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoDeleteByIdOperation
    {
        public static HorarioGeradoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoFindByIdOperation
    {
        public static HorarioGeradoFindByIdOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoFindByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoFindOneInputView
    {
        public static HorarioGeradoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoFindOneResultView
    {
        public static HorarioGeradoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoInputCreateView
    {
        public static HorarioGeradoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoInputUpdateView
    {
        public static HorarioGeradoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoListOperation
    {
        public static HorarioGeradoListOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoListResultView
    {
        public static HorarioGeradoListResultView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoUpdateByIdOperation
    {
        public static HorarioGeradoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class HorarioGeradoView
    {
        public static HorarioGeradoView FromJson(string json) => JsonSerializer.Deserialize<HorarioGeradoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Imagem
    {
        public static Imagem FromJson(string json) => JsonSerializer.Deserialize<Imagem>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivo
    {
        public static ImagemArquivo FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneFromImagemResultView
    {
        public static ImagemArquivoFindOneFromImagemResultView FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoFindOneFromImagemResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneInputView
    {
        public static ImagemArquivoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneResultView
    {
        public static ImagemArquivoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemArquivoView
    {
        public static ImagemArquivoView FromJson(string json) => JsonSerializer.Deserialize<ImagemArquivoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemFindOneFromImagemArquivoResultView
    {
        public static ImagemFindOneFromImagemArquivoResultView FromJson(string json) => JsonSerializer.Deserialize<ImagemFindOneFromImagemArquivoResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemFindOneInputView
    {
        public static ImagemFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<ImagemFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemFindOneResultView
    {
        public static ImagemFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<ImagemFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ImagemView
    {
        public static ImagemView FromJson(string json) => JsonSerializer.Deserialize<ImagemView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempo
    {
        public static IntervaloDeTempo FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempo>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempoFindOneResultView
    {
        public static IntervaloDeTempoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempoInputView
    {
        public static IntervaloDeTempoInputView FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempoInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class IntervaloDeTempoView
    {
        public static IntervaloDeTempoView FromJson(string json) => JsonSerializer.Deserialize<IntervaloDeTempoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Modalidade
    {
        public static Modalidade FromJson(string json) => JsonSerializer.Deserialize<Modalidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeCreateOperation
    {
        public static ModalidadeCreateOperation FromJson(string json) => JsonSerializer.Deserialize<ModalidadeCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeDeleteByIdOperation
    {
        public static ModalidadeDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ModalidadeDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindOneByIdOperation
    {
        public static ModalidadeFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindOneInputView
    {
        public static ModalidadeFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeFindOneResultView
    {
        public static ModalidadeFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<ModalidadeFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeInputCreateView
    {
        public static ModalidadeInputCreateView FromJson(string json) => JsonSerializer.Deserialize<ModalidadeInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeInputUpdateView
    {
        public static ModalidadeInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<ModalidadeInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeListOperation
    {
        public static ModalidadeListOperation FromJson(string json) => JsonSerializer.Deserialize<ModalidadeListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeListResultView
    {
        public static ModalidadeListResultView FromJson(string json) => JsonSerializer.Deserialize<ModalidadeListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeUpdateByIdOperation
    {
        public static ModalidadeUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ModalidadeUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ModalidadeView
    {
        public static ModalidadeView FromJson(string json) => JsonSerializer.Deserialize<ModalidadeView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacao
    {
        public static NivelDeFormacao FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacao>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoCreateOperation
    {
        public static NivelDeFormacaoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoDeleteByIdOperation
    {
        public static NivelDeFormacaoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoFindOneByIdOperation
    {
        public static NivelDeFormacaoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoFindOneInputView
    {
        public static NivelDeFormacaoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoFindOneResultView
    {
        public static NivelDeFormacaoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoInputCreateView
    {
        public static NivelDeFormacaoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoInputUpdateView
    {
        public static NivelDeFormacaoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoListOperation
    {
        public static NivelDeFormacaoListOperation FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoListResultView
    {
        public static NivelDeFormacaoListResultView FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoUpdateByIdOperation
    {
        public static NivelDeFormacaoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class NivelDeFormacaoView
    {
        public static NivelDeFormacaoView FromJson(string json) => JsonSerializer.Deserialize<NivelDeFormacaoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ObjectIntegerId
    {
        public static ObjectIntegerId FromJson(string json) => JsonSerializer.Deserialize<ObjectIntegerId>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ObjectUuid
    {
        public static ObjectUuid FromJson(string json) => JsonSerializer.Deserialize<ObjectUuid>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacao
    {
        public static OfertaFormacao FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacao>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoCreateOperation
    {
        public static OfertaFormacaoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoDeleteByIdOperation
    {
        public static OfertaFormacaoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoFindOneByIdOperation
    {
        public static OfertaFormacaoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoFindOneInputView
    {
        public static OfertaFormacaoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoFindOneResultView
    {
        public static OfertaFormacaoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoInputCreateView
    {
        public static OfertaFormacaoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoInputUpdateView
    {
        public static OfertaFormacaoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoListOperation
    {
        public static OfertaFormacaoListOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoListResultView
    {
        public static OfertaFormacaoListResultView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacao
    {
        public static OfertaFormacaoNivelFormacao FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacao>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoCreateOperation
    {
        public static OfertaFormacaoNivelFormacaoCreateOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoDeleteByIdOperation
    {
        public static OfertaFormacaoNivelFormacaoDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoFindOneByIdOperation
    {
        public static OfertaFormacaoNivelFormacaoFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoFindOneInputView
    {
        public static OfertaFormacaoNivelFormacaoFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoFindOneResultView
    {
        public static OfertaFormacaoNivelFormacaoFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoInputCreateView
    {
        public static OfertaFormacaoNivelFormacaoInputCreateView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoInputUpdateView
    {
        public static OfertaFormacaoNivelFormacaoInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoListOperation
    {
        public static OfertaFormacaoNivelFormacaoListOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoListResultView
    {
        public static OfertaFormacaoNivelFormacaoListResultView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoUpdateByIdOperation
    {
        public static OfertaFormacaoNivelFormacaoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoNivelFormacaoView
    {
        public static OfertaFormacaoNivelFormacaoView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoNivelFormacaoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoUpdateByIdOperation
    {
        public static OfertaFormacaoUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class OfertaFormacaoView
    {
        public static OfertaFormacaoView FromJson(string json) => JsonSerializer.Deserialize<OfertaFormacaoView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginationFilterView
    {
        public static PaginationFilterView FromJson(string json) => JsonSerializer.Deserialize<PaginationFilterView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginationInputBaseView
    {
        public static PaginationInputBaseView FromJson(string json) => JsonSerializer.Deserialize<PaginationInputBaseView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginationInputView
    {
        public static PaginationInputView FromJson(string json) => JsonSerializer.Deserialize<PaginationInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginationResultLinks
    {
        public static PaginationResultLinks FromJson(string json) => JsonSerializer.Deserialize<PaginationResultLinks>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginationResultMeta
    {
        public static PaginationResultMeta FromJson(string json) => JsonSerializer.Deserialize<PaginationResultMeta>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PaginationSortByView
    {
        public static PaginationSortByView FromJson(string json) => JsonSerializer.Deserialize<PaginationSortByView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Perfil
    {
        public static Perfil FromJson(string json) => JsonSerializer.Deserialize<Perfil>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilFindOneByIdOperation
    {
        public static PerfilFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<PerfilFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilFindOneInputView
    {
        public static PerfilFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<PerfilFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilFindOneResultView
    {
        public static PerfilFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<PerfilFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilListOperation
    {
        public static PerfilListOperation FromJson(string json) => JsonSerializer.Deserialize<PerfilListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilListResultView
    {
        public static PerfilListResultView FromJson(string json) => JsonSerializer.Deserialize<PerfilListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilUpdateOperation
    {
        public static PerfilUpdateOperation FromJson(string json) => JsonSerializer.Deserialize<PerfilUpdateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilUpdateView
    {
        public static PerfilUpdateView FromJson(string json) => JsonSerializer.Deserialize<PerfilUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class PerfilView
    {
        public static PerfilView FromJson(string json) => JsonSerializer.Deserialize<PerfilView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidade
    {
        public static ProfessorDisponibilidade FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeCreateOperation
    {
        public static ProfessorDisponibilidadeCreateOperation FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeDeleteByIdOperation
    {
        public static ProfessorDisponibilidadeDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeFindOneByIdOperation
    {
        public static ProfessorDisponibilidadeFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeFindOneInputView
    {
        public static ProfessorDisponibilidadeFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeFindOneResultView
    {
        public static ProfessorDisponibilidadeFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeInputCreateView
    {
        public static ProfessorDisponibilidadeInputCreateView FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeInputUpdateView
    {
        public static ProfessorDisponibilidadeInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeListOperation
    {
        public static ProfessorDisponibilidadeListOperation FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeListResultView
    {
        public static ProfessorDisponibilidadeListResultView FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeUpdateByIdOperation
    {
        public static ProfessorDisponibilidadeUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ProfessorDisponibilidadeView
    {
        public static ProfessorDisponibilidadeView FromJson(string json) => JsonSerializer.Deserialize<ProfessorDisponibilidadeView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Reserva
    {
        public static Reserva FromJson(string json) => JsonSerializer.Deserialize<Reserva>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaCreateOperation
    {
        public static ReservaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<ReservaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaDeleteByIdOperation
    {
        public static ReservaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ReservaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindOneByIdOperation
    {
        public static ReservaFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ReservaFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindOneInputView
    {
        public static ReservaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<ReservaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaFindOneResultView
    {
        public static ReservaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<ReservaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaInputCreateView
    {
        public static ReservaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<ReservaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaInputUpdateView
    {
        public static ReservaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<ReservaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaListOperation
    {
        public static ReservaListOperation FromJson(string json) => JsonSerializer.Deserialize<ReservaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaListResultView
    {
        public static ReservaListResultView FromJson(string json) => JsonSerializer.Deserialize<ReservaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaUpdateByIdOperation
    {
        public static ReservaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<ReservaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class ReservaView
    {
        public static ReservaView FromJson(string json) => JsonSerializer.Deserialize<ReservaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class Tokens
    {
        public static TokensEnum FromJson(string json) => JsonSerializer.Deserialize<TokensEnum>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Turma
    {
        public static Turma FromJson(string json) => JsonSerializer.Deserialize<Turma>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaCreateOperation
    {
        public static TurmaCreateOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDeleteByIdOperation
    {
        public static TurmaDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidade
    {
        public static TurmaDisponibilidade FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidade>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeCreateOperation
    {
        public static TurmaDisponibilidadeCreateOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDeleteByIdOperation
    {
        public static TurmaDisponibilidadeDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneByIdOperation
    {
        public static TurmaDisponibilidadeFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneInputView
    {
        public static TurmaDisponibilidadeFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneResultView
    {
        public static TurmaDisponibilidadeFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeInputCreateView
    {
        public static TurmaDisponibilidadeInputCreateView FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeInputUpdateView
    {
        public static TurmaDisponibilidadeInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeListOperation
    {
        public static TurmaDisponibilidadeListOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeListResultView
    {
        public static TurmaDisponibilidadeListResultView FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeUpdateByIdOperation
    {
        public static TurmaDisponibilidadeUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeView
    {
        public static TurmaDisponibilidadeView FromJson(string json) => JsonSerializer.Deserialize<TurmaDisponibilidadeView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindOneByIdOperation
    {
        public static TurmaFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindOneInputView
    {
        public static TurmaFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<TurmaFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaFindOneResultView
    {
        public static TurmaFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<TurmaFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaGetImagemCapa
    {
        public static TurmaGetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<TurmaGetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaInputCreateView
    {
        public static TurmaInputCreateView FromJson(string json) => JsonSerializer.Deserialize<TurmaInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaInputUpdateView
    {
        public static TurmaInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<TurmaInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaListOperation
    {
        public static TurmaListOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaListResultView
    {
        public static TurmaListResultView FromJson(string json) => JsonSerializer.Deserialize<TurmaListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaSetImagemCapa
    {
        public static TurmaSetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<TurmaSetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaUpdateByIdOperation
    {
        public static TurmaUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<TurmaUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class TurmaView
    {
        public static TurmaView FromJson(string json) => JsonSerializer.Deserialize<TurmaView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class Usuario
    {
        public static Usuario FromJson(string json) => JsonSerializer.Deserialize<Usuario>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioCreateOperation
    {
        public static UsuarioCreateOperation FromJson(string json) => JsonSerializer.Deserialize<UsuarioCreateOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioDeleteByIdOperation
    {
        public static UsuarioDeleteByIdOperation FromJson(string json) => JsonSerializer.Deserialize<UsuarioDeleteByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindOneByIdOperation
    {
        public static UsuarioFindOneByIdOperation FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindOneByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindOneInputView
    {
        public static UsuarioFindOneInputView FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindOneInputView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioFindOneResultView
    {
        public static UsuarioFindOneResultView FromJson(string json) => JsonSerializer.Deserialize<UsuarioFindOneResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioGetImagemCapa
    {
        public static UsuarioGetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<UsuarioGetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioGetImagemPerfil
    {
        public static UsuarioGetImagemPerfil FromJson(string json) => JsonSerializer.Deserialize<UsuarioGetImagemPerfil>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioInputCreateView
    {
        public static UsuarioInputCreateView FromJson(string json) => JsonSerializer.Deserialize<UsuarioInputCreateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioInputUpdateView
    {
        public static UsuarioInputUpdateView FromJson(string json) => JsonSerializer.Deserialize<UsuarioInputUpdateView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioListOperation
    {
        public static UsuarioListOperation FromJson(string json) => JsonSerializer.Deserialize<UsuarioListOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioListResultView
    {
        public static UsuarioListResultView FromJson(string json) => JsonSerializer.Deserialize<UsuarioListResultView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioSetImagemCapa
    {
        public static UsuarioSetImagemCapa FromJson(string json) => JsonSerializer.Deserialize<UsuarioSetImagemCapa>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioSetImagemPerfil
    {
        public static UsuarioSetImagemPerfil FromJson(string json) => JsonSerializer.Deserialize<UsuarioSetImagemPerfil>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioUpdateByIdOperation
    {
        public static UsuarioUpdateByIdOperation FromJson(string json) => JsonSerializer.Deserialize<UsuarioUpdateByIdOperation>(json, Ladesa.Dtos.Converter.Settings);
    }

    public partial class UsuarioView
    {
        public static UsuarioView FromJson(string json) => JsonSerializer.Deserialize<UsuarioView>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class Date
    {
        public static DateTimeOffset FromJson(string json) => JsonSerializer.Deserialize<DateTimeOffset>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class DateTime
    {
        public static DateTimeOffset FromJson(string json) => JsonSerializer.Deserialize<DateTimeOffset>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class NumericId
    {
        public static long FromJson(string json) => JsonSerializer.Deserialize<long>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class SortByConstraint
    {
        public static string FromJson(string json) => JsonSerializer.Deserialize<string>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class Time
    {
        public static DateTimeOffset FromJson(string json) => JsonSerializer.Deserialize<DateTimeOffset>(json, Ladesa.Dtos.Converter.Settings);
    }

    public class Uuid
    {
        public static Guid FromJson(string json) => JsonSerializer.Deserialize<Guid>(json, Ladesa.Dtos.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Ambiente self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteGetCoverImage self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteSetCoverImage self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AmbienteView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Arquivo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoGetFileOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ArquivoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Aula self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AulaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthCredentialsSetInitialPasswordInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthCredentialsSetInitialPasswordOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthLoginInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthLoginOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthRefreshInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthRefreshOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthSessionCredentialsView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthWhoAmIOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this AuthWhoAmIResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Bloco self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoGetCoverImage self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoSetCoverImage self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this BlocoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CalendarioLetivoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Campus self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusDeleteOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusUpdateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CampusView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Cidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CidadeView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Curso self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoGetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoSetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this CursoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DatedObject self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendario self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiaCalendarioView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Diario self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioGetCoverImageOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamento self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoFindByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioPreferenciaAgrupamentoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessor self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioProfessorView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioSetCoverImageOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DiarioView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Disciplina self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaGetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaSetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisciplinaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Disponibilidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDia self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeDiaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DisponibilidadeView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Endereco self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoInput self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EnderecoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Estado self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EstadoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Etapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EtapaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Evento self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this EventoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GenericSearchInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacao self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoIntervaloDeTempoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this GradeHorarioOfertaFormacaoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGerado self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAula self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaFindByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoAulaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoFindByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this HorarioGeradoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Imagem self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneFromImagemResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemArquivoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemFindOneFromImagemArquivoResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ImagemView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempo self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Modalidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ModalidadeView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacao self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this NivelDeFormacaoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ObjectIntegerId self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ObjectUuid self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacao self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacao self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoNivelFormacaoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this OfertaFormacaoView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginationFilterView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginationInputBaseView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginationInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginationResultLinks self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginationResultMeta self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PaginationSortByView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Perfil self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilUpdateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this PerfilView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ProfessorDisponibilidadeView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Reserva self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this ReservaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TokensEnum self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Turma self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidade self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaGetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaSetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this TurmaView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Usuario self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioCreateOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioDeleteByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindOneByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindOneInputView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioFindOneResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioGetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioGetImagemPerfil self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioInputCreateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioInputUpdateView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioListOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioListResultView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioSetImagemCapa self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioSetImagemPerfil self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioUpdateByIdOperation self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this UsuarioView self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this DateTimeOffset self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this long self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this string self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
        public static string ToJson(this Guid self) => JsonSerializer.Serialize(self, Ladesa.Dtos.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)
        {
            Converters =
            {
                TokensEnumConverter.Singleton,
                new DateOnlyConverter(),
                new TimeOnlyConverter(),
                IsoDateTimeOffsetConverter.Singleton
            },
        };
    }

    internal class MinMaxLengthCheckConverter : JsonConverter<string>
    {
        public override bool CanConvert(Type t) => t == typeof(string);

        public override string Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var value = reader.GetString();
            if (value.Length >= 1)
            {
                return value;
            }
            throw new Exception("Cannot unmarshal type string");
        }

        public override void Write(Utf8JsonWriter writer, string value, JsonSerializerOptions options)
        {
            if (value.Length >= 1)
            {
                JsonSerializer.Serialize(writer, value, options);
                return;
            }
            throw new Exception("Cannot marshal type string");
        }

        public static readonly MinMaxLengthCheckConverter Singleton = new MinMaxLengthCheckConverter();
    }

    internal class TokensEnumConverter : JsonConverter<TokensEnum>
    {
        public override bool CanConvert(Type t) => t == typeof(TokensEnum);

        public override TokensEnum Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var value = reader.GetString();
            switch (value)
            {
                case "Ambiente":
                    return TokensEnum.Ambiente;
                case "AmbienteCreate":
                    return TokensEnum.AmbienteCreate;
                case "AmbienteDeleteOneById":
                    return TokensEnum.AmbienteDeleteOneById;
                case "AmbienteFindOneById":
                    return TokensEnum.AmbienteFindOneById;
                case "AmbienteFindOneInputView":
                    return TokensEnum.AmbienteFindOneInputView;
                case "AmbienteFindOneResultView":
                    return TokensEnum.AmbienteFindOneResultView;
                case "AmbienteGetImagemCapa":
                    return TokensEnum.AmbienteGetImagemCapa;
                case "AmbienteInputCreateView":
                    return TokensEnum.AmbienteInputCreateView;
                case "AmbienteInputUpdateView":
                    return TokensEnum.AmbienteInputUpdateView;
                case "AmbienteList":
                    return TokensEnum.AmbienteList;
                case "AmbienteListResultView":
                    return TokensEnum.AmbienteListResultView;
                case "AmbienteSetImagemCapa":
                    return TokensEnum.AmbienteSetImagemCapa;
                case "AmbienteUpdateOneById":
                    return TokensEnum.AmbienteUpdateOneById;
                case "AmbienteView":
                    return TokensEnum.AmbienteView;
                case "Arquivo":
                    return TokensEnum.Arquivo;
                case "ArquivoFindOneInputView":
                    return TokensEnum.ArquivoFindOneInputView;
                case "ArquivoFindOneResultView":
                    return TokensEnum.ArquivoFindOneResultView;
                case "ArquivoGetFile":
                    return TokensEnum.ArquivoGetFile;
                case "ArquivoView":
                    return TokensEnum.ArquivoView;
                case "Aula":
                    return TokensEnum.Aula;
                case "AulaCreate":
                    return TokensEnum.AulaCreate;
                case "AulaDeleteOneById":
                    return TokensEnum.AulaDeleteOneById;
                case "AulaFindOneById":
                    return TokensEnum.AulaFindOneById;
                case "AulaFindOneInputView":
                    return TokensEnum.AulaFindOneInputView;
                case "AulaFindOneResultView":
                    return TokensEnum.AulaFindOneResultView;
                case "AulaInputCreateView":
                    return TokensEnum.AulaInputCreateView;
                case "AulaInputUpdateView":
                    return TokensEnum.AulaInputUpdateView;
                case "AulaList":
                    return TokensEnum.AulaList;
                case "AulaListResultView":
                    return TokensEnum.AulaListResultView;
                case "AulaUpdateOneById":
                    return TokensEnum.AulaUpdateOneById;
                case "AulaView":
                    return TokensEnum.AulaView;
                case "AuthLogin":
                    return TokensEnum.AuthLogin;
                case "AuthLoginInputView":
                    return TokensEnum.AuthLoginInputView;
                case "AuthRefresh":
                    return TokensEnum.AuthRefresh;
                case "AuthRefreshInputView":
                    return TokensEnum.AuthRefreshInputView;
                case "AuthSessionCredentialsView":
                    return TokensEnum.AuthSessionCredentialsView;
                case "AuthSetInitialPassword":
                    return TokensEnum.AuthSetInitialPassword;
                case "AuthSetInitialPasswordInputView":
                    return TokensEnum.AuthSetInitialPasswordInputView;
                case "AuthWhoAmI":
                    return TokensEnum.AuthWhoAmI;
                case "AuthWhoAmIInputView":
                    return TokensEnum.AuthWhoAmIInputView;
                case "Bloco":
                    return TokensEnum.Bloco;
                case "BlocoCreate":
                    return TokensEnum.BlocoCreate;
                case "BlocoDeleteOneById":
                    return TokensEnum.BlocoDeleteOneById;
                case "BlocoFindOneById":
                    return TokensEnum.BlocoFindOneById;
                case "BlocoFindOneInputView":
                    return TokensEnum.BlocoFindOneInputView;
                case "BlocoFindOneResultView":
                    return TokensEnum.BlocoFindOneResultView;
                case "BlocoGetImagemCapa":
                    return TokensEnum.BlocoGetImagemCapa;
                case "BlocoInputCreateView":
                    return TokensEnum.BlocoInputCreateView;
                case "BlocoInputUpdateView":
                    return TokensEnum.BlocoInputUpdateView;
                case "BlocoList":
                    return TokensEnum.BlocoList;
                case "BlocoListResultView":
                    return TokensEnum.BlocoListResultView;
                case "BlocoSetImagemCapa":
                    return TokensEnum.BlocoSetImagemCapa;
                case "BlocoUpdateOneById":
                    return TokensEnum.BlocoUpdateOneById;
                case "BlocoView":
                    return TokensEnum.BlocoView;
                case "CalendarioLetivo":
                    return TokensEnum.CalendarioLetivo;
                case "CalendarioLetivoCreate":
                    return TokensEnum.CalendarioLetivoCreate;
                case "CalendarioLetivoDeleteOneById":
                    return TokensEnum.CalendarioLetivoDeleteOneById;
                case "CalendarioLetivoFindOneById":
                    return TokensEnum.CalendarioLetivoFindOneById;
                case "CalendarioLetivoFindOneInputView":
                    return TokensEnum.CalendarioLetivoFindOneInputView;
                case "CalendarioLetivoFindOneResultView":
                    return TokensEnum.CalendarioLetivoFindOneResultView;
                case "CalendarioLetivoInputCreateView":
                    return TokensEnum.CalendarioLetivoInputCreateView;
                case "CalendarioLetivoInputUpdateView":
                    return TokensEnum.CalendarioLetivoInputUpdateView;
                case "CalendarioLetivoList":
                    return TokensEnum.CalendarioLetivoList;
                case "CalendarioLetivoListResultView":
                    return TokensEnum.CalendarioLetivoListResultView;
                case "CalendarioLetivoUpdateOneById":
                    return TokensEnum.CalendarioLetivoUpdateOneById;
                case "CalendarioLetivoView":
                    return TokensEnum.CalendarioLetivoView;
                case "Campus":
                    return TokensEnum.Campus;
                case "CampusCreate":
                    return TokensEnum.CampusCreate;
                case "CampusDeleteOneById":
                    return TokensEnum.CampusDeleteOneById;
                case "CampusFindOneById":
                    return TokensEnum.CampusFindOneById;
                case "CampusFindOneInputView":
                    return TokensEnum.CampusFindOneInputView;
                case "CampusFindOneResultView":
                    return TokensEnum.CampusFindOneResultView;
                case "CampusInputCreateView":
                    return TokensEnum.CampusInputCreateView;
                case "CampusInputUpdateView":
                    return TokensEnum.CampusInputUpdateView;
                case "CampusList":
                    return TokensEnum.CampusList;
                case "CampusListResultView":
                    return TokensEnum.CampusListResultView;
                case "CampusUpdateOneById":
                    return TokensEnum.CampusUpdateOneById;
                case "CampusView":
                    return TokensEnum.CampusView;
                case "Cidade":
                    return TokensEnum.Cidade;
                case "CidadeFindOneById":
                    return TokensEnum.CidadeFindOneById;
                case "CidadeFindOneInputView":
                    return TokensEnum.CidadeFindOneInputView;
                case "CidadeFindOneResultView":
                    return TokensEnum.CidadeFindOneResultView;
                case "CidadeList":
                    return TokensEnum.CidadeList;
                case "CidadeListResultView":
                    return TokensEnum.CidadeListResultView;
                case "CidadeView":
                    return TokensEnum.CidadeView;
                case "Curso":
                    return TokensEnum.Curso;
                case "CursoCreate":
                    return TokensEnum.CursoCreate;
                case "CursoDeleteOneById":
                    return TokensEnum.CursoDeleteOneById;
                case "CursoFindOneById":
                    return TokensEnum.CursoFindOneById;
                case "CursoFindOneInputView":
                    return TokensEnum.CursoFindOneInputView;
                case "CursoFindOneResultView":
                    return TokensEnum.CursoFindOneResultView;
                case "CursoGetImagemCapa":
                    return TokensEnum.CursoGetImagemCapa;
                case "CursoInputCreateView":
                    return TokensEnum.CursoInputCreateView;
                case "CursoInputUpdateView":
                    return TokensEnum.CursoInputUpdateView;
                case "CursoList":
                    return TokensEnum.CursoList;
                case "CursoListResultView":
                    return TokensEnum.CursoListResultView;
                case "CursoSetImagemCapa":
                    return TokensEnum.CursoSetImagemCapa;
                case "CursoUpdateOneById":
                    return TokensEnum.CursoUpdateOneById;
                case "CursoView":
                    return TokensEnum.CursoView;
                case "DiaCalendario":
                    return TokensEnum.DiaCalendario;
                case "DiaCalendarioCreate":
                    return TokensEnum.DiaCalendarioCreate;
                case "DiaCalendarioDeleteOneById":
                    return TokensEnum.DiaCalendarioDeleteOneById;
                case "DiaCalendarioFindOneById":
                    return TokensEnum.DiaCalendarioFindOneById;
                case "DiaCalendarioFindOneInputView":
                    return TokensEnum.DiaCalendarioFindOneInputView;
                case "DiaCalendarioFindOneResultView":
                    return TokensEnum.DiaCalendarioFindOneResultView;
                case "DiaCalendarioInputCreateView":
                    return TokensEnum.DiaCalendarioInputCreateView;
                case "DiaCalendarioInputUpdateView":
                    return TokensEnum.DiaCalendarioInputUpdateView;
                case "DiaCalendarioList":
                    return TokensEnum.DiaCalendarioList;
                case "DiaCalendarioListResultView":
                    return TokensEnum.DiaCalendarioListResultView;
                case "DiaCalendarioUpdateOneById":
                    return TokensEnum.DiaCalendarioUpdateOneById;
                case "DiaCalendarioView":
                    return TokensEnum.DiaCalendarioView;
                case "Diario":
                    return TokensEnum.Diario;
                case "DiarioCreate":
                    return TokensEnum.DiarioCreate;
                case "DiarioDeleteOneById":
                    return TokensEnum.DiarioDeleteOneById;
                case "DiarioFindOneById":
                    return TokensEnum.DiarioFindOneById;
                case "DiarioFindOneInputView":
                    return TokensEnum.DiarioFindOneInputView;
                case "DiarioFindOneResultView":
                    return TokensEnum.DiarioFindOneResultView;
                case "DiarioGetImagemCapa":
                    return TokensEnum.DiarioGetImagemCapa;
                case "DiarioInputCreateView":
                    return TokensEnum.DiarioInputCreateView;
                case "DiarioInputUpdateView":
                    return TokensEnum.DiarioInputUpdateView;
                case "DiarioList":
                    return TokensEnum.DiarioList;
                case "DiarioListResultView":
                    return TokensEnum.DiarioListResultView;
                case "DiarioPreferenciaAgrupamento":
                    return TokensEnum.DiarioPreferenciaAgrupamento;
                case "DiarioPreferenciaAgrupamentoCreate":
                    return TokensEnum.DiarioPreferenciaAgrupamentoCreate;
                case "DiarioPreferenciaAgrupamentoDeleteOneById":
                    return TokensEnum.DiarioPreferenciaAgrupamentoDeleteOneById;
                case "DiarioPreferenciaAgrupamentoFindOneById":
                    return TokensEnum.DiarioPreferenciaAgrupamentoFindOneById;
                case "DiarioPreferenciaAgrupamentoFindOneInputView":
                    return TokensEnum.DiarioPreferenciaAgrupamentoFindOneInputView;
                case "DiarioPreferenciaAgrupamentoFindOneResultView":
                    return TokensEnum.DiarioPreferenciaAgrupamentoFindOneResultView;
                case "DiarioPreferenciaAgrupamentoInputCreateView":
                    return TokensEnum.DiarioPreferenciaAgrupamentoInputCreateView;
                case "DiarioPreferenciaAgrupamentoInputUpdateView":
                    return TokensEnum.DiarioPreferenciaAgrupamentoInputUpdateView;
                case "DiarioPreferenciaAgrupamentoList":
                    return TokensEnum.DiarioPreferenciaAgrupamentoList;
                case "DiarioPreferenciaAgrupamentoListResultView":
                    return TokensEnum.DiarioPreferenciaAgrupamentoListResultView;
                case "DiarioPreferenciaAgrupamentoUpdateOneById":
                    return TokensEnum.DiarioPreferenciaAgrupamentoUpdateOneById;
                case "DiarioPreferenciaAgrupamentoView":
                    return TokensEnum.DiarioPreferenciaAgrupamentoView;
                case "DiarioProfessor":
                    return TokensEnum.DiarioProfessor;
                case "DiarioProfessorCreate":
                    return TokensEnum.DiarioProfessorCreate;
                case "DiarioProfessorDeleteOneById":
                    return TokensEnum.DiarioProfessorDeleteOneById;
                case "DiarioProfessorFindOneById":
                    return TokensEnum.DiarioProfessorFindOneById;
                case "DiarioProfessorFindOneInputView":
                    return TokensEnum.DiarioProfessorFindOneInputView;
                case "DiarioProfessorFindOneResultView":
                    return TokensEnum.DiarioProfessorFindOneResultView;
                case "DiarioProfessorInputCreateView":
                    return TokensEnum.DiarioProfessorInputCreateView;
                case "DiarioProfessorInputUpdateView":
                    return TokensEnum.DiarioProfessorInputUpdateView;
                case "DiarioProfessorList":
                    return TokensEnum.DiarioProfessorList;
                case "DiarioProfessorListResultView":
                    return TokensEnum.DiarioProfessorListResultView;
                case "DiarioProfessorUpdateOneById":
                    return TokensEnum.DiarioProfessorUpdateOneById;
                case "DiarioProfessorView":
                    return TokensEnum.DiarioProfessorView;
                case "DiarioSetImagemCapa":
                    return TokensEnum.DiarioSetImagemCapa;
                case "DiarioUpdateOneById":
                    return TokensEnum.DiarioUpdateOneById;
                case "DiarioView":
                    return TokensEnum.DiarioView;
                case "Disciplina":
                    return TokensEnum.Disciplina;
                case "DisciplinaCreate":
                    return TokensEnum.DisciplinaCreate;
                case "DisciplinaDeleteOneById":
                    return TokensEnum.DisciplinaDeleteOneById;
                case "DisciplinaFindOneById":
                    return TokensEnum.DisciplinaFindOneById;
                case "DisciplinaFindOneInputView":
                    return TokensEnum.DisciplinaFindOneInputView;
                case "DisciplinaFindOneResultView":
                    return TokensEnum.DisciplinaFindOneResultView;
                case "DisciplinaGetImagemCapa":
                    return TokensEnum.DisciplinaGetImagemCapa;
                case "DisciplinaInputCreateView":
                    return TokensEnum.DisciplinaInputCreateView;
                case "DisciplinaInputUpdateView":
                    return TokensEnum.DisciplinaInputUpdateView;
                case "DisciplinaList":
                    return TokensEnum.DisciplinaList;
                case "DisciplinaListResultView":
                    return TokensEnum.DisciplinaListResultView;
                case "DisciplinaSetImagemCapa":
                    return TokensEnum.DisciplinaSetImagemCapa;
                case "DisciplinaUpdateOneById":
                    return TokensEnum.DisciplinaUpdateOneById;
                case "DisciplinaView":
                    return TokensEnum.DisciplinaView;
                case "Disponibilidade":
                    return TokensEnum.Disponibilidade;
                case "DisponibilidadeCreate":
                    return TokensEnum.DisponibilidadeCreate;
                case "DisponibilidadeDeleteOneById":
                    return TokensEnum.DisponibilidadeDeleteOneById;
                case "DisponibilidadeDia":
                    return TokensEnum.DisponibilidadeDia;
                case "DisponibilidadeDiaCreate":
                    return TokensEnum.DisponibilidadeDiaCreate;
                case "DisponibilidadeDiaDeleteOneById":
                    return TokensEnum.DisponibilidadeDiaDeleteOneById;
                case "DisponibilidadeDiaFindOneById":
                    return TokensEnum.DisponibilidadeDiaFindOneById;
                case "DisponibilidadeDiaFindOneInputView":
                    return TokensEnum.DisponibilidadeDiaFindOneInputView;
                case "DisponibilidadeDiaFindOneResultView":
                    return TokensEnum.DisponibilidadeDiaFindOneResultView;
                case "DisponibilidadeDiaInputCreateView":
                    return TokensEnum.DisponibilidadeDiaInputCreateView;
                case "DisponibilidadeDiaInputUpdateView":
                    return TokensEnum.DisponibilidadeDiaInputUpdateView;
                case "DisponibilidadeDiaList":
                    return TokensEnum.DisponibilidadeDiaList;
                case "DisponibilidadeDiaListResultView":
                    return TokensEnum.DisponibilidadeDiaListResultView;
                case "DisponibilidadeDiaUpdateOneById":
                    return TokensEnum.DisponibilidadeDiaUpdateOneById;
                case "DisponibilidadeDiaView":
                    return TokensEnum.DisponibilidadeDiaView;
                case "DisponibilidadeFindOneById":
                    return TokensEnum.DisponibilidadeFindOneById;
                case "DisponibilidadeFindOneInputView":
                    return TokensEnum.DisponibilidadeFindOneInputView;
                case "DisponibilidadeFindOneResultView":
                    return TokensEnum.DisponibilidadeFindOneResultView;
                case "DisponibilidadeInputCreateView":
                    return TokensEnum.DisponibilidadeInputCreateView;
                case "DisponibilidadeInputUpdateView":
                    return TokensEnum.DisponibilidadeInputUpdateView;
                case "DisponibilidadeList":
                    return TokensEnum.DisponibilidadeList;
                case "DisponibilidadeListResultView":
                    return TokensEnum.DisponibilidadeListResultView;
                case "DisponibilidadeUpdateOneById":
                    return TokensEnum.DisponibilidadeUpdateOneById;
                case "DisponibilidadeView":
                    return TokensEnum.DisponibilidadeView;
                case "Endereco":
                    return TokensEnum.Endereco;
                case "EnderecoFindOneById":
                    return TokensEnum.EnderecoFindOneById;
                case "EnderecoFindOneInputView":
                    return TokensEnum.EnderecoFindOneInputView;
                case "EnderecoFindOneResultView":
                    return TokensEnum.EnderecoFindOneResultView;
                case "EnderecoInputView":
                    return TokensEnum.EnderecoInputView;
                case "EnderecoView":
                    return TokensEnum.EnderecoView;
                case "Estado":
                    return TokensEnum.Estado;
                case "EstadoFindOneById":
                    return TokensEnum.EstadoFindOneById;
                case "EstadoFindOneInputView":
                    return TokensEnum.EstadoFindOneInputView;
                case "EstadoFindOneResultView":
                    return TokensEnum.EstadoFindOneResultView;
                case "EstadoList":
                    return TokensEnum.EstadoList;
                case "EstadoListResultView":
                    return TokensEnum.EstadoListResultView;
                case "EstadoView":
                    return TokensEnum.EstadoView;
                case "Etapa":
                    return TokensEnum.Etapa;
                case "EtapaCreate":
                    return TokensEnum.EtapaCreate;
                case "EtapaDeleteOneById":
                    return TokensEnum.EtapaDeleteOneById;
                case "EtapaFindOneById":
                    return TokensEnum.EtapaFindOneById;
                case "EtapaFindOneInputView":
                    return TokensEnum.EtapaFindOneInputView;
                case "EtapaFindOneResultView":
                    return TokensEnum.EtapaFindOneResultView;
                case "EtapaInputCreateView":
                    return TokensEnum.EtapaInputCreateView;
                case "EtapaInputUpdateView":
                    return TokensEnum.EtapaInputUpdateView;
                case "EtapaList":
                    return TokensEnum.EtapaList;
                case "EtapaListResultView":
                    return TokensEnum.EtapaListResultView;
                case "EtapaUpdateOneById":
                    return TokensEnum.EtapaUpdateOneById;
                case "EtapaView":
                    return TokensEnum.EtapaView;
                case "Evento":
                    return TokensEnum.Evento;
                case "EventoCreate":
                    return TokensEnum.EventoCreate;
                case "EventoDeleteOneById":
                    return TokensEnum.EventoDeleteOneById;
                case "EventoFindOneById":
                    return TokensEnum.EventoFindOneById;
                case "EventoFindOneInputView":
                    return TokensEnum.EventoFindOneInputView;
                case "EventoFindOneResultView":
                    return TokensEnum.EventoFindOneResultView;
                case "EventoInputCreateView":
                    return TokensEnum.EventoInputCreateView;
                case "EventoInputUpdateView":
                    return TokensEnum.EventoInputUpdateView;
                case "EventoList":
                    return TokensEnum.EventoList;
                case "EventoListResultView":
                    return TokensEnum.EventoListResultView;
                case "EventoUpdateOneById":
                    return TokensEnum.EventoUpdateOneById;
                case "EventoView":
                    return TokensEnum.EventoView;
                case "GetImagem":
                    return TokensEnum.GetImagem;
                case "GradeHorarioOfertaFormacao":
                    return TokensEnum.GradeHorarioOfertaFormacao;
                case "GradeHorarioOfertaFormacaoCreate":
                    return TokensEnum.GradeHorarioOfertaFormacaoCreate;
                case "GradeHorarioOfertaFormacaoDeleteOneById":
                    return TokensEnum.GradeHorarioOfertaFormacaoDeleteOneById;
                case "GradeHorarioOfertaFormacaoFindOneById":
                    return TokensEnum.GradeHorarioOfertaFormacaoFindOneById;
                case "GradeHorarioOfertaFormacaoFindOneInputView":
                    return TokensEnum.GradeHorarioOfertaFormacaoFindOneInputView;
                case "GradeHorarioOfertaFormacaoFindOneResultView":
                    return TokensEnum.GradeHorarioOfertaFormacaoFindOneResultView;
                case "GradeHorarioOfertaFormacaoInputCreateView":
                    return TokensEnum.GradeHorarioOfertaFormacaoInputCreateView;
                case "GradeHorarioOfertaFormacaoInputUpdateView":
                    return TokensEnum.GradeHorarioOfertaFormacaoInputUpdateView;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempo":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempo;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoCreate":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoCreate;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneById":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneById;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneById":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneById;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoList":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoList;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneById":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneById;
                case "GradeHorarioOfertaFormacaoIntervaloDeTempoView":
                    return TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoView;
                case "GradeHorarioOfertaFormacaoList":
                    return TokensEnum.GradeHorarioOfertaFormacaoList;
                case "GradeHorarioOfertaFormacaoListResultView":
                    return TokensEnum.GradeHorarioOfertaFormacaoListResultView;
                case "GradeHorarioOfertaFormacaoUpdateOneById":
                    return TokensEnum.GradeHorarioOfertaFormacaoUpdateOneById;
                case "GradeHorarioOfertaFormacaoView":
                    return TokensEnum.GradeHorarioOfertaFormacaoView;
                case "HorarioGerado":
                    return TokensEnum.HorarioGerado;
                case "HorarioGeradoAula":
                    return TokensEnum.HorarioGeradoAula;
                case "HorarioGeradoAulaCreate":
                    return TokensEnum.HorarioGeradoAulaCreate;
                case "HorarioGeradoAulaDeleteOneById":
                    return TokensEnum.HorarioGeradoAulaDeleteOneById;
                case "HorarioGeradoAulaFindOneById":
                    return TokensEnum.HorarioGeradoAulaFindOneById;
                case "HorarioGeradoAulaFindOneInputView":
                    return TokensEnum.HorarioGeradoAulaFindOneInputView;
                case "HorarioGeradoAulaFindOneResultView":
                    return TokensEnum.HorarioGeradoAulaFindOneResultView;
                case "HorarioGeradoAulaInputCreateView":
                    return TokensEnum.HorarioGeradoAulaInputCreateView;
                case "HorarioGeradoAulaInputUpdateView":
                    return TokensEnum.HorarioGeradoAulaInputUpdateView;
                case "HorarioGeradoAulaList":
                    return TokensEnum.HorarioGeradoAulaList;
                case "HorarioGeradoAulaListResultView":
                    return TokensEnum.HorarioGeradoAulaListResultView;
                case "HorarioGeradoAulaUpdateOneById":
                    return TokensEnum.HorarioGeradoAulaUpdateOneById;
                case "HorarioGeradoAulaView":
                    return TokensEnum.HorarioGeradoAulaView;
                case "HorarioGeradoCreate":
                    return TokensEnum.HorarioGeradoCreate;
                case "HorarioGeradoDeleteOneById":
                    return TokensEnum.HorarioGeradoDeleteOneById;
                case "HorarioGeradoFindOneById":
                    return TokensEnum.HorarioGeradoFindOneById;
                case "HorarioGeradoFindOneInputView":
                    return TokensEnum.HorarioGeradoFindOneInputView;
                case "HorarioGeradoFindOneResultView":
                    return TokensEnum.HorarioGeradoFindOneResultView;
                case "HorarioGeradoInputCreateView":
                    return TokensEnum.HorarioGeradoInputCreateView;
                case "HorarioGeradoInputUpdateView":
                    return TokensEnum.HorarioGeradoInputUpdateView;
                case "HorarioGeradoList":
                    return TokensEnum.HorarioGeradoList;
                case "HorarioGeradoListResultView":
                    return TokensEnum.HorarioGeradoListResultView;
                case "HorarioGeradoUpdateOneById":
                    return TokensEnum.HorarioGeradoUpdateOneById;
                case "HorarioGeradoView":
                    return TokensEnum.HorarioGeradoView;
                case "ImageFindOneFromImagemArquivoResultView":
                    return TokensEnum.ImageFindOneFromImagemArquivoResultView;
                case "Imagem":
                    return TokensEnum.Imagem;
                case "ImagemArquivo":
                    return TokensEnum.ImagemArquivo;
                case "ImagemArquivoFindOneFromImagemResultView":
                    return TokensEnum.ImagemArquivoFindOneFromImagemResultView;
                case "ImagemArquivoFindOneInputView":
                    return TokensEnum.ImagemArquivoFindOneInputView;
                case "ImagemArquivoFindOneResultView":
                    return TokensEnum.ImagemArquivoFindOneResultView;
                case "ImagemArquivoView":
                    return TokensEnum.ImagemArquivoView;
                case "ImagemFindOneInputView":
                    return TokensEnum.ImagemFindOneInputView;
                case "ImagemFindOneResultView":
                    return TokensEnum.ImagemFindOneResultView;
                case "ImagemView":
                    return TokensEnum.ImagemView;
                case "IntervaloDeTempo":
                    return TokensEnum.IntervaloDeTempo;
                case "IntervaloDeTempoFindOneResultView":
                    return TokensEnum.IntervaloDeTempoFindOneResultView;
                case "IntervaloDeTempoInputView":
                    return TokensEnum.IntervaloDeTempoInputView;
                case "IntervaloDeTempoView":
                    return TokensEnum.IntervaloDeTempoView;
                case "Modalidade":
                    return TokensEnum.Modalidade;
                case "ModalidadeCreate":
                    return TokensEnum.ModalidadeCreate;
                case "ModalidadeDeleteOneById":
                    return TokensEnum.ModalidadeDeleteOneById;
                case "ModalidadeFindOneById":
                    return TokensEnum.ModalidadeFindOneById;
                case "ModalidadeFindOneInputView":
                    return TokensEnum.ModalidadeFindOneInputView;
                case "ModalidadeFindOneResultView":
                    return TokensEnum.ModalidadeFindOneResultView;
                case "ModalidadeInputCreateView":
                    return TokensEnum.ModalidadeInputCreateView;
                case "ModalidadeInputUpdateView":
                    return TokensEnum.ModalidadeInputUpdateView;
                case "ModalidadeList":
                    return TokensEnum.ModalidadeList;
                case "ModalidadeListResultView":
                    return TokensEnum.ModalidadeListResultView;
                case "ModalidadeUpdateOneById":
                    return TokensEnum.ModalidadeUpdateOneById;
                case "ModalidadeView":
                    return TokensEnum.ModalidadeView;
                case "NivelDeFormacao":
                    return TokensEnum.NivelDeFormacao;
                case "NivelDeFormacaoCreate":
                    return TokensEnum.NivelDeFormacaoCreate;
                case "NivelDeFormacaoDeleteOneById":
                    return TokensEnum.NivelDeFormacaoDeleteOneById;
                case "NivelDeFormacaoFindOneById":
                    return TokensEnum.NivelDeFormacaoFindOneById;
                case "NivelDeFormacaoFindOneInputView":
                    return TokensEnum.NivelDeFormacaoFindOneInputView;
                case "NivelDeFormacaoFindOneResultView":
                    return TokensEnum.NivelDeFormacaoFindOneResultView;
                case "NivelDeFormacaoInputCreateView":
                    return TokensEnum.NivelDeFormacaoInputCreateView;
                case "NivelDeFormacaoInputUpdateView":
                    return TokensEnum.NivelDeFormacaoInputUpdateView;
                case "NivelDeFormacaoList":
                    return TokensEnum.NivelDeFormacaoList;
                case "NivelDeFormacaoListResultView":
                    return TokensEnum.NivelDeFormacaoListResultView;
                case "NivelDeFormacaoUpdateOneById":
                    return TokensEnum.NivelDeFormacaoUpdateOneById;
                case "NivelDeFormacaoView":
                    return TokensEnum.NivelDeFormacaoView;
                case "OfertaFormacao":
                    return TokensEnum.OfertaFormacao;
                case "OfertaFormacaoCreate":
                    return TokensEnum.OfertaFormacaoCreate;
                case "OfertaFormacaoDeleteOneById":
                    return TokensEnum.OfertaFormacaoDeleteOneById;
                case "OfertaFormacaoFindOneById":
                    return TokensEnum.OfertaFormacaoFindOneById;
                case "OfertaFormacaoFindOneInputView":
                    return TokensEnum.OfertaFormacaoFindOneInputView;
                case "OfertaFormacaoFindOneResultView":
                    return TokensEnum.OfertaFormacaoFindOneResultView;
                case "OfertaFormacaoInputCreateView":
                    return TokensEnum.OfertaFormacaoInputCreateView;
                case "OfertaFormacaoInputUpdateView":
                    return TokensEnum.OfertaFormacaoInputUpdateView;
                case "OfertaFormacaoList":
                    return TokensEnum.OfertaFormacaoList;
                case "OfertaFormacaoListResultView":
                    return TokensEnum.OfertaFormacaoListResultView;
                case "OfertaFormacaoNivelFormacao":
                    return TokensEnum.OfertaFormacaoNivelFormacao;
                case "OfertaFormacaoNivelFormacaoCreate":
                    return TokensEnum.OfertaFormacaoNivelFormacaoCreate;
                case "OfertaFormacaoNivelFormacaoDeleteOneById":
                    return TokensEnum.OfertaFormacaoNivelFormacaoDeleteOneById;
                case "OfertaFormacaoNivelFormacaoFindOneById":
                    return TokensEnum.OfertaFormacaoNivelFormacaoFindOneById;
                case "OfertaFormacaoNivelFormacaoFindOneInputView":
                    return TokensEnum.OfertaFormacaoNivelFormacaoFindOneInputView;
                case "OfertaFormacaoNivelFormacaoFindOneResultView":
                    return TokensEnum.OfertaFormacaoNivelFormacaoFindOneResultView;
                case "OfertaFormacaoNivelFormacaoInputCreateView":
                    return TokensEnum.OfertaFormacaoNivelFormacaoInputCreateView;
                case "OfertaFormacaoNivelFormacaoInputUpdateView":
                    return TokensEnum.OfertaFormacaoNivelFormacaoInputUpdateView;
                case "OfertaFormacaoNivelFormacaoList":
                    return TokensEnum.OfertaFormacaoNivelFormacaoList;
                case "OfertaFormacaoNivelFormacaoListResultView":
                    return TokensEnum.OfertaFormacaoNivelFormacaoListResultView;
                case "OfertaFormacaoNivelFormacaoUpdateOneById":
                    return TokensEnum.OfertaFormacaoNivelFormacaoUpdateOneById;
                case "OfertaFormacaoNivelFormacaoView":
                    return TokensEnum.OfertaFormacaoNivelFormacaoView;
                case "OfertaFormacaoUpdateOneById":
                    return TokensEnum.OfertaFormacaoUpdateOneById;
                case "OfertaFormacaoView":
                    return TokensEnum.OfertaFormacaoView;
                case "PaginatedFilterView":
                    return TokensEnum.PaginatedFilterView;
                case "PaginatedInputBaseView":
                    return TokensEnum.PaginatedInputBaseView;
                case "PaginatedInputView":
                    return TokensEnum.PaginatedInputView;
                case "PaginatedResultLinksView":
                    return TokensEnum.PaginatedResultLinksView;
                case "PaginatedResultMetaView":
                    return TokensEnum.PaginatedResultMetaView;
                case "PaginatedResultView":
                    return TokensEnum.PaginatedResultView;
                case "PaginatedSortByView":
                    return TokensEnum.PaginatedSortByView;
                case "Perfil":
                    return TokensEnum.Perfil;
                case "PerfilCreate":
                    return TokensEnum.PerfilCreate;
                case "PerfilDeleteOneById":
                    return TokensEnum.PerfilDeleteOneById;
                case "PerfilFindOneById":
                    return TokensEnum.PerfilFindOneById;
                case "PerfilFindOneInputView":
                    return TokensEnum.PerfilFindOneInputView;
                case "PerfilFindOneResultView":
                    return TokensEnum.PerfilFindOneResultView;
                case "PerfilInputCreateView":
                    return TokensEnum.PerfilInputCreateView;
                case "PerfilInputUpdateView":
                    return TokensEnum.PerfilInputUpdateView;
                case "PerfilList":
                    return TokensEnum.PerfilList;
                case "PerfilListResultView":
                    return TokensEnum.PerfilListResultView;
                case "PerfilUpdateOneById":
                    return TokensEnum.PerfilUpdateOneById;
                case "PerfilView":
                    return TokensEnum.PerfilView;
                case "ProfessorDisponibilidade":
                    return TokensEnum.ProfessorDisponibilidade;
                case "ProfessorDisponibilidadeCreate":
                    return TokensEnum.ProfessorDisponibilidadeCreate;
                case "ProfessorDisponibilidadeDeleteOneById":
                    return TokensEnum.ProfessorDisponibilidadeDeleteOneById;
                case "ProfessorDisponibilidadeFindOneById":
                    return TokensEnum.ProfessorDisponibilidadeFindOneById;
                case "ProfessorDisponibilidadeFindOneInputView":
                    return TokensEnum.ProfessorDisponibilidadeFindOneInputView;
                case "ProfessorDisponibilidadeFindOneResultView":
                    return TokensEnum.ProfessorDisponibilidadeFindOneResultView;
                case "ProfessorDisponibilidadeInputCreateView":
                    return TokensEnum.ProfessorDisponibilidadeInputCreateView;
                case "ProfessorDisponibilidadeInputUpdateView":
                    return TokensEnum.ProfessorDisponibilidadeInputUpdateView;
                case "ProfessorDisponibilidadeList":
                    return TokensEnum.ProfessorDisponibilidadeList;
                case "ProfessorDisponibilidadeListResultView":
                    return TokensEnum.ProfessorDisponibilidadeListResultView;
                case "ProfessorDisponibilidadeUpdateOneById":
                    return TokensEnum.ProfessorDisponibilidadeUpdateOneById;
                case "ProfessorDisponibilidadeView":
                    return TokensEnum.ProfessorDisponibilidadeView;
                case "Reserva":
                    return TokensEnum.Reserva;
                case "ReservaCreate":
                    return TokensEnum.ReservaCreate;
                case "ReservaDeleteOneById":
                    return TokensEnum.ReservaDeleteOneById;
                case "ReservaFindOneById":
                    return TokensEnum.ReservaFindOneById;
                case "ReservaFindOneInputView":
                    return TokensEnum.ReservaFindOneInputView;
                case "ReservaFindOneResultView":
                    return TokensEnum.ReservaFindOneResultView;
                case "ReservaInputCreateView":
                    return TokensEnum.ReservaInputCreateView;
                case "ReservaInputUpdateView":
                    return TokensEnum.ReservaInputUpdateView;
                case "ReservaList":
                    return TokensEnum.ReservaList;
                case "ReservaListResultView":
                    return TokensEnum.ReservaListResultView;
                case "ReservaUpdateOneById":
                    return TokensEnum.ReservaUpdateOneById;
                case "ReservaView":
                    return TokensEnum.ReservaView;
                case "SearchInputView":
                    return TokensEnum.SearchInputView;
                case "SetImagem":
                    return TokensEnum.SetImagem;
                case "Turma":
                    return TokensEnum.Turma;
                case "TurmaCreate":
                    return TokensEnum.TurmaCreate;
                case "TurmaDeleteOneById":
                    return TokensEnum.TurmaDeleteOneById;
                case "TurmaDisponibilidade":
                    return TokensEnum.TurmaDisponibilidade;
                case "TurmaDisponibilidadeCreate":
                    return TokensEnum.TurmaDisponibilidadeCreate;
                case "TurmaDisponibilidadeDeleteOneById":
                    return TokensEnum.TurmaDisponibilidadeDeleteOneById;
                case "TurmaDisponibilidadeFindOneById":
                    return TokensEnum.TurmaDisponibilidadeFindOneById;
                case "TurmaDisponibilidadeFindOneInputView":
                    return TokensEnum.TurmaDisponibilidadeFindOneInputView;
                case "TurmaDisponibilidadeFindOneResultView":
                    return TokensEnum.TurmaDisponibilidadeFindOneResultView;
                case "TurmaDisponibilidadeInputCreateView":
                    return TokensEnum.TurmaDisponibilidadeInputCreateView;
                case "TurmaDisponibilidadeInputUpdateView":
                    return TokensEnum.TurmaDisponibilidadeInputUpdateView;
                case "TurmaDisponibilidadeList":
                    return TokensEnum.TurmaDisponibilidadeList;
                case "TurmaDisponibilidadeListResultView":
                    return TokensEnum.TurmaDisponibilidadeListResultView;
                case "TurmaDisponibilidadeUpdateOneById":
                    return TokensEnum.TurmaDisponibilidadeUpdateOneById;
                case "TurmaDisponibilidadeView":
                    return TokensEnum.TurmaDisponibilidadeView;
                case "TurmaFindOneById":
                    return TokensEnum.TurmaFindOneById;
                case "TurmaFindOneInputView":
                    return TokensEnum.TurmaFindOneInputView;
                case "TurmaFindOneResultView":
                    return TokensEnum.TurmaFindOneResultView;
                case "TurmaGetImagemCapa":
                    return TokensEnum.TurmaGetImagemCapa;
                case "TurmaInputCreateView":
                    return TokensEnum.TurmaInputCreateView;
                case "TurmaInputUpdateView":
                    return TokensEnum.TurmaInputUpdateView;
                case "TurmaList":
                    return TokensEnum.TurmaList;
                case "TurmaListResultView":
                    return TokensEnum.TurmaListResultView;
                case "TurmaSetImagemCapa":
                    return TokensEnum.TurmaSetImagemCapa;
                case "TurmaUpdateOneById":
                    return TokensEnum.TurmaUpdateOneById;
                case "TurmaView":
                    return TokensEnum.TurmaView;
                case "Usuario":
                    return TokensEnum.Usuario;
                case "UsuarioCreate":
                    return TokensEnum.UsuarioCreate;
                case "UsuarioDeleteOneById":
                    return TokensEnum.UsuarioDeleteOneById;
                case "UsuarioFindOneById":
                    return TokensEnum.UsuarioFindOneById;
                case "UsuarioFindOneInputView":
                    return TokensEnum.UsuarioFindOneInputView;
                case "UsuarioFindOneResultView":
                    return TokensEnum.UsuarioFindOneResultView;
                case "UsuarioGetImagemCapa":
                    return TokensEnum.UsuarioGetImagemCapa;
                case "UsuarioGetImagemPerfil":
                    return TokensEnum.UsuarioGetImagemPerfil;
                case "UsuarioInputCreateView":
                    return TokensEnum.UsuarioInputCreateView;
                case "UsuarioInputUpdateView":
                    return TokensEnum.UsuarioInputUpdateView;
                case "UsuarioList":
                    return TokensEnum.UsuarioList;
                case "UsuarioListResultView":
                    return TokensEnum.UsuarioListResultView;
                case "UsuarioSetImagemCapa":
                    return TokensEnum.UsuarioSetImagemCapa;
                case "UsuarioSetImagemPerfil":
                    return TokensEnum.UsuarioSetImagemPerfil;
                case "UsuarioUpdateOneById":
                    return TokensEnum.UsuarioUpdateOneById;
                case "UsuarioView":
                    return TokensEnum.UsuarioView;
            }
            throw new Exception("Cannot unmarshal type TokensEnum");
        }

        public override void Write(Utf8JsonWriter writer, TokensEnum value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case TokensEnum.Ambiente:
                    JsonSerializer.Serialize(writer, "Ambiente", options);
                    return;
                case TokensEnum.AmbienteCreate:
                    JsonSerializer.Serialize(writer, "AmbienteCreate", options);
                    return;
                case TokensEnum.AmbienteDeleteOneById:
                    JsonSerializer.Serialize(writer, "AmbienteDeleteOneById", options);
                    return;
                case TokensEnum.AmbienteFindOneById:
                    JsonSerializer.Serialize(writer, "AmbienteFindOneById", options);
                    return;
                case TokensEnum.AmbienteFindOneInputView:
                    JsonSerializer.Serialize(writer, "AmbienteFindOneInputView", options);
                    return;
                case TokensEnum.AmbienteFindOneResultView:
                    JsonSerializer.Serialize(writer, "AmbienteFindOneResultView", options);
                    return;
                case TokensEnum.AmbienteGetImagemCapa:
                    JsonSerializer.Serialize(writer, "AmbienteGetImagemCapa", options);
                    return;
                case TokensEnum.AmbienteInputCreateView:
                    JsonSerializer.Serialize(writer, "AmbienteInputCreateView", options);
                    return;
                case TokensEnum.AmbienteInputUpdateView:
                    JsonSerializer.Serialize(writer, "AmbienteInputUpdateView", options);
                    return;
                case TokensEnum.AmbienteList:
                    JsonSerializer.Serialize(writer, "AmbienteList", options);
                    return;
                case TokensEnum.AmbienteListResultView:
                    JsonSerializer.Serialize(writer, "AmbienteListResultView", options);
                    return;
                case TokensEnum.AmbienteSetImagemCapa:
                    JsonSerializer.Serialize(writer, "AmbienteSetImagemCapa", options);
                    return;
                case TokensEnum.AmbienteUpdateOneById:
                    JsonSerializer.Serialize(writer, "AmbienteUpdateOneById", options);
                    return;
                case TokensEnum.AmbienteView:
                    JsonSerializer.Serialize(writer, "AmbienteView", options);
                    return;
                case TokensEnum.Arquivo:
                    JsonSerializer.Serialize(writer, "Arquivo", options);
                    return;
                case TokensEnum.ArquivoFindOneInputView:
                    JsonSerializer.Serialize(writer, "ArquivoFindOneInputView", options);
                    return;
                case TokensEnum.ArquivoFindOneResultView:
                    JsonSerializer.Serialize(writer, "ArquivoFindOneResultView", options);
                    return;
                case TokensEnum.ArquivoGetFile:
                    JsonSerializer.Serialize(writer, "ArquivoGetFile", options);
                    return;
                case TokensEnum.ArquivoView:
                    JsonSerializer.Serialize(writer, "ArquivoView", options);
                    return;
                case TokensEnum.Aula:
                    JsonSerializer.Serialize(writer, "Aula", options);
                    return;
                case TokensEnum.AulaCreate:
                    JsonSerializer.Serialize(writer, "AulaCreate", options);
                    return;
                case TokensEnum.AulaDeleteOneById:
                    JsonSerializer.Serialize(writer, "AulaDeleteOneById", options);
                    return;
                case TokensEnum.AulaFindOneById:
                    JsonSerializer.Serialize(writer, "AulaFindOneById", options);
                    return;
                case TokensEnum.AulaFindOneInputView:
                    JsonSerializer.Serialize(writer, "AulaFindOneInputView", options);
                    return;
                case TokensEnum.AulaFindOneResultView:
                    JsonSerializer.Serialize(writer, "AulaFindOneResultView", options);
                    return;
                case TokensEnum.AulaInputCreateView:
                    JsonSerializer.Serialize(writer, "AulaInputCreateView", options);
                    return;
                case TokensEnum.AulaInputUpdateView:
                    JsonSerializer.Serialize(writer, "AulaInputUpdateView", options);
                    return;
                case TokensEnum.AulaList:
                    JsonSerializer.Serialize(writer, "AulaList", options);
                    return;
                case TokensEnum.AulaListResultView:
                    JsonSerializer.Serialize(writer, "AulaListResultView", options);
                    return;
                case TokensEnum.AulaUpdateOneById:
                    JsonSerializer.Serialize(writer, "AulaUpdateOneById", options);
                    return;
                case TokensEnum.AulaView:
                    JsonSerializer.Serialize(writer, "AulaView", options);
                    return;
                case TokensEnum.AuthLogin:
                    JsonSerializer.Serialize(writer, "AuthLogin", options);
                    return;
                case TokensEnum.AuthLoginInputView:
                    JsonSerializer.Serialize(writer, "AuthLoginInputView", options);
                    return;
                case TokensEnum.AuthRefresh:
                    JsonSerializer.Serialize(writer, "AuthRefresh", options);
                    return;
                case TokensEnum.AuthRefreshInputView:
                    JsonSerializer.Serialize(writer, "AuthRefreshInputView", options);
                    return;
                case TokensEnum.AuthSessionCredentialsView:
                    JsonSerializer.Serialize(writer, "AuthSessionCredentialsView", options);
                    return;
                case TokensEnum.AuthSetInitialPassword:
                    JsonSerializer.Serialize(writer, "AuthSetInitialPassword", options);
                    return;
                case TokensEnum.AuthSetInitialPasswordInputView:
                    JsonSerializer.Serialize(writer, "AuthSetInitialPasswordInputView", options);
                    return;
                case TokensEnum.AuthWhoAmI:
                    JsonSerializer.Serialize(writer, "AuthWhoAmI", options);
                    return;
                case TokensEnum.AuthWhoAmIInputView:
                    JsonSerializer.Serialize(writer, "AuthWhoAmIInputView", options);
                    return;
                case TokensEnum.Bloco:
                    JsonSerializer.Serialize(writer, "Bloco", options);
                    return;
                case TokensEnum.BlocoCreate:
                    JsonSerializer.Serialize(writer, "BlocoCreate", options);
                    return;
                case TokensEnum.BlocoDeleteOneById:
                    JsonSerializer.Serialize(writer, "BlocoDeleteOneById", options);
                    return;
                case TokensEnum.BlocoFindOneById:
                    JsonSerializer.Serialize(writer, "BlocoFindOneById", options);
                    return;
                case TokensEnum.BlocoFindOneInputView:
                    JsonSerializer.Serialize(writer, "BlocoFindOneInputView", options);
                    return;
                case TokensEnum.BlocoFindOneResultView:
                    JsonSerializer.Serialize(writer, "BlocoFindOneResultView", options);
                    return;
                case TokensEnum.BlocoGetImagemCapa:
                    JsonSerializer.Serialize(writer, "BlocoGetImagemCapa", options);
                    return;
                case TokensEnum.BlocoInputCreateView:
                    JsonSerializer.Serialize(writer, "BlocoInputCreateView", options);
                    return;
                case TokensEnum.BlocoInputUpdateView:
                    JsonSerializer.Serialize(writer, "BlocoInputUpdateView", options);
                    return;
                case TokensEnum.BlocoList:
                    JsonSerializer.Serialize(writer, "BlocoList", options);
                    return;
                case TokensEnum.BlocoListResultView:
                    JsonSerializer.Serialize(writer, "BlocoListResultView", options);
                    return;
                case TokensEnum.BlocoSetImagemCapa:
                    JsonSerializer.Serialize(writer, "BlocoSetImagemCapa", options);
                    return;
                case TokensEnum.BlocoUpdateOneById:
                    JsonSerializer.Serialize(writer, "BlocoUpdateOneById", options);
                    return;
                case TokensEnum.BlocoView:
                    JsonSerializer.Serialize(writer, "BlocoView", options);
                    return;
                case TokensEnum.CalendarioLetivo:
                    JsonSerializer.Serialize(writer, "CalendarioLetivo", options);
                    return;
                case TokensEnum.CalendarioLetivoCreate:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoCreate", options);
                    return;
                case TokensEnum.CalendarioLetivoDeleteOneById:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoDeleteOneById", options);
                    return;
                case TokensEnum.CalendarioLetivoFindOneById:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoFindOneById", options);
                    return;
                case TokensEnum.CalendarioLetivoFindOneInputView:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoFindOneInputView", options);
                    return;
                case TokensEnum.CalendarioLetivoFindOneResultView:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoFindOneResultView", options);
                    return;
                case TokensEnum.CalendarioLetivoInputCreateView:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoInputCreateView", options);
                    return;
                case TokensEnum.CalendarioLetivoInputUpdateView:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoInputUpdateView", options);
                    return;
                case TokensEnum.CalendarioLetivoList:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoList", options);
                    return;
                case TokensEnum.CalendarioLetivoListResultView:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoListResultView", options);
                    return;
                case TokensEnum.CalendarioLetivoUpdateOneById:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoUpdateOneById", options);
                    return;
                case TokensEnum.CalendarioLetivoView:
                    JsonSerializer.Serialize(writer, "CalendarioLetivoView", options);
                    return;
                case TokensEnum.Campus:
                    JsonSerializer.Serialize(writer, "Campus", options);
                    return;
                case TokensEnum.CampusCreate:
                    JsonSerializer.Serialize(writer, "CampusCreate", options);
                    return;
                case TokensEnum.CampusDeleteOneById:
                    JsonSerializer.Serialize(writer, "CampusDeleteOneById", options);
                    return;
                case TokensEnum.CampusFindOneById:
                    JsonSerializer.Serialize(writer, "CampusFindOneById", options);
                    return;
                case TokensEnum.CampusFindOneInputView:
                    JsonSerializer.Serialize(writer, "CampusFindOneInputView", options);
                    return;
                case TokensEnum.CampusFindOneResultView:
                    JsonSerializer.Serialize(writer, "CampusFindOneResultView", options);
                    return;
                case TokensEnum.CampusInputCreateView:
                    JsonSerializer.Serialize(writer, "CampusInputCreateView", options);
                    return;
                case TokensEnum.CampusInputUpdateView:
                    JsonSerializer.Serialize(writer, "CampusInputUpdateView", options);
                    return;
                case TokensEnum.CampusList:
                    JsonSerializer.Serialize(writer, "CampusList", options);
                    return;
                case TokensEnum.CampusListResultView:
                    JsonSerializer.Serialize(writer, "CampusListResultView", options);
                    return;
                case TokensEnum.CampusUpdateOneById:
                    JsonSerializer.Serialize(writer, "CampusUpdateOneById", options);
                    return;
                case TokensEnum.CampusView:
                    JsonSerializer.Serialize(writer, "CampusView", options);
                    return;
                case TokensEnum.Cidade:
                    JsonSerializer.Serialize(writer, "Cidade", options);
                    return;
                case TokensEnum.CidadeFindOneById:
                    JsonSerializer.Serialize(writer, "CidadeFindOneById", options);
                    return;
                case TokensEnum.CidadeFindOneInputView:
                    JsonSerializer.Serialize(writer, "CidadeFindOneInputView", options);
                    return;
                case TokensEnum.CidadeFindOneResultView:
                    JsonSerializer.Serialize(writer, "CidadeFindOneResultView", options);
                    return;
                case TokensEnum.CidadeList:
                    JsonSerializer.Serialize(writer, "CidadeList", options);
                    return;
                case TokensEnum.CidadeListResultView:
                    JsonSerializer.Serialize(writer, "CidadeListResultView", options);
                    return;
                case TokensEnum.CidadeView:
                    JsonSerializer.Serialize(writer, "CidadeView", options);
                    return;
                case TokensEnum.Curso:
                    JsonSerializer.Serialize(writer, "Curso", options);
                    return;
                case TokensEnum.CursoCreate:
                    JsonSerializer.Serialize(writer, "CursoCreate", options);
                    return;
                case TokensEnum.CursoDeleteOneById:
                    JsonSerializer.Serialize(writer, "CursoDeleteOneById", options);
                    return;
                case TokensEnum.CursoFindOneById:
                    JsonSerializer.Serialize(writer, "CursoFindOneById", options);
                    return;
                case TokensEnum.CursoFindOneInputView:
                    JsonSerializer.Serialize(writer, "CursoFindOneInputView", options);
                    return;
                case TokensEnum.CursoFindOneResultView:
                    JsonSerializer.Serialize(writer, "CursoFindOneResultView", options);
                    return;
                case TokensEnum.CursoGetImagemCapa:
                    JsonSerializer.Serialize(writer, "CursoGetImagemCapa", options);
                    return;
                case TokensEnum.CursoInputCreateView:
                    JsonSerializer.Serialize(writer, "CursoInputCreateView", options);
                    return;
                case TokensEnum.CursoInputUpdateView:
                    JsonSerializer.Serialize(writer, "CursoInputUpdateView", options);
                    return;
                case TokensEnum.CursoList:
                    JsonSerializer.Serialize(writer, "CursoList", options);
                    return;
                case TokensEnum.CursoListResultView:
                    JsonSerializer.Serialize(writer, "CursoListResultView", options);
                    return;
                case TokensEnum.CursoSetImagemCapa:
                    JsonSerializer.Serialize(writer, "CursoSetImagemCapa", options);
                    return;
                case TokensEnum.CursoUpdateOneById:
                    JsonSerializer.Serialize(writer, "CursoUpdateOneById", options);
                    return;
                case TokensEnum.CursoView:
                    JsonSerializer.Serialize(writer, "CursoView", options);
                    return;
                case TokensEnum.DiaCalendario:
                    JsonSerializer.Serialize(writer, "DiaCalendario", options);
                    return;
                case TokensEnum.DiaCalendarioCreate:
                    JsonSerializer.Serialize(writer, "DiaCalendarioCreate", options);
                    return;
                case TokensEnum.DiaCalendarioDeleteOneById:
                    JsonSerializer.Serialize(writer, "DiaCalendarioDeleteOneById", options);
                    return;
                case TokensEnum.DiaCalendarioFindOneById:
                    JsonSerializer.Serialize(writer, "DiaCalendarioFindOneById", options);
                    return;
                case TokensEnum.DiaCalendarioFindOneInputView:
                    JsonSerializer.Serialize(writer, "DiaCalendarioFindOneInputView", options);
                    return;
                case TokensEnum.DiaCalendarioFindOneResultView:
                    JsonSerializer.Serialize(writer, "DiaCalendarioFindOneResultView", options);
                    return;
                case TokensEnum.DiaCalendarioInputCreateView:
                    JsonSerializer.Serialize(writer, "DiaCalendarioInputCreateView", options);
                    return;
                case TokensEnum.DiaCalendarioInputUpdateView:
                    JsonSerializer.Serialize(writer, "DiaCalendarioInputUpdateView", options);
                    return;
                case TokensEnum.DiaCalendarioList:
                    JsonSerializer.Serialize(writer, "DiaCalendarioList", options);
                    return;
                case TokensEnum.DiaCalendarioListResultView:
                    JsonSerializer.Serialize(writer, "DiaCalendarioListResultView", options);
                    return;
                case TokensEnum.DiaCalendarioUpdateOneById:
                    JsonSerializer.Serialize(writer, "DiaCalendarioUpdateOneById", options);
                    return;
                case TokensEnum.DiaCalendarioView:
                    JsonSerializer.Serialize(writer, "DiaCalendarioView", options);
                    return;
                case TokensEnum.Diario:
                    JsonSerializer.Serialize(writer, "Diario", options);
                    return;
                case TokensEnum.DiarioCreate:
                    JsonSerializer.Serialize(writer, "DiarioCreate", options);
                    return;
                case TokensEnum.DiarioDeleteOneById:
                    JsonSerializer.Serialize(writer, "DiarioDeleteOneById", options);
                    return;
                case TokensEnum.DiarioFindOneById:
                    JsonSerializer.Serialize(writer, "DiarioFindOneById", options);
                    return;
                case TokensEnum.DiarioFindOneInputView:
                    JsonSerializer.Serialize(writer, "DiarioFindOneInputView", options);
                    return;
                case TokensEnum.DiarioFindOneResultView:
                    JsonSerializer.Serialize(writer, "DiarioFindOneResultView", options);
                    return;
                case TokensEnum.DiarioGetImagemCapa:
                    JsonSerializer.Serialize(writer, "DiarioGetImagemCapa", options);
                    return;
                case TokensEnum.DiarioInputCreateView:
                    JsonSerializer.Serialize(writer, "DiarioInputCreateView", options);
                    return;
                case TokensEnum.DiarioInputUpdateView:
                    JsonSerializer.Serialize(writer, "DiarioInputUpdateView", options);
                    return;
                case TokensEnum.DiarioList:
                    JsonSerializer.Serialize(writer, "DiarioList", options);
                    return;
                case TokensEnum.DiarioListResultView:
                    JsonSerializer.Serialize(writer, "DiarioListResultView", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamento:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamento", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoCreate:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoCreate", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoDeleteOneById:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoDeleteOneById", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoFindOneById:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoFindOneById", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoFindOneInputView:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoFindOneInputView", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoFindOneResultView:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoFindOneResultView", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoInputCreateView:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoInputCreateView", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoInputUpdateView:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoInputUpdateView", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoList:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoList", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoListResultView:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoListResultView", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoUpdateOneById:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoUpdateOneById", options);
                    return;
                case TokensEnum.DiarioPreferenciaAgrupamentoView:
                    JsonSerializer.Serialize(writer, "DiarioPreferenciaAgrupamentoView", options);
                    return;
                case TokensEnum.DiarioProfessor:
                    JsonSerializer.Serialize(writer, "DiarioProfessor", options);
                    return;
                case TokensEnum.DiarioProfessorCreate:
                    JsonSerializer.Serialize(writer, "DiarioProfessorCreate", options);
                    return;
                case TokensEnum.DiarioProfessorDeleteOneById:
                    JsonSerializer.Serialize(writer, "DiarioProfessorDeleteOneById", options);
                    return;
                case TokensEnum.DiarioProfessorFindOneById:
                    JsonSerializer.Serialize(writer, "DiarioProfessorFindOneById", options);
                    return;
                case TokensEnum.DiarioProfessorFindOneInputView:
                    JsonSerializer.Serialize(writer, "DiarioProfessorFindOneInputView", options);
                    return;
                case TokensEnum.DiarioProfessorFindOneResultView:
                    JsonSerializer.Serialize(writer, "DiarioProfessorFindOneResultView", options);
                    return;
                case TokensEnum.DiarioProfessorInputCreateView:
                    JsonSerializer.Serialize(writer, "DiarioProfessorInputCreateView", options);
                    return;
                case TokensEnum.DiarioProfessorInputUpdateView:
                    JsonSerializer.Serialize(writer, "DiarioProfessorInputUpdateView", options);
                    return;
                case TokensEnum.DiarioProfessorList:
                    JsonSerializer.Serialize(writer, "DiarioProfessorList", options);
                    return;
                case TokensEnum.DiarioProfessorListResultView:
                    JsonSerializer.Serialize(writer, "DiarioProfessorListResultView", options);
                    return;
                case TokensEnum.DiarioProfessorUpdateOneById:
                    JsonSerializer.Serialize(writer, "DiarioProfessorUpdateOneById", options);
                    return;
                case TokensEnum.DiarioProfessorView:
                    JsonSerializer.Serialize(writer, "DiarioProfessorView", options);
                    return;
                case TokensEnum.DiarioSetImagemCapa:
                    JsonSerializer.Serialize(writer, "DiarioSetImagemCapa", options);
                    return;
                case TokensEnum.DiarioUpdateOneById:
                    JsonSerializer.Serialize(writer, "DiarioUpdateOneById", options);
                    return;
                case TokensEnum.DiarioView:
                    JsonSerializer.Serialize(writer, "DiarioView", options);
                    return;
                case TokensEnum.Disciplina:
                    JsonSerializer.Serialize(writer, "Disciplina", options);
                    return;
                case TokensEnum.DisciplinaCreate:
                    JsonSerializer.Serialize(writer, "DisciplinaCreate", options);
                    return;
                case TokensEnum.DisciplinaDeleteOneById:
                    JsonSerializer.Serialize(writer, "DisciplinaDeleteOneById", options);
                    return;
                case TokensEnum.DisciplinaFindOneById:
                    JsonSerializer.Serialize(writer, "DisciplinaFindOneById", options);
                    return;
                case TokensEnum.DisciplinaFindOneInputView:
                    JsonSerializer.Serialize(writer, "DisciplinaFindOneInputView", options);
                    return;
                case TokensEnum.DisciplinaFindOneResultView:
                    JsonSerializer.Serialize(writer, "DisciplinaFindOneResultView", options);
                    return;
                case TokensEnum.DisciplinaGetImagemCapa:
                    JsonSerializer.Serialize(writer, "DisciplinaGetImagemCapa", options);
                    return;
                case TokensEnum.DisciplinaInputCreateView:
                    JsonSerializer.Serialize(writer, "DisciplinaInputCreateView", options);
                    return;
                case TokensEnum.DisciplinaInputUpdateView:
                    JsonSerializer.Serialize(writer, "DisciplinaInputUpdateView", options);
                    return;
                case TokensEnum.DisciplinaList:
                    JsonSerializer.Serialize(writer, "DisciplinaList", options);
                    return;
                case TokensEnum.DisciplinaListResultView:
                    JsonSerializer.Serialize(writer, "DisciplinaListResultView", options);
                    return;
                case TokensEnum.DisciplinaSetImagemCapa:
                    JsonSerializer.Serialize(writer, "DisciplinaSetImagemCapa", options);
                    return;
                case TokensEnum.DisciplinaUpdateOneById:
                    JsonSerializer.Serialize(writer, "DisciplinaUpdateOneById", options);
                    return;
                case TokensEnum.DisciplinaView:
                    JsonSerializer.Serialize(writer, "DisciplinaView", options);
                    return;
                case TokensEnum.Disponibilidade:
                    JsonSerializer.Serialize(writer, "Disponibilidade", options);
                    return;
                case TokensEnum.DisponibilidadeCreate:
                    JsonSerializer.Serialize(writer, "DisponibilidadeCreate", options);
                    return;
                case TokensEnum.DisponibilidadeDeleteOneById:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDeleteOneById", options);
                    return;
                case TokensEnum.DisponibilidadeDia:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDia", options);
                    return;
                case TokensEnum.DisponibilidadeDiaCreate:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaCreate", options);
                    return;
                case TokensEnum.DisponibilidadeDiaDeleteOneById:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaDeleteOneById", options);
                    return;
                case TokensEnum.DisponibilidadeDiaFindOneById:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaFindOneById", options);
                    return;
                case TokensEnum.DisponibilidadeDiaFindOneInputView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaFindOneInputView", options);
                    return;
                case TokensEnum.DisponibilidadeDiaFindOneResultView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaFindOneResultView", options);
                    return;
                case TokensEnum.DisponibilidadeDiaInputCreateView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaInputCreateView", options);
                    return;
                case TokensEnum.DisponibilidadeDiaInputUpdateView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaInputUpdateView", options);
                    return;
                case TokensEnum.DisponibilidadeDiaList:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaList", options);
                    return;
                case TokensEnum.DisponibilidadeDiaListResultView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaListResultView", options);
                    return;
                case TokensEnum.DisponibilidadeDiaUpdateOneById:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaUpdateOneById", options);
                    return;
                case TokensEnum.DisponibilidadeDiaView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeDiaView", options);
                    return;
                case TokensEnum.DisponibilidadeFindOneById:
                    JsonSerializer.Serialize(writer, "DisponibilidadeFindOneById", options);
                    return;
                case TokensEnum.DisponibilidadeFindOneInputView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeFindOneInputView", options);
                    return;
                case TokensEnum.DisponibilidadeFindOneResultView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeFindOneResultView", options);
                    return;
                case TokensEnum.DisponibilidadeInputCreateView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeInputCreateView", options);
                    return;
                case TokensEnum.DisponibilidadeInputUpdateView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeInputUpdateView", options);
                    return;
                case TokensEnum.DisponibilidadeList:
                    JsonSerializer.Serialize(writer, "DisponibilidadeList", options);
                    return;
                case TokensEnum.DisponibilidadeListResultView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeListResultView", options);
                    return;
                case TokensEnum.DisponibilidadeUpdateOneById:
                    JsonSerializer.Serialize(writer, "DisponibilidadeUpdateOneById", options);
                    return;
                case TokensEnum.DisponibilidadeView:
                    JsonSerializer.Serialize(writer, "DisponibilidadeView", options);
                    return;
                case TokensEnum.Endereco:
                    JsonSerializer.Serialize(writer, "Endereco", options);
                    return;
                case TokensEnum.EnderecoFindOneById:
                    JsonSerializer.Serialize(writer, "EnderecoFindOneById", options);
                    return;
                case TokensEnum.EnderecoFindOneInputView:
                    JsonSerializer.Serialize(writer, "EnderecoFindOneInputView", options);
                    return;
                case TokensEnum.EnderecoFindOneResultView:
                    JsonSerializer.Serialize(writer, "EnderecoFindOneResultView", options);
                    return;
                case TokensEnum.EnderecoInputView:
                    JsonSerializer.Serialize(writer, "EnderecoInputView", options);
                    return;
                case TokensEnum.EnderecoView:
                    JsonSerializer.Serialize(writer, "EnderecoView", options);
                    return;
                case TokensEnum.Estado:
                    JsonSerializer.Serialize(writer, "Estado", options);
                    return;
                case TokensEnum.EstadoFindOneById:
                    JsonSerializer.Serialize(writer, "EstadoFindOneById", options);
                    return;
                case TokensEnum.EstadoFindOneInputView:
                    JsonSerializer.Serialize(writer, "EstadoFindOneInputView", options);
                    return;
                case TokensEnum.EstadoFindOneResultView:
                    JsonSerializer.Serialize(writer, "EstadoFindOneResultView", options);
                    return;
                case TokensEnum.EstadoList:
                    JsonSerializer.Serialize(writer, "EstadoList", options);
                    return;
                case TokensEnum.EstadoListResultView:
                    JsonSerializer.Serialize(writer, "EstadoListResultView", options);
                    return;
                case TokensEnum.EstadoView:
                    JsonSerializer.Serialize(writer, "EstadoView", options);
                    return;
                case TokensEnum.Etapa:
                    JsonSerializer.Serialize(writer, "Etapa", options);
                    return;
                case TokensEnum.EtapaCreate:
                    JsonSerializer.Serialize(writer, "EtapaCreate", options);
                    return;
                case TokensEnum.EtapaDeleteOneById:
                    JsonSerializer.Serialize(writer, "EtapaDeleteOneById", options);
                    return;
                case TokensEnum.EtapaFindOneById:
                    JsonSerializer.Serialize(writer, "EtapaFindOneById", options);
                    return;
                case TokensEnum.EtapaFindOneInputView:
                    JsonSerializer.Serialize(writer, "EtapaFindOneInputView", options);
                    return;
                case TokensEnum.EtapaFindOneResultView:
                    JsonSerializer.Serialize(writer, "EtapaFindOneResultView", options);
                    return;
                case TokensEnum.EtapaInputCreateView:
                    JsonSerializer.Serialize(writer, "EtapaInputCreateView", options);
                    return;
                case TokensEnum.EtapaInputUpdateView:
                    JsonSerializer.Serialize(writer, "EtapaInputUpdateView", options);
                    return;
                case TokensEnum.EtapaList:
                    JsonSerializer.Serialize(writer, "EtapaList", options);
                    return;
                case TokensEnum.EtapaListResultView:
                    JsonSerializer.Serialize(writer, "EtapaListResultView", options);
                    return;
                case TokensEnum.EtapaUpdateOneById:
                    JsonSerializer.Serialize(writer, "EtapaUpdateOneById", options);
                    return;
                case TokensEnum.EtapaView:
                    JsonSerializer.Serialize(writer, "EtapaView", options);
                    return;
                case TokensEnum.Evento:
                    JsonSerializer.Serialize(writer, "Evento", options);
                    return;
                case TokensEnum.EventoCreate:
                    JsonSerializer.Serialize(writer, "EventoCreate", options);
                    return;
                case TokensEnum.EventoDeleteOneById:
                    JsonSerializer.Serialize(writer, "EventoDeleteOneById", options);
                    return;
                case TokensEnum.EventoFindOneById:
                    JsonSerializer.Serialize(writer, "EventoFindOneById", options);
                    return;
                case TokensEnum.EventoFindOneInputView:
                    JsonSerializer.Serialize(writer, "EventoFindOneInputView", options);
                    return;
                case TokensEnum.EventoFindOneResultView:
                    JsonSerializer.Serialize(writer, "EventoFindOneResultView", options);
                    return;
                case TokensEnum.EventoInputCreateView:
                    JsonSerializer.Serialize(writer, "EventoInputCreateView", options);
                    return;
                case TokensEnum.EventoInputUpdateView:
                    JsonSerializer.Serialize(writer, "EventoInputUpdateView", options);
                    return;
                case TokensEnum.EventoList:
                    JsonSerializer.Serialize(writer, "EventoList", options);
                    return;
                case TokensEnum.EventoListResultView:
                    JsonSerializer.Serialize(writer, "EventoListResultView", options);
                    return;
                case TokensEnum.EventoUpdateOneById:
                    JsonSerializer.Serialize(writer, "EventoUpdateOneById", options);
                    return;
                case TokensEnum.EventoView:
                    JsonSerializer.Serialize(writer, "EventoView", options);
                    return;
                case TokensEnum.GetImagem:
                    JsonSerializer.Serialize(writer, "GetImagem", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacao:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacao", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoCreate:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoCreate", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoDeleteOneById:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoDeleteOneById", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoFindOneById:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoFindOneById", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoFindOneInputView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoFindOneInputView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoFindOneResultView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoFindOneResultView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoInputCreateView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoInputCreateView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoInputUpdateView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoInputUpdateView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempo:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempo", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoCreate:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoCreate", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneById:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneById", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneById:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneById", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneInputView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoList:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoList", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneById:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneById", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoIntervaloDeTempoView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoIntervaloDeTempoView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoList:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoList", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoListResultView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoListResultView", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoUpdateOneById:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoUpdateOneById", options);
                    return;
                case TokensEnum.GradeHorarioOfertaFormacaoView:
                    JsonSerializer.Serialize(writer, "GradeHorarioOfertaFormacaoView", options);
                    return;
                case TokensEnum.HorarioGerado:
                    JsonSerializer.Serialize(writer, "HorarioGerado", options);
                    return;
                case TokensEnum.HorarioGeradoAula:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAula", options);
                    return;
                case TokensEnum.HorarioGeradoAulaCreate:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaCreate", options);
                    return;
                case TokensEnum.HorarioGeradoAulaDeleteOneById:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaDeleteOneById", options);
                    return;
                case TokensEnum.HorarioGeradoAulaFindOneById:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaFindOneById", options);
                    return;
                case TokensEnum.HorarioGeradoAulaFindOneInputView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaFindOneInputView", options);
                    return;
                case TokensEnum.HorarioGeradoAulaFindOneResultView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaFindOneResultView", options);
                    return;
                case TokensEnum.HorarioGeradoAulaInputCreateView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaInputCreateView", options);
                    return;
                case TokensEnum.HorarioGeradoAulaInputUpdateView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaInputUpdateView", options);
                    return;
                case TokensEnum.HorarioGeradoAulaList:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaList", options);
                    return;
                case TokensEnum.HorarioGeradoAulaListResultView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaListResultView", options);
                    return;
                case TokensEnum.HorarioGeradoAulaUpdateOneById:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaUpdateOneById", options);
                    return;
                case TokensEnum.HorarioGeradoAulaView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoAulaView", options);
                    return;
                case TokensEnum.HorarioGeradoCreate:
                    JsonSerializer.Serialize(writer, "HorarioGeradoCreate", options);
                    return;
                case TokensEnum.HorarioGeradoDeleteOneById:
                    JsonSerializer.Serialize(writer, "HorarioGeradoDeleteOneById", options);
                    return;
                case TokensEnum.HorarioGeradoFindOneById:
                    JsonSerializer.Serialize(writer, "HorarioGeradoFindOneById", options);
                    return;
                case TokensEnum.HorarioGeradoFindOneInputView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoFindOneInputView", options);
                    return;
                case TokensEnum.HorarioGeradoFindOneResultView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoFindOneResultView", options);
                    return;
                case TokensEnum.HorarioGeradoInputCreateView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoInputCreateView", options);
                    return;
                case TokensEnum.HorarioGeradoInputUpdateView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoInputUpdateView", options);
                    return;
                case TokensEnum.HorarioGeradoList:
                    JsonSerializer.Serialize(writer, "HorarioGeradoList", options);
                    return;
                case TokensEnum.HorarioGeradoListResultView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoListResultView", options);
                    return;
                case TokensEnum.HorarioGeradoUpdateOneById:
                    JsonSerializer.Serialize(writer, "HorarioGeradoUpdateOneById", options);
                    return;
                case TokensEnum.HorarioGeradoView:
                    JsonSerializer.Serialize(writer, "HorarioGeradoView", options);
                    return;
                case TokensEnum.ImageFindOneFromImagemArquivoResultView:
                    JsonSerializer.Serialize(writer, "ImageFindOneFromImagemArquivoResultView", options);
                    return;
                case TokensEnum.Imagem:
                    JsonSerializer.Serialize(writer, "Imagem", options);
                    return;
                case TokensEnum.ImagemArquivo:
                    JsonSerializer.Serialize(writer, "ImagemArquivo", options);
                    return;
                case TokensEnum.ImagemArquivoFindOneFromImagemResultView:
                    JsonSerializer.Serialize(writer, "ImagemArquivoFindOneFromImagemResultView", options);
                    return;
                case TokensEnum.ImagemArquivoFindOneInputView:
                    JsonSerializer.Serialize(writer, "ImagemArquivoFindOneInputView", options);
                    return;
                case TokensEnum.ImagemArquivoFindOneResultView:
                    JsonSerializer.Serialize(writer, "ImagemArquivoFindOneResultView", options);
                    return;
                case TokensEnum.ImagemArquivoView:
                    JsonSerializer.Serialize(writer, "ImagemArquivoView", options);
                    return;
                case TokensEnum.ImagemFindOneInputView:
                    JsonSerializer.Serialize(writer, "ImagemFindOneInputView", options);
                    return;
                case TokensEnum.ImagemFindOneResultView:
                    JsonSerializer.Serialize(writer, "ImagemFindOneResultView", options);
                    return;
                case TokensEnum.ImagemView:
                    JsonSerializer.Serialize(writer, "ImagemView", options);
                    return;
                case TokensEnum.IntervaloDeTempo:
                    JsonSerializer.Serialize(writer, "IntervaloDeTempo", options);
                    return;
                case TokensEnum.IntervaloDeTempoFindOneResultView:
                    JsonSerializer.Serialize(writer, "IntervaloDeTempoFindOneResultView", options);
                    return;
                case TokensEnum.IntervaloDeTempoInputView:
                    JsonSerializer.Serialize(writer, "IntervaloDeTempoInputView", options);
                    return;
                case TokensEnum.IntervaloDeTempoView:
                    JsonSerializer.Serialize(writer, "IntervaloDeTempoView", options);
                    return;
                case TokensEnum.Modalidade:
                    JsonSerializer.Serialize(writer, "Modalidade", options);
                    return;
                case TokensEnum.ModalidadeCreate:
                    JsonSerializer.Serialize(writer, "ModalidadeCreate", options);
                    return;
                case TokensEnum.ModalidadeDeleteOneById:
                    JsonSerializer.Serialize(writer, "ModalidadeDeleteOneById", options);
                    return;
                case TokensEnum.ModalidadeFindOneById:
                    JsonSerializer.Serialize(writer, "ModalidadeFindOneById", options);
                    return;
                case TokensEnum.ModalidadeFindOneInputView:
                    JsonSerializer.Serialize(writer, "ModalidadeFindOneInputView", options);
                    return;
                case TokensEnum.ModalidadeFindOneResultView:
                    JsonSerializer.Serialize(writer, "ModalidadeFindOneResultView", options);
                    return;
                case TokensEnum.ModalidadeInputCreateView:
                    JsonSerializer.Serialize(writer, "ModalidadeInputCreateView", options);
                    return;
                case TokensEnum.ModalidadeInputUpdateView:
                    JsonSerializer.Serialize(writer, "ModalidadeInputUpdateView", options);
                    return;
                case TokensEnum.ModalidadeList:
                    JsonSerializer.Serialize(writer, "ModalidadeList", options);
                    return;
                case TokensEnum.ModalidadeListResultView:
                    JsonSerializer.Serialize(writer, "ModalidadeListResultView", options);
                    return;
                case TokensEnum.ModalidadeUpdateOneById:
                    JsonSerializer.Serialize(writer, "ModalidadeUpdateOneById", options);
                    return;
                case TokensEnum.ModalidadeView:
                    JsonSerializer.Serialize(writer, "ModalidadeView", options);
                    return;
                case TokensEnum.NivelDeFormacao:
                    JsonSerializer.Serialize(writer, "NivelDeFormacao", options);
                    return;
                case TokensEnum.NivelDeFormacaoCreate:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoCreate", options);
                    return;
                case TokensEnum.NivelDeFormacaoDeleteOneById:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoDeleteOneById", options);
                    return;
                case TokensEnum.NivelDeFormacaoFindOneById:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoFindOneById", options);
                    return;
                case TokensEnum.NivelDeFormacaoFindOneInputView:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoFindOneInputView", options);
                    return;
                case TokensEnum.NivelDeFormacaoFindOneResultView:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoFindOneResultView", options);
                    return;
                case TokensEnum.NivelDeFormacaoInputCreateView:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoInputCreateView", options);
                    return;
                case TokensEnum.NivelDeFormacaoInputUpdateView:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoInputUpdateView", options);
                    return;
                case TokensEnum.NivelDeFormacaoList:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoList", options);
                    return;
                case TokensEnum.NivelDeFormacaoListResultView:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoListResultView", options);
                    return;
                case TokensEnum.NivelDeFormacaoUpdateOneById:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoUpdateOneById", options);
                    return;
                case TokensEnum.NivelDeFormacaoView:
                    JsonSerializer.Serialize(writer, "NivelDeFormacaoView", options);
                    return;
                case TokensEnum.OfertaFormacao:
                    JsonSerializer.Serialize(writer, "OfertaFormacao", options);
                    return;
                case TokensEnum.OfertaFormacaoCreate:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoCreate", options);
                    return;
                case TokensEnum.OfertaFormacaoDeleteOneById:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoDeleteOneById", options);
                    return;
                case TokensEnum.OfertaFormacaoFindOneById:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoFindOneById", options);
                    return;
                case TokensEnum.OfertaFormacaoFindOneInputView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoFindOneInputView", options);
                    return;
                case TokensEnum.OfertaFormacaoFindOneResultView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoFindOneResultView", options);
                    return;
                case TokensEnum.OfertaFormacaoInputCreateView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoInputCreateView", options);
                    return;
                case TokensEnum.OfertaFormacaoInputUpdateView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoInputUpdateView", options);
                    return;
                case TokensEnum.OfertaFormacaoList:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoList", options);
                    return;
                case TokensEnum.OfertaFormacaoListResultView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoListResultView", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacao:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacao", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoCreate:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoCreate", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoDeleteOneById:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoDeleteOneById", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoFindOneById:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoFindOneById", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoFindOneInputView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoFindOneInputView", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoFindOneResultView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoFindOneResultView", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoInputCreateView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoInputCreateView", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoInputUpdateView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoInputUpdateView", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoList:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoList", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoListResultView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoListResultView", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoUpdateOneById:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoUpdateOneById", options);
                    return;
                case TokensEnum.OfertaFormacaoNivelFormacaoView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoNivelFormacaoView", options);
                    return;
                case TokensEnum.OfertaFormacaoUpdateOneById:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoUpdateOneById", options);
                    return;
                case TokensEnum.OfertaFormacaoView:
                    JsonSerializer.Serialize(writer, "OfertaFormacaoView", options);
                    return;
                case TokensEnum.PaginatedFilterView:
                    JsonSerializer.Serialize(writer, "PaginatedFilterView", options);
                    return;
                case TokensEnum.PaginatedInputBaseView:
                    JsonSerializer.Serialize(writer, "PaginatedInputBaseView", options);
                    return;
                case TokensEnum.PaginatedInputView:
                    JsonSerializer.Serialize(writer, "PaginatedInputView", options);
                    return;
                case TokensEnum.PaginatedResultLinksView:
                    JsonSerializer.Serialize(writer, "PaginatedResultLinksView", options);
                    return;
                case TokensEnum.PaginatedResultMetaView:
                    JsonSerializer.Serialize(writer, "PaginatedResultMetaView", options);
                    return;
                case TokensEnum.PaginatedResultView:
                    JsonSerializer.Serialize(writer, "PaginatedResultView", options);
                    return;
                case TokensEnum.PaginatedSortByView:
                    JsonSerializer.Serialize(writer, "PaginatedSortByView", options);
                    return;
                case TokensEnum.Perfil:
                    JsonSerializer.Serialize(writer, "Perfil", options);
                    return;
                case TokensEnum.PerfilCreate:
                    JsonSerializer.Serialize(writer, "PerfilCreate", options);
                    return;
                case TokensEnum.PerfilDeleteOneById:
                    JsonSerializer.Serialize(writer, "PerfilDeleteOneById", options);
                    return;
                case TokensEnum.PerfilFindOneById:
                    JsonSerializer.Serialize(writer, "PerfilFindOneById", options);
                    return;
                case TokensEnum.PerfilFindOneInputView:
                    JsonSerializer.Serialize(writer, "PerfilFindOneInputView", options);
                    return;
                case TokensEnum.PerfilFindOneResultView:
                    JsonSerializer.Serialize(writer, "PerfilFindOneResultView", options);
                    return;
                case TokensEnum.PerfilInputCreateView:
                    JsonSerializer.Serialize(writer, "PerfilInputCreateView", options);
                    return;
                case TokensEnum.PerfilInputUpdateView:
                    JsonSerializer.Serialize(writer, "PerfilInputUpdateView", options);
                    return;
                case TokensEnum.PerfilList:
                    JsonSerializer.Serialize(writer, "PerfilList", options);
                    return;
                case TokensEnum.PerfilListResultView:
                    JsonSerializer.Serialize(writer, "PerfilListResultView", options);
                    return;
                case TokensEnum.PerfilUpdateOneById:
                    JsonSerializer.Serialize(writer, "PerfilUpdateOneById", options);
                    return;
                case TokensEnum.PerfilView:
                    JsonSerializer.Serialize(writer, "PerfilView", options);
                    return;
                case TokensEnum.ProfessorDisponibilidade:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidade", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeCreate:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeCreate", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeDeleteOneById:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeDeleteOneById", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeFindOneById:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeFindOneById", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeFindOneInputView:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeFindOneInputView", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeFindOneResultView:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeFindOneResultView", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeInputCreateView:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeInputCreateView", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeInputUpdateView:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeInputUpdateView", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeList:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeList", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeListResultView:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeListResultView", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeUpdateOneById:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeUpdateOneById", options);
                    return;
                case TokensEnum.ProfessorDisponibilidadeView:
                    JsonSerializer.Serialize(writer, "ProfessorDisponibilidadeView", options);
                    return;
                case TokensEnum.Reserva:
                    JsonSerializer.Serialize(writer, "Reserva", options);
                    return;
                case TokensEnum.ReservaCreate:
                    JsonSerializer.Serialize(writer, "ReservaCreate", options);
                    return;
                case TokensEnum.ReservaDeleteOneById:
                    JsonSerializer.Serialize(writer, "ReservaDeleteOneById", options);
                    return;
                case TokensEnum.ReservaFindOneById:
                    JsonSerializer.Serialize(writer, "ReservaFindOneById", options);
                    return;
                case TokensEnum.ReservaFindOneInputView:
                    JsonSerializer.Serialize(writer, "ReservaFindOneInputView", options);
                    return;
                case TokensEnum.ReservaFindOneResultView:
                    JsonSerializer.Serialize(writer, "ReservaFindOneResultView", options);
                    return;
                case TokensEnum.ReservaInputCreateView:
                    JsonSerializer.Serialize(writer, "ReservaInputCreateView", options);
                    return;
                case TokensEnum.ReservaInputUpdateView:
                    JsonSerializer.Serialize(writer, "ReservaInputUpdateView", options);
                    return;
                case TokensEnum.ReservaList:
                    JsonSerializer.Serialize(writer, "ReservaList", options);
                    return;
                case TokensEnum.ReservaListResultView:
                    JsonSerializer.Serialize(writer, "ReservaListResultView", options);
                    return;
                case TokensEnum.ReservaUpdateOneById:
                    JsonSerializer.Serialize(writer, "ReservaUpdateOneById", options);
                    return;
                case TokensEnum.ReservaView:
                    JsonSerializer.Serialize(writer, "ReservaView", options);
                    return;
                case TokensEnum.SearchInputView:
                    JsonSerializer.Serialize(writer, "SearchInputView", options);
                    return;
                case TokensEnum.SetImagem:
                    JsonSerializer.Serialize(writer, "SetImagem", options);
                    return;
                case TokensEnum.Turma:
                    JsonSerializer.Serialize(writer, "Turma", options);
                    return;
                case TokensEnum.TurmaCreate:
                    JsonSerializer.Serialize(writer, "TurmaCreate", options);
                    return;
                case TokensEnum.TurmaDeleteOneById:
                    JsonSerializer.Serialize(writer, "TurmaDeleteOneById", options);
                    return;
                case TokensEnum.TurmaDisponibilidade:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidade", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeCreate:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeCreate", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeDeleteOneById:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeDeleteOneById", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeFindOneById:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeFindOneById", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeFindOneInputView:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeFindOneInputView", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeFindOneResultView:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeFindOneResultView", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeInputCreateView:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeInputCreateView", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeInputUpdateView:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeInputUpdateView", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeList:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeList", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeListResultView:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeListResultView", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeUpdateOneById:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeUpdateOneById", options);
                    return;
                case TokensEnum.TurmaDisponibilidadeView:
                    JsonSerializer.Serialize(writer, "TurmaDisponibilidadeView", options);
                    return;
                case TokensEnum.TurmaFindOneById:
                    JsonSerializer.Serialize(writer, "TurmaFindOneById", options);
                    return;
                case TokensEnum.TurmaFindOneInputView:
                    JsonSerializer.Serialize(writer, "TurmaFindOneInputView", options);
                    return;
                case TokensEnum.TurmaFindOneResultView:
                    JsonSerializer.Serialize(writer, "TurmaFindOneResultView", options);
                    return;
                case TokensEnum.TurmaGetImagemCapa:
                    JsonSerializer.Serialize(writer, "TurmaGetImagemCapa", options);
                    return;
                case TokensEnum.TurmaInputCreateView:
                    JsonSerializer.Serialize(writer, "TurmaInputCreateView", options);
                    return;
                case TokensEnum.TurmaInputUpdateView:
                    JsonSerializer.Serialize(writer, "TurmaInputUpdateView", options);
                    return;
                case TokensEnum.TurmaList:
                    JsonSerializer.Serialize(writer, "TurmaList", options);
                    return;
                case TokensEnum.TurmaListResultView:
                    JsonSerializer.Serialize(writer, "TurmaListResultView", options);
                    return;
                case TokensEnum.TurmaSetImagemCapa:
                    JsonSerializer.Serialize(writer, "TurmaSetImagemCapa", options);
                    return;
                case TokensEnum.TurmaUpdateOneById:
                    JsonSerializer.Serialize(writer, "TurmaUpdateOneById", options);
                    return;
                case TokensEnum.TurmaView:
                    JsonSerializer.Serialize(writer, "TurmaView", options);
                    return;
                case TokensEnum.Usuario:
                    JsonSerializer.Serialize(writer, "Usuario", options);
                    return;
                case TokensEnum.UsuarioCreate:
                    JsonSerializer.Serialize(writer, "UsuarioCreate", options);
                    return;
                case TokensEnum.UsuarioDeleteOneById:
                    JsonSerializer.Serialize(writer, "UsuarioDeleteOneById", options);
                    return;
                case TokensEnum.UsuarioFindOneById:
                    JsonSerializer.Serialize(writer, "UsuarioFindOneById", options);
                    return;
                case TokensEnum.UsuarioFindOneInputView:
                    JsonSerializer.Serialize(writer, "UsuarioFindOneInputView", options);
                    return;
                case TokensEnum.UsuarioFindOneResultView:
                    JsonSerializer.Serialize(writer, "UsuarioFindOneResultView", options);
                    return;
                case TokensEnum.UsuarioGetImagemCapa:
                    JsonSerializer.Serialize(writer, "UsuarioGetImagemCapa", options);
                    return;
                case TokensEnum.UsuarioGetImagemPerfil:
                    JsonSerializer.Serialize(writer, "UsuarioGetImagemPerfil", options);
                    return;
                case TokensEnum.UsuarioInputCreateView:
                    JsonSerializer.Serialize(writer, "UsuarioInputCreateView", options);
                    return;
                case TokensEnum.UsuarioInputUpdateView:
                    JsonSerializer.Serialize(writer, "UsuarioInputUpdateView", options);
                    return;
                case TokensEnum.UsuarioList:
                    JsonSerializer.Serialize(writer, "UsuarioList", options);
                    return;
                case TokensEnum.UsuarioListResultView:
                    JsonSerializer.Serialize(writer, "UsuarioListResultView", options);
                    return;
                case TokensEnum.UsuarioSetImagemCapa:
                    JsonSerializer.Serialize(writer, "UsuarioSetImagemCapa", options);
                    return;
                case TokensEnum.UsuarioSetImagemPerfil:
                    JsonSerializer.Serialize(writer, "UsuarioSetImagemPerfil", options);
                    return;
                case TokensEnum.UsuarioUpdateOneById:
                    JsonSerializer.Serialize(writer, "UsuarioUpdateOneById", options);
                    return;
                case TokensEnum.UsuarioView:
                    JsonSerializer.Serialize(writer, "UsuarioView", options);
                    return;
            }
            throw new Exception("Cannot marshal type TokensEnum");
        }

        public static readonly TokensEnumConverter Singleton = new TokensEnumConverter();
    }
    
    public class DateOnlyConverter : JsonConverter<DateOnly>
    {
        private readonly string serializationFormat;
        public DateOnlyConverter() : this(null) { }

        public DateOnlyConverter(string? serializationFormat)
        {
                this.serializationFormat = serializationFormat ?? "yyyy-MM-dd";
        }

        public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
                var value = reader.GetString();
                return DateOnly.Parse(value!);
        }

        public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options)
                => writer.WriteStringValue(value.ToString(serializationFormat));
    }

    public class TimeOnlyConverter : JsonConverter<TimeOnly>
    {
        private readonly string serializationFormat;

        public TimeOnlyConverter() : this(null) { }

        public TimeOnlyConverter(string? serializationFormat)
        {
                this.serializationFormat = serializationFormat ?? "HH:mm:ss.fff";
        }

        public override TimeOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
                var value = reader.GetString();
                return TimeOnly.Parse(value!);
        }

        public override void Write(Utf8JsonWriter writer, TimeOnly value, JsonSerializerOptions options)
                => writer.WriteStringValue(value.ToString(serializationFormat));
    }

    internal class IsoDateTimeOffsetConverter : JsonConverter<DateTimeOffset>
    {
        public override bool CanConvert(Type t) => t == typeof(DateTimeOffset);

        private const string DefaultDateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK";

        private DateTimeStyles _dateTimeStyles = DateTimeStyles.RoundtripKind;
        private string? _dateTimeFormat;
        private CultureInfo? _culture;

        public DateTimeStyles DateTimeStyles
        {
                get => _dateTimeStyles;
                set => _dateTimeStyles = value;
        }

        public string? DateTimeFormat
        {
                get => _dateTimeFormat ?? string.Empty;
                set => _dateTimeFormat = (string.IsNullOrEmpty(value)) ? null : value;
        }

        public CultureInfo Culture
        {
                get => _culture ?? CultureInfo.CurrentCulture;
                set => _culture = value;
        }

        public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)
        {
                string text;


                if ((_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal
                        || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
                {
                        value = value.ToUniversalTime();
                }

                text = value.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture);

                writer.WriteStringValue(text);
        }

        public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
                string? dateText = reader.GetString();

                if (string.IsNullOrEmpty(dateText) == false)
                {
                        if (!string.IsNullOrEmpty(_dateTimeFormat))
                        {
                                return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);
                        }
                        else
                        {
                                return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);
                        }
                }
                else
                {
                        return default(DateTimeOffset);
                }
        }


        public static readonly IsoDateTimeOffsetConverter Singleton = new IsoDateTimeOffsetConverter();
    }
}
#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
