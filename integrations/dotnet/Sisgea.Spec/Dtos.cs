//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Sisgea.Spec
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IIntervaloDeTempoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("periodoInicio", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PeriodoInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("periodoFim", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PeriodoFim { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IIntervaloDeTempoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IIntervaloDeTempoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IArquivoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IArquivoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IArquivoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IArquivoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("mimeType", Required = Newtonsoft.Json.Required.AllowNull)]
        public string MimeType { get; set; }

        [Newtonsoft.Json.JsonProperty("sizeBytes", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? SizeBytes { get; set; }

        [Newtonsoft.Json.JsonProperty("storageType", Required = Newtonsoft.Json.Required.AllowNull)]
        public string StorageType { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IArquivoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IArquivoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEntityDate
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEntityDate FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEntityDate>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEntityDateNullable
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEntityDateNullable FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEntityDateNullable>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IArquivoFindOneByIdResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("mimeType", Required = Newtonsoft.Json.Required.AllowNull)]
        public string MimeType { get; set; }

        [Newtonsoft.Json.JsonProperty("sizeBytes", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? SizeBytes { get; set; }

        [Newtonsoft.Json.JsonProperty("storageType", Required = Newtonsoft.Json.Required.AllowNull)]
        public string StorageType { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IArquivoFindOneByIdResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IArquivoFindOneByIdResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record 
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static  FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IImagemArquivoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("largura", Required = Newtonsoft.Json.Required.Always)]
        public double Largura { get; set; }

        [Newtonsoft.Json.JsonProperty("altura", Required = Newtonsoft.Json.Required.Always)]
        public double Altura { get; set; }

        [Newtonsoft.Json.JsonProperty("formato", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Formato { get; set; }

        [Newtonsoft.Json.JsonProperty("mimeType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MimeType { get; set; }

        [Newtonsoft.Json.JsonProperty("imagem", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IImagemModel Imagem { get; set; } = new IImagemModel();

        [Newtonsoft.Json.JsonProperty("arquivo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IArquivoModel Arquivo { get; set; } = new IArquivoModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IImagemArquivoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IImagemArquivoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IImagemModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("descricao", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Descricao { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemArquivo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IImagemArquivoModel> ImagemArquivo { get; set; } = new System.Collections.ObjectModel.Collection<IImagemArquivoModel>();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IImagemModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IImagemModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IImagemArquivoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("largura", Required = Newtonsoft.Json.Required.Always)]
        public double Largura { get; set; }

        [Newtonsoft.Json.JsonProperty("altura", Required = Newtonsoft.Json.Required.Always)]
        public double Altura { get; set; }

        [Newtonsoft.Json.JsonProperty("formato", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Formato { get; set; }

        [Newtonsoft.Json.JsonProperty("mimeType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MimeType { get; set; }

        [Newtonsoft.Json.JsonProperty("imagem", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Imagem { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("arquivo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IArquivoFindOneByIdResultDto Arquivo { get; set; } = new IArquivoFindOneByIdResultDto();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IImagemArquivoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IImagemArquivoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IObjectUuid
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IObjectUuid FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IObjectUuid>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IImagemFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("descricao", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Descricao { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemArquivo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ImagemArquivo> ImagemArquivo { get; set; } = new System.Collections.ObjectModel.Collection<ImagemArquivo>();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IImagemFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IImagemFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEstadoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public double Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("sigla", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Sigla { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEstadoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEstadoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEstadoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public double Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEstadoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEstadoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEstadoFindOneByUfInputDto
    {
        [Newtonsoft.Json.JsonProperty("uf", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uf { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEstadoFindOneByUfInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEstadoFindOneByUfInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEstadoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public double Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("sigla", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Sigla { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEstadoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEstadoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEstadoFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IEstadoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IEstadoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEstadoFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEstadoFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoMeta
    {
        [Newtonsoft.Json.JsonProperty("itemsPerPage", Required = Newtonsoft.Json.Required.Always)]
        public double ItemsPerPage { get; set; }

        [Newtonsoft.Json.JsonProperty("totalItems", Required = Newtonsoft.Json.Required.Always)]
        public double TotalItems { get; set; }

        [Newtonsoft.Json.JsonProperty("currentPage", Required = Newtonsoft.Json.Required.Always)]
        public double CurrentPage { get; set; }

        [Newtonsoft.Json.JsonProperty("totalPages", Required = Newtonsoft.Json.Required.Always)]
        public double TotalPages { get; set; }

        [Newtonsoft.Json.JsonProperty("search", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Search { get; set; }

        [Newtonsoft.Json.JsonProperty("sortBy", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IPaginatedSortBy> SortBy { get; set; } = new System.Collections.ObjectModel.Collection<IPaginatedSortBy>();

        [Newtonsoft.Json.JsonProperty("filter", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IPaginatedFilter> Filter { get; set; } = new System.Collections.ObjectModel.Collection<IPaginatedFilter>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoMeta FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoMeta>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedSortBy
    {
        [Newtonsoft.Json.JsonProperty("mode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Mode { get; set; }

        [Newtonsoft.Json.JsonProperty("property", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Property { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedSortBy FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedSortBy>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedFilter
    {
        [Newtonsoft.Json.JsonProperty("property", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Property { get; set; }

        [Newtonsoft.Json.JsonProperty("restrictions", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Restrictions { get; set; } = new System.Collections.ObjectModel.Collection<string>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedFilter FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedFilter>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoLinks
    {
        [Newtonsoft.Json.JsonProperty("first", Required = Newtonsoft.Json.Required.AllowNull)]
        public string First { get; set; }

        [Newtonsoft.Json.JsonProperty("previous", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Previous { get; set; }

        [Newtonsoft.Json.JsonProperty("current", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Current { get; set; }

        [Newtonsoft.Json.JsonProperty("next", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Next { get; set; }

        [Newtonsoft.Json.JsonProperty("last", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Last { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoLinks FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoLinks>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICidadeModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public double Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("estado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IEstadoModel Estado { get; set; } = new IEstadoModel();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICidadeModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICidadeModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICidadeFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public double Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICidadeFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICidadeFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICidadeFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public double Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("estado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IEstadoFindOneResultDto Estado { get; set; } = new IEstadoFindOneResultDto();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICidadeFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICidadeFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICidadeFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ICidadeFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<ICidadeFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICidadeFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICidadeFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEnderecoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("cep", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cep { get; set; }

        [Newtonsoft.Json.JsonProperty("logradouro", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Logradouro { get; set; }

        [Newtonsoft.Json.JsonProperty("numero", Required = Newtonsoft.Json.Required.Always)]
        public double Numero { get; set; }

        [Newtonsoft.Json.JsonProperty("bairro", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Bairro { get; set; }

        [Newtonsoft.Json.JsonProperty("complemento", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Complemento { get; set; }

        [Newtonsoft.Json.JsonProperty("pontoReferencia", Required = Newtonsoft.Json.Required.AllowNull)]
        public string PontoReferencia { get; set; }

        [Newtonsoft.Json.JsonProperty("cidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICidadeModel Cidade { get; set; } = new ICidadeModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEnderecoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEnderecoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEnderecoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEnderecoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEnderecoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEnderecoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("cep", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cep { get; set; }

        [Newtonsoft.Json.JsonProperty("logradouro", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Logradouro { get; set; }

        [Newtonsoft.Json.JsonProperty("numero", Required = Newtonsoft.Json.Required.Always)]
        public double Numero { get; set; }

        [Newtonsoft.Json.JsonProperty("bairro", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Bairro { get; set; }

        [Newtonsoft.Json.JsonProperty("complemento", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Complemento { get; set; }

        [Newtonsoft.Json.JsonProperty("pontoReferencia", Required = Newtonsoft.Json.Required.AllowNull)]
        public string PontoReferencia { get; set; }

        [Newtonsoft.Json.JsonProperty("cidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICidadeFindOneResultDto Cidade { get; set; } = new ICidadeFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEnderecoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEnderecoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEnderecoInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("cep", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cep { get; set; }

        [Newtonsoft.Json.JsonProperty("logradouro", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Logradouro { get; set; }

        [Newtonsoft.Json.JsonProperty("numero", Required = Newtonsoft.Json.Required.Always)]
        public double Numero { get; set; }

        [Newtonsoft.Json.JsonProperty("bairro", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Bairro { get; set; }

        [Newtonsoft.Json.JsonProperty("complemento", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Complemento { get; set; }

        [Newtonsoft.Json.JsonProperty("pontoReferencia", Required = Newtonsoft.Json.Required.AllowNull)]
        public string PontoReferencia { get; set; }

        [Newtonsoft.Json.JsonProperty("cidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICidadeFindOneByIdInputDto Cidade { get; set; } = new ICidadeFindOneByIdInputDto();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEnderecoInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEnderecoInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeFantasia", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeFantasia { get; set; }

        [Newtonsoft.Json.JsonProperty("razaoSocial", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RazaoSocial { get; set; }

        [Newtonsoft.Json.JsonProperty("apelido", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Apelido { get; set; }

        [Newtonsoft.Json.JsonProperty("cnpj", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cnpj { get; set; }

        [Newtonsoft.Json.JsonProperty("endereco", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IEnderecoModel Endereco { get; set; } = new IEnderecoModel();

        [Newtonsoft.Json.JsonProperty("modalidades", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IModalidadeModel> Modalidades { get; set; } = new System.Collections.ObjectModel.Collection<IModalidadeModel>();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IModalidadeModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("slug", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Slug { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IModalidadeModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IModalidadeModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeFantasia", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeFantasia { get; set; }

        [Newtonsoft.Json.JsonProperty("razaoSocial", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RazaoSocial { get; set; }

        [Newtonsoft.Json.JsonProperty("apelido", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Apelido { get; set; }

        [Newtonsoft.Json.JsonProperty("cnpj", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cnpj { get; set; }

        [Newtonsoft.Json.JsonProperty("endereco", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IEnderecoFindOneResultDto Endereco { get; set; } = new IEnderecoFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("modalidades", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IModalidadeFindOneResultDto> Modalidades { get; set; } = new System.Collections.ObjectModel.Collection<IModalidadeFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IModalidadeFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("slug", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Slug { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IModalidadeFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IModalidadeFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ICampusFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<ICampusFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusInputDto
    {
        [Newtonsoft.Json.JsonProperty("nomeFantasia", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeFantasia { get; set; }

        [Newtonsoft.Json.JsonProperty("razaoSocial", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RazaoSocial { get; set; }

        [Newtonsoft.Json.JsonProperty("apelido", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Apelido { get; set; }

        [Newtonsoft.Json.JsonProperty("cnpj", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cnpj { get; set; }

        [Newtonsoft.Json.JsonProperty("endereco", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IEnderecoInputDto Endereco { get; set; } = new IEnderecoInputDto();

        [Newtonsoft.Json.JsonProperty("modalidades", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IObjectUuid> Modalidades { get; set; } = new System.Collections.ObjectModel.Collection<IObjectUuid>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeFantasia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NomeFantasia { get; set; }

        [Newtonsoft.Json.JsonProperty("razaoSocial", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RazaoSocial { get; set; }

        [Newtonsoft.Json.JsonProperty("apelido", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Apelido { get; set; }

        [Newtonsoft.Json.JsonProperty("cnpj", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cnpj { get; set; }

        [Newtonsoft.Json.JsonProperty("endereco", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEnderecoInputDto Endereco { get; set; }

        [Newtonsoft.Json.JsonProperty("modalidades", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<IObjectUuid> Modalidades { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoModel
    {
        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusModel Campus { get; set; } = new ICampusModel();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("ambientes", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IAmbienteModel> Ambientes { get; set; } = new System.Collections.ObjectModel.Collection<IAmbienteModel>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDatedObject
    {
        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDatedObject FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDatedObject>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAmbienteModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("descricao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Descricao { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("capacidade", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? Capacidade { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("bloco", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IBlocoModel Bloco { get; set; } = new IBlocoModel();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa2 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAmbienteModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAmbienteModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusFindOneResultDto Campus { get; set; } = new ICampusFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa3 ImagemCapa { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IBlocoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IBlocoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIBlocoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IBlocoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IBlocoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIBlocoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIBlocoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Campus { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IBlocoUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codigo { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IBlocoUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IBlocoUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAmbienteInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("descricao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Descricao { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("capacidade", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? Capacidade { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("bloco", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Bloco { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAmbienteInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAmbienteInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAmbienteFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("descricao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Descricao { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("capacidade", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? Capacidade { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("bloco", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IBlocoFindOneResultDto Bloco { get; set; } = new IBlocoFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa4 ImagemCapa { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAmbienteFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAmbienteFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAmbienteFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAmbienteFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAmbienteFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAmbienteFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IAmbienteFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IAmbienteFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAmbienteFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAmbienteFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAmbienteUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("descricao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Descricao { get; set; }

        [Newtonsoft.Json.JsonProperty("codigo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Codigo { get; set; }

        [Newtonsoft.Json.JsonProperty("capacidade", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Capacidade { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("bloco", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Bloco { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAmbienteUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAmbienteUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IVinculoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("ativo", Required = Newtonsoft.Json.Required.Always)]
        public bool Ativo { get; set; }

        [Newtonsoft.Json.JsonProperty("cargo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cargo { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusModel Campus { get; set; } = new ICampusModel();

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IUsuarioModel Usuario { get; set; } = new IUsuarioModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IVinculoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IVinculoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioModel
    {
        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("isSuperUser", Required = Newtonsoft.Json.Required.Always)]
        public bool IsSuperUser { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa5 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemPerfil", Required = Newtonsoft.Json.Required.Always)]
        public ImagemPerfil ImagemPerfil { get; set; }

        [Newtonsoft.Json.JsonProperty("vinculosAtivos", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IVinculoModel> VinculosAtivos { get; set; } = new System.Collections.ObjectModel.Collection<IVinculoModel>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IVinculoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IVinculoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IVinculoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IVinculoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("ativo", Required = Newtonsoft.Json.Required.Always)]
        public bool Ativo { get; set; }

        [Newtonsoft.Json.JsonProperty("cargo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cargo { get; set; }

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IUsuarioFindOneResultDto Usuario { get; set; } = new IUsuarioFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusFindOneResultDto Campus { get; set; } = new ICampusFindOneResultDto();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IVinculoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IVinculoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa6 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemPerfil", Required = Newtonsoft.Json.Required.Always)]
        public ImagemPerfil2 ImagemPerfil { get; set; }

        [Newtonsoft.Json.JsonProperty("vinculosAtivos", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IUsuarioFindOneResultDtoVinculoAtivo> VinculosAtivos { get; set; } = new System.Collections.ObjectModel.Collection<IUsuarioFindOneResultDtoVinculoAtivo>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioFindOneResultDtoVinculoAtivo
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("cargo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cargo { get; set; }

        [Newtonsoft.Json.JsonProperty("ativo", Required = Newtonsoft.Json.Required.Always)]
        public bool Ativo { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IUsuarioFindOneResultDtoVinculoAtivoCampus Campus { get; set; } = new IUsuarioFindOneResultDtoVinculoAtivoCampus();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioFindOneResultDtoVinculoAtivo FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioFindOneResultDtoVinculoAtivo>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioFindOneResultDtoVinculoAtivoCampus
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("razaoSocial", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RazaoSocial { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeFantasia", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeFantasia { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioFindOneResultDtoVinculoAtivoCampus FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioFindOneResultDtoVinculoAtivoCampus>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IVinculoFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IVinculoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IVinculoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IVinculoFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IVinculoFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIVinculoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IVinculoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IVinculoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIVinculoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIVinculoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IVinculoUpdateInputDto
    {
        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Campus { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Usuario { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("cargos", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Cargos { get; set; } = new System.Collections.ObjectModel.Collection<string>();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IVinculoUpdateInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IVinculoUpdateInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IUsuarioFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IUsuarioFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIUsuarioFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IUsuarioFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IUsuarioFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIUsuarioFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIUsuarioFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioCreateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IUsuarioDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IUsuarioDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IUsuarioDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum ISisgeaSisghaValidationErrorCodeUsuario
    {

        [System.Runtime.Serialization.EnumMember(Value = @"usuario.email.already_in_use")]
        Usuario_email_already_in_use = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"usuario.matriculaSiape.already_in_use")]
        Usuario_matriculaSiape_already_in_use = 1,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAutenticacaoDefinirSenhaInputDto
    {
        [Newtonsoft.Json.JsonProperty("senha", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Senha { get; set; }

        [Newtonsoft.Json.JsonProperty("confirmarSenha", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ConfirmarSenha { get; set; }

        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAutenticacaoDefinirSenhaInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAutenticacaoDefinirSenhaInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAutenticacaoDefinirSenhaResultDto
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Result { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAutenticacaoDefinirSenhaResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAutenticacaoDefinirSenhaResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAutenticacaoLoginInputDto
    {
        [Newtonsoft.Json.JsonProperty("matriculaSiape", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MatriculaSiape { get; set; }

        [Newtonsoft.Json.JsonProperty("senha", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Senha { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAutenticacaoLoginInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAutenticacaoLoginInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAutenticacaoLoginResultDto
    {
        [Newtonsoft.Json.JsonProperty("access_token", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Access_token { get; set; }

        [Newtonsoft.Json.JsonProperty("token_type", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Token_type { get; set; }

        [Newtonsoft.Json.JsonProperty("id_token", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Id_token { get; set; }

        [Newtonsoft.Json.JsonProperty("refresh_token", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Refresh_token { get; set; }

        [Newtonsoft.Json.JsonProperty("expires_in", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? Expires_in { get; set; }

        [Newtonsoft.Json.JsonProperty("expires_at", Required = Newtonsoft.Json.Required.AllowNull)]
        public double? Expires_at { get; set; }

        [Newtonsoft.Json.JsonProperty("session_state", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Session_state { get; set; }

        [Newtonsoft.Json.JsonProperty("scope", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Scope { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAutenticacaoLoginResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAutenticacaoLoginResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAutenticacaoQuemSouEuResultDto
    {
        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        public Usuario Usuario { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAutenticacaoQuemSouEuResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAutenticacaoQuemSouEuResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAutenticacaoRefreshInputDto
    {
        [Newtonsoft.Json.JsonProperty("refreshToken", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RefreshToken { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAutenticacaoRefreshInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAutenticacaoRefreshInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("motivo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Motivo { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("ambiente", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IAmbienteModel Ambiente { get; set; } = new IAmbienteModel();

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IUsuarioModel Usuario { get; set; } = new IUsuarioModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaInputDto
    {
        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("motivo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Motivo { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("ambiente", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Ambiente { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Usuario { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaCreateDto
    {
        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("motivo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Motivo { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("ambiente", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Ambiente { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Usuario { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("motivo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Motivo { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEntityDateNullable DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("ambiente", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Ambiente { get; set; }

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Usuario { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("motivo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Motivo { get; set; }

        [Newtonsoft.Json.JsonProperty("tipo", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Tipo { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("usuario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IUsuarioFindOneResultDto Usuario { get; set; } = new IUsuarioFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("ambiente", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IAmbienteFindOneResultDto Ambiente { get; set; } = new IAmbienteFindOneResultDto();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IReservaFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IReservaFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIReservaFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IReservaFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IReservaFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIReservaFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIReservaFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IReservaDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IReservaDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IReservaDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IModalidadeInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("slug", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Slug { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IModalidadeInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IModalidadeInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IModalidadeUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("slug", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Slug { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IModalidadeUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IModalidadeUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IModalidadeFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IModalidadeFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IModalidadeFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IModalidadeFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IModalidadeFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusPossuiModalidadeModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusModel Campus { get; set; } = new ICampusModel();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IModalidadeModel Modalidade { get; set; } = new IModalidadeModel();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusPossuiModalidadeModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusPossuiModalidadeModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusPossuiModalidadeCreateInput
    {
        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Campus { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Modalidade { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusPossuiModalidadeCreateInput FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusPossuiModalidadeCreateInput>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICampusPossuiModalidadeDeleteOneByIdInput
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICampusPossuiModalidadeDeleteOneByIdInput FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICampusPossuiModalidadeDeleteOneByIdInput>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICursoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusModel Campus { get; set; } = new ICampusModel();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IModalidadeModel Modalidade { get; set; } = new IModalidadeModel();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa7 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICursoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICursoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICursoInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Campus { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Modalidade { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICursoInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICursoInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICursoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusFindOneResultDto Campus { get; set; } = new ICampusFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IModalidadeFindOneResultDto Modalidade { get; set; } = new IModalidadeFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa8 ImagemCapa { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICursoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICursoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICursoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICursoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICursoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICursoFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ICursoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<ICursoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICursoFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICursoFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICursoUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Campus { get; set; }

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Modalidade { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICursoUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICursoUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICalendarioLetivoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusModel Campus { get; set; } = new ICampusModel();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IModalidadeModel Modalidade { get; set; } = new IModalidadeModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICalendarioLetivoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICalendarioLetivoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICalendarioLetivoInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Campus { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Modalidade { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICalendarioLetivoInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICalendarioLetivoInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICalendarioLetivoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICampusFindOneResultDto Campus { get; set; } = new ICampusFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IModalidadeFindOneResultDto Modalidade { get; set; } = new IModalidadeFindOneResultDto();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICalendarioLetivoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICalendarioLetivoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICalendarioLetivoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICalendarioLetivoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICalendarioLetivoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICalendarioLetivoFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ICalendarioLetivoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<ICalendarioLetivoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICalendarioLetivoFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICalendarioLetivoFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ICalendarioLetivoUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("campus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Campus { get; set; }

        [Newtonsoft.Json.JsonProperty("modalidade", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Modalidade { get; set; }

        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ICalendarioLetivoUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ICalendarioLetivoUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("cargaHoraria", Required = Newtonsoft.Json.Required.Always)]
        public double CargaHoraria { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa9 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IDisciplinaFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IDisciplinaFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIDisciplinaFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IDisciplinaFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IDisciplinaFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIDisciplinaFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIDisciplinaFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("cargaHoraria", Required = Newtonsoft.Json.Required.Always)]
        public double CargaHoraria { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa10 ImagemCapa { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("cargaHoraria", Required = Newtonsoft.Json.Required.Always)]
        public double CargaHoraria { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaCreateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("cargaHoraria", Required = Newtonsoft.Json.Required.Always)]
        public double CargaHoraria { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDisciplinaUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("nomeAbreviado", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NomeAbreviado { get; set; }

        [Newtonsoft.Json.JsonProperty("cargaHoraria", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CargaHoraria { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDisciplinaUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDisciplinaUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("periodo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Periodo { get; set; }

        [Newtonsoft.Json.JsonProperty("curso", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICursoModel Curso { get; set; } = new ICursoModel();

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa11 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("ambientePadraoAula", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadraoAula AmbientePadraoAula { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ITurmaFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<ITurmaFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfITurmaFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ITurmaFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<ITurmaFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfITurmaFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfITurmaFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("periodo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Periodo { get; set; }

        [Newtonsoft.Json.JsonProperty("curso", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICursoFindOneResultDto Curso { get; set; } = new ICursoFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("ambientePadraoAula", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadraoAula2 AmbientePadraoAula { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa12 ImagemCapa { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaCreateDto
    {
        [Newtonsoft.Json.JsonProperty("periodo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Periodo { get; set; }

        [Newtonsoft.Json.JsonProperty("curso", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Curso { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("ambientePadraoAula", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadraoAula3 AmbientePadraoAula { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaInputDto
    {
        [Newtonsoft.Json.JsonProperty("periodo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Periodo { get; set; }

        [Newtonsoft.Json.JsonProperty("curso", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Curso { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("ambientePadraoAula", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadraoAula4 AmbientePadraoAula { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("periodo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Periodo { get; set; }

        [Newtonsoft.Json.JsonProperty("curso", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoModel Curso { get; set; }

        [Newtonsoft.Json.JsonProperty("ambientePadraoAula", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AmbientePadraoAula5 AmbientePadraoAula { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("etapa", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Etapa { get; set; }

        [Newtonsoft.Json.JsonProperty("turma", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ITurmaModel Turma { get; set; } = new ITurmaModel();

        [Newtonsoft.Json.JsonProperty("disciplina", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IDisciplinaModel Disciplina { get; set; } = new IDisciplinaModel();

        [Newtonsoft.Json.JsonProperty("ambientePadrao", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadrao AmbientePadrao { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa13 ImagemCapa { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IDiarioFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IDiarioFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIDiarioFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IDiarioFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IDiarioFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIDiarioFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIDiarioFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("etapa", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Etapa { get; set; }

        [Newtonsoft.Json.JsonProperty("turma", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ITurmaFindOneResultDto Turma { get; set; } = new ITurmaFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("disciplina", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IDisciplinaFindOneResultDto Disciplina { get; set; } = new IDisciplinaFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("ambientePadrao", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadrao2 AmbientePadrao { get; set; }

        [Newtonsoft.Json.JsonProperty("imagemCapa", Required = Newtonsoft.Json.Required.Always)]
        public ImagemCapa14 ImagemCapa { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioCreateDto
    {
        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("etapa", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Etapa { get; set; }

        [Newtonsoft.Json.JsonProperty("turma", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Turma { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("disciplina", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Disciplina { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("ambientePadrao", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadrao3 AmbientePadrao { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioInputDto
    {
        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Always)]
        public double Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("etapa", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Etapa { get; set; }

        [Newtonsoft.Json.JsonProperty("turma", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Turma { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("disciplina", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Disciplina { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("ambientePadrao", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadrao4 AmbientePadrao { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("ano", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ano { get; set; }

        [Newtonsoft.Json.JsonProperty("etapa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Etapa { get; set; }

        [Newtonsoft.Json.JsonProperty("turma", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Turma { get; set; }

        [Newtonsoft.Json.JsonProperty("disciplina", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Disciplina { get; set; }

        [Newtonsoft.Json.JsonProperty("ambientePadrao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AmbientePadrao5 AmbientePadrao { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        public bool Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("diario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IDiarioModel Diario { get; set; } = new IDiarioModel();

        [Newtonsoft.Json.JsonProperty("vinculo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IVinculoModel Vinculo { get; set; } = new IVinculoModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IDiarioProfessorFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IDiarioProfessorFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIDiarioProfessorFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IDiarioProfessorFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IDiarioProfessorFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIDiarioProfessorFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIDiarioProfessorFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        public bool Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("diario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IDiarioFindOneResultDto Diario { get; set; } = new IDiarioFindOneResultDto();

        [Newtonsoft.Json.JsonProperty("vinculo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IVinculoFindOneResultDto Vinculo { get; set; } = new IVinculoFindOneResultDto();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorCreateDto
    {
        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        public bool Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("diario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Diario { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("vinculo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Vinculo { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorInputDto
    {
        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Always)]
        public bool Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("diario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Diario { get; set; } = new IObjectUuid();

        [Newtonsoft.Json.JsonProperty("vinculo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IObjectUuid Vinculo { get; set; } = new IObjectUuid();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("situacao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Situacao { get; set; }

        [Newtonsoft.Json.JsonProperty("diario", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioModel Diario { get; set; }

        [Newtonsoft.Json.JsonProperty("vinculo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IVinculoModel Vinculo { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiarioProfessorDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiarioProfessorDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiarioProfessorDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaDisponibilidadeModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataFim", Required = Newtonsoft.Json.Required.AllowNull)]
        public string DataFim { get; set; }

        [Newtonsoft.Json.JsonProperty("turma", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ITurmaModel Turma { get; set; } = new ITurmaModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaDisponibilidadeModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaDisponibilidadeModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ITurmaDisponibilidadeDiaModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("diaSemanaIso", Required = Newtonsoft.Json.Required.Always)]
        public double DiaSemanaIso { get; set; }

        [Newtonsoft.Json.JsonProperty("intervaloDeTempo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IIntervaloDeTempoModel IntervaloDeTempo { get; set; } = new IIntervaloDeTempoModel();

        [Newtonsoft.Json.JsonProperty("turmaDisponibilidade", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ITurmaDisponibilidadeModel TurmaDisponibilidade { get; set; } = new ITurmaDisponibilidadeModel();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ITurmaDisponibilidadeDiaModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ITurmaDisponibilidadeDiaModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("cor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cor { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICalendarioLetivoModel Calendario { get; set; } = new ICalendarioLetivoModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoDeleteOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoDeleteOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoDeleteOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoFindAllResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IEventoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IEventoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoFindAllResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoFindAllResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IPaginatedResultDtoOfIEventoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<IEventoFindOneResultDto> Data { get; set; } = new System.Collections.ObjectModel.Collection<IEventoFindOneResultDto>();

        [Newtonsoft.Json.JsonProperty("meta", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoMeta Meta { get; set; } = new IPaginatedResultDtoMeta();

        [Newtonsoft.Json.JsonProperty("links", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IPaginatedResultDtoLinks Links { get; set; } = new IPaginatedResultDtoLinks();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IPaginatedResultDtoOfIEventoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IPaginatedResultDtoOfIEventoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoFindOneResultDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("cor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cor { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICalendarioLetivoModel Calendario { get; set; } = new ICalendarioLetivoModel();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoFindOneResultDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoFindOneResultDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoFindOneByIdInputDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoFindOneByIdInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoFindOneByIdInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoCreateDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("cor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cor { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICalendarioLetivoModel Calendario { get; set; } = new ICalendarioLetivoModel();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoCreateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoCreateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoInputDto
    {
        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("cor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cor { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICalendarioLetivoModel Calendario { get; set; } = new ICalendarioLetivoModel();


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoInputDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoInputDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEventoUpdateDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("nome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEntityDate DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEntityDate DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("cor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Cor { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid Calendario { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEventoUpdateDto FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEventoUpdateDto>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IEtapaModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("numero", Required = Newtonsoft.Json.Required.Always)]
        public double Numero { get; set; }

        [Newtonsoft.Json.JsonProperty("dataInicio", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataInicio { get; set; }

        [Newtonsoft.Json.JsonProperty("dataTermino", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataTermino { get; set; }

        [Newtonsoft.Json.JsonProperty("cor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Cor { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICalendarioLetivoModel Calendario { get; set; } = new ICalendarioLetivoModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IEtapaModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IEtapaModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IDiaCalendarioModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Data { get; set; }

        [Newtonsoft.Json.JsonProperty("diaLetivo", Required = Newtonsoft.Json.Required.Always)]
        public bool DiaLetivo { get; set; }

        [Newtonsoft.Json.JsonProperty("feriado", Required = Newtonsoft.Json.Required.Always)]
        public bool Feriado { get; set; }

        [Newtonsoft.Json.JsonProperty("calendario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ICalendarioLetivoModel Calendario { get; set; } = new ICalendarioLetivoModel();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IDiaCalendarioModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IDiaCalendarioModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IAulaModel
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("formato", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Formato { get; set; }

        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Data { get; set; }

        [Newtonsoft.Json.JsonProperty("intervaloDeTempo", Required = Newtonsoft.Json.Required.Always)]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }

        [Newtonsoft.Json.JsonProperty("diario", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IDiarioModel Diario { get; set; } = new IDiarioModel();

        [Newtonsoft.Json.JsonProperty("ambientePadrao", Required = Newtonsoft.Json.Required.Always)]
        public AmbientePadrao6 AmbientePadrao { get; set; }

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateUpdated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateUpdated { get; set; }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDateNullable DateDeleted { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IAulaModel FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IAulaModel>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record Dtos
    {
        [Newtonsoft.Json.JsonProperty("IIntervaloDeTempoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IIntervaloDeTempoModel IIntervaloDeTempoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IArquivoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IArquivoFindOneByIdInputDto IArquivoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IArquivoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IArquivoModel IArquivoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IEntityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEntityDate IEntityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("IEntityDateNullable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEntityDateNullable IEntityDateNullable { get; set; }

        [Newtonsoft.Json.JsonProperty("IArquivoFindOneByIdResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IArquivoFindOneByIdResultDto IArquivoFindOneByIdResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IImagemArquivoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IImagemArquivoModel IImagemArquivoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IImagemModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IImagemModel IImagemModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IImagemArquivoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IImagemArquivoFindOneResultDto IImagemArquivoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IObjectUuid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid IObjectUuid { get; set; }

        [Newtonsoft.Json.JsonProperty("IImagemFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IImagemFindOneResultDto IImagemFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEstadoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEstadoModel IEstadoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IEstadoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEstadoFindOneByIdInputDto IEstadoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEstadoFindOneByUfInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEstadoFindOneByUfInputDto IEstadoFindOneByUfInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEstadoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEstadoFindOneResultDto IEstadoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEstadoFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEstadoFindAllResultDto IEstadoFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IEstadoFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEstadoFindAllResultDto IPaginatedResultDto<IEstadoFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDtoMeta", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoMeta IPaginatedResultDtoMeta { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedSortBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedSortBy IPaginatedSortBy { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedFilter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedFilter IPaginatedFilter { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDtoLinks", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoLinks IPaginatedResultDtoLinks { get; set; }

        [Newtonsoft.Json.JsonProperty("ICidadeModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICidadeModel ICidadeModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ICidadeFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICidadeFindOneByIdInputDto ICidadeFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICidadeFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICidadeFindOneResultDto ICidadeFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICidadeFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICidadeFindAllResultDto ICidadeFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<ICidadeFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICidadeFindAllResultDto IPaginatedResultDto<ICidadeFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IEnderecoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEnderecoModel IEnderecoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IEnderecoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEnderecoFindOneByIdInputDto IEnderecoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEnderecoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEnderecoFindOneResultDto IEnderecoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEnderecoInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEnderecoInputDto IEnderecoInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusModel ICampusModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeModel IModalidadeModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusDeleteOneByIdInputDto ICampusDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusDeleteOneByIdInputDto ICampusFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusFindOneResultDto ICampusFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeFindOneResultDto IModalidadeFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusFindAllResultDto ICampusFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<ICampusFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusFindAllResultDto IPaginatedResultDto<ICampusFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusInputDto ICampusInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusInputDto ICampusCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusUpdateDto ICampusUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoModel IBlocoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IDatedObject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDatedObject IDatedObject { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteModel IAmbienteModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoFindOneByIdInputDto IBlocoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoFindOneResultDto IBlocoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoDeleteOneByIdInputDto IBlocoDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoFindAllResultDto IBlocoFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IBlocoFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIBlocoFindOneResultDto IPaginatedResultDto<IBlocoFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoInputDto IBlocoInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoInputDto IBlocoCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IBlocoUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IBlocoUpdateDto IBlocoUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteInputDto IAmbienteInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteFindOneResultDto IAmbienteFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteFindOneByIdInputDto IAmbienteFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteFindAllResultDto IAmbienteFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IAmbienteFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteFindAllResultDto IPaginatedResultDto<IAmbienteFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteInputDto IAmbienteCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteUpdateDto IAmbienteUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAmbienteDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAmbienteFindOneByIdInputDto IAmbienteDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("AmbienteValidationErrorCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AmbienteValidationErrorCode { get; set; }

        [Newtonsoft.Json.JsonProperty("IVinculoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IVinculoModel IVinculoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioModel IUsuarioModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IVinculoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IVinculoFindOneByIdInputDto IVinculoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IVinculoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IVinculoFindOneResultDto IVinculoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioFindOneResultDto IUsuarioFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioFindOneResultDtoVinculoAtivo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioFindOneResultDtoVinculoAtivo IUsuarioFindOneResultDtoVinculoAtivo { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioFindOneResultDtoVinculoAtivoCampus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioFindOneResultDtoVinculoAtivoCampus IUsuarioFindOneResultDtoVinculoAtivoCampus { get; set; }

        [Newtonsoft.Json.JsonProperty("IVinculoFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IVinculoFindAllResultDto IVinculoFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IVinculoFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIVinculoFindOneResultDto IPaginatedResultDto<IVinculoFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IVinculoUpdateInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IVinculoUpdateInputDto IVinculoUpdateInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioFindOneByIdInputDto IUsuarioFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioInputDto IUsuarioInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioFindAllResultDto IUsuarioFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IUsuarioFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIUsuarioFindOneResultDto IPaginatedResultDto<IUsuarioFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioCreateDto IUsuarioCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioUpdateDto IUsuarioUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IUsuarioDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IUsuarioDeleteOneByIdInputDto IUsuarioDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ISisgeaSisghaValidationErrorCodeUsuario", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ISisgeaSisghaValidationErrorCodeUsuario? ISisgeaSisghaValidationErrorCodeUsuario { get; set; }

        [Newtonsoft.Json.JsonProperty("IAutenticacaoDefinirSenhaInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAutenticacaoDefinirSenhaInputDto IAutenticacaoDefinirSenhaInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAutenticacaoDefinirSenhaResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAutenticacaoDefinirSenhaResultDto IAutenticacaoDefinirSenhaResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAutenticacaoLoginInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAutenticacaoLoginInputDto IAutenticacaoLoginInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAutenticacaoLoginResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAutenticacaoLoginResultDto IAutenticacaoLoginResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAutenticacaoQuemSouEuResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAutenticacaoQuemSouEuResultDto IAutenticacaoQuemSouEuResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IAutenticacaoRefreshInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAutenticacaoRefreshInputDto IAutenticacaoRefreshInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ISisgeaAuthValidationErrorCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ISisgeaAuthValidationErrorCode { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaModel IReservaModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaInputDto IReservaInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaCreateDto IReservaCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaUpdateDto IReservaUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaFindOneByIdInputDto IReservaFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaFindOneResultDto IReservaFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaFindAllResultDto IReservaFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IReservaFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIReservaFindOneResultDto IPaginatedResultDto<IReservaFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IReservaDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IReservaDeleteOneByIdInputDto IReservaDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid IModalidadeFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeInputDto IModalidadeInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeInputDto IModalidadeCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeUpdateDto IModalidadeUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeFindAllResultDto IModalidadeFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IModalidadeFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IModalidadeFindAllResultDto IPaginatedResultDto<IModalidadeFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IModalidadeDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IObjectUuid IModalidadeDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusPossuiModalidadeModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusPossuiModalidadeModel ICampusPossuiModalidadeModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusPossuiModalidadeCreateInput", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusPossuiModalidadeCreateInput ICampusPossuiModalidadeCreateInput { get; set; }

        [Newtonsoft.Json.JsonProperty("ICampusPossuiModalidadeDeleteOneByIdInput", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICampusPossuiModalidadeDeleteOneByIdInput ICampusPossuiModalidadeDeleteOneByIdInput { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoModel ICursoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoInputDto ICursoInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoFindOneResultDto ICursoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoFindOneByIdInputDto ICursoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoFindAllResultDto ICursoFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<ICursoFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoFindAllResultDto IPaginatedResultDto<ICursoFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoInputDto ICursoCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoUpdateDto ICursoUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICursoDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICursoFindOneByIdInputDto ICursoDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoModel ICalendarioLetivoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoInputDto ICalendarioLetivoInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoFindOneResultDto ICalendarioLetivoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoFindOneByIdInputDto ICalendarioLetivoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoFindAllResultDto ICalendarioLetivoFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<ICalendarioLetivoFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoFindAllResultDto IPaginatedResultDto<ICalendarioLetivoFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoInputDto ICalendarioLetivoCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoUpdateDto ICalendarioLetivoUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ICalendarioLetivoDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ICalendarioLetivoFindOneByIdInputDto ICalendarioLetivoDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaModel IDisciplinaModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaDeleteOneByIdInputDto IDisciplinaDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaFindAllResultDto IDisciplinaFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IDisciplinaFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIDisciplinaFindOneResultDto IPaginatedResultDto<IDisciplinaFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaFindOneResultDto IDisciplinaFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaFindOneByIdInputDto IDisciplinaFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaInputDto IDisciplinaInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaCreateDto IDisciplinaCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDisciplinaUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDisciplinaUpdateDto IDisciplinaUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaModel ITurmaModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaDeleteOneByIdInputDto ITurmaDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaFindOneByIdInputDto ITurmaFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaFindAllResultDto ITurmaFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<ITurmaFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfITurmaFindOneResultDto IPaginatedResultDto<ITurmaFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaFindOneResultDto ITurmaFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaCreateDto ITurmaCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaInputDto ITurmaInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaUpdateDto ITurmaUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioModel IDiarioModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioDeleteOneByIdInputDto IDiarioDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioFindAllResultDto IDiarioFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IDiarioFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIDiarioFindOneResultDto IPaginatedResultDto<IDiarioFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioFindOneResultDto IDiarioFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioFindOneByIdInputDto IDiarioFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioCreateDto IDiarioCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioInputDto IDiarioInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioUpdateDto IDiarioUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorModel IDiarioProfessorModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorFindOneByIdInputDto IDiarioProfessorFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorFindAllResultDto IDiarioProfessorFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IDiarioProfessorFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIDiarioProfessorFindOneResultDto IPaginatedResultDto<IDiarioProfessorFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorFindOneResultDto IDiarioProfessorFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorCreateDto IDiarioProfessorCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorInputDto IDiarioProfessorInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorUpdateDto IDiarioProfessorUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiarioProfessorDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiarioProfessorDeleteOneByIdInputDto IDiarioProfessorDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaDisponibilidadeModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaDisponibilidadeModel ITurmaDisponibilidadeModel { get; set; }

        [Newtonsoft.Json.JsonProperty("ITurmaDisponibilidadeDiaModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ITurmaDisponibilidadeDiaModel ITurmaDisponibilidadeDiaModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoModel IEventoModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoDeleteOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoDeleteOneByIdInputDto IEventoDeleteOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoFindAllResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoFindAllResultDto IEventoFindAllResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IPaginatedResultDto<IEventoFindOneResultDto>", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IPaginatedResultDtoOfIEventoFindOneResultDto IPaginatedResultDto<IEventoFindOneResultDto> { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoFindOneResultDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoFindOneResultDto IEventoFindOneResultDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoFindOneByIdInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoFindOneByIdInputDto IEventoFindOneByIdInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoCreateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoCreateDto IEventoCreateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoInputDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoInputDto IEventoInputDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEventoUpdateDto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEventoUpdateDto IEventoUpdateDto { get; set; }

        [Newtonsoft.Json.JsonProperty("IEtapaModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IEtapaModel IEtapaModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IDiaCalendarioModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IDiaCalendarioModel IDiaCalendarioModel { get; set; }

        [Newtonsoft.Json.JsonProperty("IAulaModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IAulaModel IAulaModel { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static Dtos FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<Dtos>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemArquivo
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("largura", Required = Newtonsoft.Json.Required.Always)]
        public double Largura { get; set; }

        [Newtonsoft.Json.JsonProperty("altura", Required = Newtonsoft.Json.Required.Always)]
        public double Altura { get; set; }

        [Newtonsoft.Json.JsonProperty("formato", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Formato { get; set; }

        [Newtonsoft.Json.JsonProperty("mimeType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MimeType { get; set; }

        [Newtonsoft.Json.JsonProperty("arquivo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public IArquivoFindOneByIdResultDto Arquivo { get; set; } = new IArquivoFindOneByIdResultDto();

        [Newtonsoft.Json.JsonProperty("dateCreated", Required = Newtonsoft.Json.Required.Always)]
        public IEntityDate DateCreated { get; set; }


        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemArquivo FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemArquivo>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa2
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa2 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa2>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa3
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa3 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa3>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa4
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa4 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa4>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa5
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa5 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa5>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemPerfil
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemPerfil FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemPerfil>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa6
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa6 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa6>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemPerfil2
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemPerfil2 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemPerfil2>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record Usuario
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static Usuario FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<Usuario>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa7
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa7 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa7>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa8
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa8 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa8>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa9
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa9 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa9>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa10
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa10 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa10>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa11
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa11 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa11>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadraoAula
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadraoAula FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadraoAula>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadraoAula2
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadraoAula2 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadraoAula2>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa12
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa12 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa12>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadraoAula3
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadraoAula3 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadraoAula3>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadraoAula4
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadraoAula4 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadraoAula4>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadraoAula5
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadraoAula5 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadraoAula5>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadrao
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadrao FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadrao>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa13
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa13 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa13>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadrao2
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadrao2 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadrao2>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record ImagemCapa14
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static ImagemCapa14 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<ImagemCapa14>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadrao3
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadrao3 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadrao3>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadrao4
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadrao4 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadrao4>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadrao5
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadrao5 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadrao5>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record IntervaloDeTempo
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static IntervaloDeTempo FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<IntervaloDeTempo>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.0.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial record AmbientePadrao6
    {


        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }
        public static AmbientePadrao6 FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<AmbientePadrao6>(data, new Newtonsoft.Json.JsonSerializerSettings { PreserveReferencesHandling = Newtonsoft.Json.PreserveReferencesHandling.All });

        }

    }
}