// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do one of these:
//
//    using QuickType;
//
//    var paginatedSortBy = PaginatedSortBy.FromJson(jsonString);
//    var paginatedResultMetaFilter = PaginatedResultMetaFilter.FromJson(jsonString);
//    var paginatedResultMeta = PaginatedResultMeta.FromJson(jsonString);
//    var paginatedResultLinks = PaginatedResultLinks.FromJson(jsonString);
//    var paginatedBaseInput = PaginatedBaseInput.FromJson(jsonString);
//    var paginatedInput = PaginatedInput.FromJson(jsonString);
//    var search = Search.FromJson(jsonString);
//    var arquivo = Arquivo.FromJson(jsonString);
//    var arquivoFindOneInput = ArquivoFindOneInput.FromJson(jsonString);
//    var arquivoFindOneResult = ArquivoFindOneResult.FromJson(jsonString);
//    var imagem = Imagem.FromJson(jsonString);
//    var imagemFindOneInput = ImagemFindOneInput.FromJson(jsonString);
//    var imagemFindOneFromImagemArquivoResult = ImagemFindOneFromImagemArquivoResult.FromJson(jsonString);
//    var imagemFindOneResult = ImagemFindOneResult.FromJson(jsonString);
//    var imagemArquivo = ImagemArquivo.FromJson(jsonString);
//    var imagemArquivoFindOneInput = ImagemArquivoFindOneInput.FromJson(jsonString);
//    var imagemArquivoFindOneFromImagemResult = ImagemArquivoFindOneFromImagemResult.FromJson(jsonString);
//    var imagemArquivoFindOneResult = ImagemArquivoFindOneResult.FromJson(jsonString);
//    var authLoginInput = AuthLoginInput.FromJson(jsonString);
//    var authRefreshInput = AuthRefreshInput.FromJson(jsonString);
//    var authWhoAmIResult = AuthWhoAmIResult.FromJson(jsonString);
//    var authSessionCredentials = AuthSessionCredentials.FromJson(jsonString);
//    var authSetInitialPasswordInput = AuthSetInitialPasswordInput.FromJson(jsonString);
//    var usuario = Usuario.FromJson(jsonString);
//    var usuarioFindOneInput = UsuarioFindOneInput.FromJson(jsonString);
//    var usuarioFindOneResult = UsuarioFindOneResult.FromJson(jsonString);
//    var usuarioInputCreate = UsuarioInputCreate.FromJson(jsonString);
//    var usuarioInputUpdate = UsuarioInputUpdate.FromJson(jsonString);
//    var vinculo = Vinculo.FromJson(jsonString);
//    var vinculoFindOneInput = VinculoFindOneInput.FromJson(jsonString);
//    var vinculoFindOneResult = VinculoFindOneResult.FromJson(jsonString);
//    var vinculoUpdate = VinculoUpdate.FromJson(jsonString);
//    var ambiente = Ambiente.FromJson(jsonString);
//    var ambienteFindOneInput = AmbienteFindOneInput.FromJson(jsonString);
//    var ambienteFindOneResult = AmbienteFindOneResult.FromJson(jsonString);
//    var ambienteInputCreate = AmbienteInputCreate.FromJson(jsonString);
//    var ambienteInputUpdate = AmbienteInputUpdate.FromJson(jsonString);
//    var ambienteFindAllResult = AmbienteFindAllResult.FromJson(jsonString);
//    var bloco = Bloco.FromJson(jsonString);
//    var blocoFindOneInput = BlocoFindOneInput.FromJson(jsonString);
//    var blocoFindOneResult = BlocoFindOneResult.FromJson(jsonString);
//    var blocoInputCreate = BlocoInputCreate.FromJson(jsonString);
//    var blocoInputUpdate = BlocoInputUpdate.FromJson(jsonString);
//    var blocoFindAllResult = BlocoFindAllResult.FromJson(jsonString);
//    var campus = Campus.FromJson(jsonString);
//    var campusFindOneInput = CampusFindOneInput.FromJson(jsonString);
//    var campusFindOneResult = CampusFindOneResult.FromJson(jsonString);
//    var campusInputCreate = CampusInputCreate.FromJson(jsonString);
//    var campusInputUpdate = CampusInputUpdate.FromJson(jsonString);
//    var campusFindAllResult = CampusFindAllResult.FromJson(jsonString);
//    var cidade = Cidade.FromJson(jsonString);
//    var cidadeFindOneInput = CidadeFindOneInput.FromJson(jsonString);
//    var cidadeFindOneResult = CidadeFindOneResult.FromJson(jsonString);
//    var cidadeFindAllResult = CidadeFindAllResult.FromJson(jsonString);
//    var endereco = Endereco.FromJson(jsonString);
//    var enderecoFindOneInput = EnderecoFindOneInput.FromJson(jsonString);
//    var enderecoFindOneResult = EnderecoFindOneResult.FromJson(jsonString);
//    var enderecoInput = EnderecoInput.FromJson(jsonString);
//    var estado = Estado.FromJson(jsonString);
//    var estadoFindOneInput = EstadoFindOneInput.FromJson(jsonString);
//    var estadoFindOneResult = EstadoFindOneResult.FromJson(jsonString);
//    var estadoFindAllResult = EstadoFindAllResult.FromJson(jsonString);
//    var reserva = Reserva.FromJson(jsonString);
//    var reservaFindOneInput = ReservaFindOneInput.FromJson(jsonString);
//    var reservaFindOneResult = ReservaFindOneResult.FromJson(jsonString);
//    var reservaInputCreate = ReservaInputCreate.FromJson(jsonString);
//    var reservaInputUpdate = ReservaInputUpdate.FromJson(jsonString);
//    var reservaFindAllResult = ReservaFindAllResult.FromJson(jsonString);
//    var curso = Curso.FromJson(jsonString);
//    var cursoFindOneInput = CursoFindOneInput.FromJson(jsonString);
//    var cursoFindOneResult = CursoFindOneResult.FromJson(jsonString);
//    var cursoInputCreate = CursoInputCreate.FromJson(jsonString);
//    var cursoInputUpdate = CursoInputUpdate.FromJson(jsonString);
//    var cursoFindAllResult = CursoFindAllResult.FromJson(jsonString);
//    var diario = Diario.FromJson(jsonString);
//    var diarioFindOneInput = DiarioFindOneInput.FromJson(jsonString);
//    var diarioFindOneResult = DiarioFindOneResult.FromJson(jsonString);
//    var diarioInputCreate = DiarioInputCreate.FromJson(jsonString);
//    var diarioInputUpdate = DiarioInputUpdate.FromJson(jsonString);
//    var diarioFindAllResult = DiarioFindAllResult.FromJson(jsonString);
//    var diarioProfessor = DiarioProfessor.FromJson(jsonString);
//    var diarioProfessorFindOneInput = DiarioProfessorFindOneInput.FromJson(jsonString);
//    var diarioProfessorFindOneResult = DiarioProfessorFindOneResult.FromJson(jsonString);
//    var diarioProfessorInputCreate = DiarioProfessorInputCreate.FromJson(jsonString);
//    var diarioProfessorInputUpdate = DiarioProfessorInputUpdate.FromJson(jsonString);
//    var diarioProfessorFindAllResult = DiarioProfessorFindAllResult.FromJson(jsonString);
//    var modalidade = Modalidade.FromJson(jsonString);
//    var modalidadeFindOneInput = ModalidadeFindOneInput.FromJson(jsonString);
//    var modalidadeFindOneResult = ModalidadeFindOneResult.FromJson(jsonString);
//    var modalidadeInputCreate = ModalidadeInputCreate.FromJson(jsonString);
//    var modalidadeInputUpdate = ModalidadeInputUpdate.FromJson(jsonString);
//    var modalidadeFindAllResult = ModalidadeFindAllResult.FromJson(jsonString);
//    var disciplina = Disciplina.FromJson(jsonString);
//    var disciplinaFindOneInput = DisciplinaFindOneInput.FromJson(jsonString);
//    var disciplinaFindOneResult = DisciplinaFindOneResult.FromJson(jsonString);
//    var disciplinaInputCreate = DisciplinaInputCreate.FromJson(jsonString);
//    var disciplinaInputUpdate = DisciplinaInputUpdate.FromJson(jsonString);
//    var disciplinaFindAllResult = DisciplinaFindAllResult.FromJson(jsonString);
//    var turma = Turma.FromJson(jsonString);
//    var turmaFindOneInput = TurmaFindOneInput.FromJson(jsonString);
//    var turmaFindOneResult = TurmaFindOneResult.FromJson(jsonString);
//    var turmaInputCreate = TurmaInputCreate.FromJson(jsonString);
//    var turmaInputUpdate = TurmaInputUpdate.FromJson(jsonString);
//    var turmaFindAllResult = TurmaFindAllResult.FromJson(jsonString);
//    var intervaloDeTempo = IntervaloDeTempo.FromJson(jsonString);
//    var intervaloDeTempoFindOneResult = IntervaloDeTempoFindOneResult.FromJson(jsonString);
//    var intervaloDeTempoInput = IntervaloDeTempoInput.FromJson(jsonString);
//    var calendarioLetivo = CalendarioLetivo.FromJson(jsonString);
//    var calendarioLetivoFindOneInput = CalendarioLetivoFindOneInput.FromJson(jsonString);
//    var calendarioLetivoFindOneResult = CalendarioLetivoFindOneResult.FromJson(jsonString);
//    var calendarioLetivoInputCreate = CalendarioLetivoInputCreate.FromJson(jsonString);
//    var calendarioLetivoInputUpdate = CalendarioLetivoInputUpdate.FromJson(jsonString);
//    var calendarioLetivoFindAllResult = CalendarioLetivoFindAllResult.FromJson(jsonString);
//    var diaCalendario = DiaCalendario.FromJson(jsonString);
//    var diaCalendarioFindOneInput = DiaCalendarioFindOneInput.FromJson(jsonString);
//    var diaCalendarioFindOneResult = DiaCalendarioFindOneResult.FromJson(jsonString);
//    var diaCalendarioInputCreate = DiaCalendarioInputCreate.FromJson(jsonString);
//    var diaCalendarioInputUpdate = DiaCalendarioInputUpdate.FromJson(jsonString);
//    var diaCalendarioFindAllResult = DiaCalendarioFindAllResult.FromJson(jsonString);
//    var etapa = Etapa.FromJson(jsonString);
//    var etapaFindOneInput = EtapaFindOneInput.FromJson(jsonString);
//    var etapaFindOneResult = EtapaFindOneResult.FromJson(jsonString);
//    var etapaInputCreate = EtapaInputCreate.FromJson(jsonString);
//    var etapaInputUpdate = EtapaInputUpdate.FromJson(jsonString);
//    var etapaFindAllResult = EtapaFindAllResult.FromJson(jsonString);
//    var aula = Aula.FromJson(jsonString);
//    var aulaFindOneInput = AulaFindOneInput.FromJson(jsonString);
//    var aulaFindOneResult = AulaFindOneResult.FromJson(jsonString);
//    var aulaInputCreate = AulaInputCreate.FromJson(jsonString);
//    var aulaInputUpdate = AulaInputUpdate.FromJson(jsonString);
//    var aulaFindAllResult = AulaFindAllResult.FromJson(jsonString);
//    var evento = Evento.FromJson(jsonString);
//    var eventoFindOneInput = EventoFindOneInput.FromJson(jsonString);
//    var eventoFindOneResult = EventoFindOneResult.FromJson(jsonString);
//    var eventoInputCreate = EventoInputCreate.FromJson(jsonString);
//    var eventoInputUpdate = EventoInputUpdate.FromJson(jsonString);
//    var eventoFindAllResult = EventoFindAllResult.FromJson(jsonString);
//    var turmaDisponibilidade = TurmaDisponibilidade.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneInput = TurmaDisponibilidadeFindOneInput.FromJson(jsonString);
//    var turmaDisponibilidadeFindOneResult = TurmaDisponibilidadeFindOneResult.FromJson(jsonString);
//    var turmaDisponibilidadeInputCreate = TurmaDisponibilidadeInputCreate.FromJson(jsonString);
//    var turmaDisponibilidadeInputUpdate = TurmaDisponibilidadeInputUpdate.FromJson(jsonString);
//    var turmaDisponibilidadeFindAllResult = TurmaDisponibilidadeFindAllResult.FromJson(jsonString);
//    var turmaDisponibilidadeDia = TurmaDisponibilidadeDia.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindOneInput = TurmaDisponibilidadeDiaFindOneInput.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindOneResult = TurmaDisponibilidadeDiaFindOneResult.FromJson(jsonString);
//    var turmaDisponibilidadeDiaInputCreate = TurmaDisponibilidadeDiaInputCreate.FromJson(jsonString);
//    var turmaDisponibilidadeDiaInputUpdate = TurmaDisponibilidadeDiaInputUpdate.FromJson(jsonString);
//    var turmaDisponibilidadeDiaFindAllResult = TurmaDisponibilidadeDiaFindAllResult.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class PaginatedBaseInput
    {
        [JsonProperty("limit")]
        public long? Limit { get; set; }

        [JsonProperty("page")]
        public long? Page { get; set; }

        [JsonProperty("search")]
        public string Search { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class PaginatedInput
    {
        /// <summary>
        /// Filtros
        /// </summary>
        [JsonProperty("filter")]
        public PaginatedResultMetaFilter[] Filter { get; set; }

        [JsonProperty("limit")]
        public long? Limit { get; set; }

        [JsonProperty("page")]
        public long? Page { get; set; }

        [JsonProperty("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonProperty("sortBy")]
        public PaginatedSortBy[] SortBy { get; set; }
    }

    /// <summary>
    /// Configuração de filtro por restrições de uma propriedade.
    ///
    /// Ordenamento de uma propriedade.
    /// </summary>
    public partial class PaginatedResultMetaFilter
    {
        /// <summary>
        /// Propriedade filtrada.
        /// </summary>
        [JsonProperty("property")]
        public string Property { get; set; }

        /// <summary>
        /// Restrições de filtragem
        /// </summary>
        [JsonProperty("restrictions")]
        public string[] Restrictions { get; set; }
    }

    /// <summary>
    /// Configuração de ordenamento por uma propriedade.
    ///
    /// Ordenamento de uma propriedade.
    /// </summary>
    public partial class PaginatedSortBy
    {
        /// <summary>
        /// Modo de ordenação.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Propriedade ordenada.
        /// </summary>
        [JsonProperty("property")]
        public string Property { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class Search
    {
        /// <summary>
        /// Filtros.
        /// </summary>
        [JsonProperty("filters", NullValueHandling = NullValueHandling.Ignore)]
        public string[][] Filters { get; set; }

        /// <summary>
        /// Limite de resultados por página.
        /// </summary>
        [JsonProperty("limit", NullValueHandling = NullValueHandling.Ignore)]
        public long? Limit { get; set; }

        /// <summary>
        /// Página.
        /// </summary>
        [JsonProperty("page", NullValueHandling = NullValueHandling.Ignore)]
        public long? Page { get; set; }

        /// <summary>
        /// Busca textual.
        /// </summary>
        [JsonProperty("search", NullValueHandling = NullValueHandling.Ignore)]
        public string SearchSearch { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonProperty("sortBy", NullValueHandling = NullValueHandling.Ignore)]
        public string[] SortBy { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Arquivo por ID.
    /// </summary>
    public partial class ArquivoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Arquivo.
    /// </summary>
    public partial class ArquivoFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Mime-type.
        /// </summary>
        [JsonProperty("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho (em bytes).
        /// </summary>
        [JsonProperty("sizeBytes")]
        public long SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento.
        /// </summary>
        [JsonProperty("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Imagem por ID.
    /// </summary>
    public partial class ImagemFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagemArquivo de um Imagem.
    /// </summary>
    public partial class ImagemFindOneFromImagemArquivoResult
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Imagem.
    /// </summary>
    public partial class ImagemFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição.
        /// </summary>
        [JsonProperty("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Versões.
        /// </summary>
        [JsonProperty("versoes")]
        public ImagemArquivo[] Versoes { get; set; }
    }

    /// <summary>
    /// Versão da imagem.
    ///
    /// Visão completa de uma versão de uma imagem.
    /// </summary>
    public partial class ImagemArquivo
    {
        [JsonProperty("altura")]
        public long? Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonProperty("arquivo")]
        public Arquivo Arquivo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem.
        /// </summary>
        [JsonProperty("imagem")]
        public Imagem Imagem { get; set; }

        [JsonProperty("largura")]
        public long? Largura { get; set; }

        /// <summary>
        /// Mime Type da imagem.
        /// </summary>
        [JsonProperty("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Visão completa de um Imagem.
    ///
    /// Imagem.
    ///
    /// Imagem de capa
    ///
    /// Imagem de perfil
    /// </summary>
    public partial class Imagem
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição.
        /// </summary>
        [JsonProperty("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Versões.
        /// </summary>
        [JsonProperty("versoes")]
        public ImagemArquivo[] Versoes { get; set; }
    }

    /// <summary>
    /// Visão completa de um Arquivo.
    ///
    /// Arquivo.
    /// </summary>
    public partial class Arquivo
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Mime-type.
        /// </summary>
        [JsonProperty("mimeType")]
        public string MimeType { get; set; }

        /// <summary>
        /// Nome.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }

        /// <summary>
        /// Tamanho (em bytes).
        /// </summary>
        [JsonProperty("sizeBytes")]
        public long SizeBytes { get; set; }

        /// <summary>
        /// Estratégia de armazenamento.
        /// </summary>
        [JsonProperty("storageType")]
        public string StorageType { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma versão de uma imagem por ID.
    /// </summary>
    public partial class ImagemArquivoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOneFromImagem de um ImagemArquivo.
    /// </summary>
    public partial class ImagemArquivoFindOneFromImagemResult
    {
        [JsonProperty("altura")]
        public long? Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonProperty("arquivo")]
        public Arquivo Arquivo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("largura")]
        public long? Largura { get; set; }

        /// <summary>
        /// Mime Type da imagem.
        /// </summary>
        [JsonProperty("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um ImagemArquivo.
    /// </summary>
    public partial class ImagemArquivoFindOneResult
    {
        [JsonProperty("altura")]
        public long? Altura { get; set; }

        /// <summary>
        /// Arquivo.
        /// </summary>
        [JsonProperty("arquivo")]
        public Arquivo Arquivo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Formato da imagem.
        /// </summary>
        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Imagem.
        /// </summary>
        [JsonProperty("imagem")]
        public Imagem Imagem { get; set; }

        [JsonProperty("largura")]
        public long? Largura { get; set; }

        /// <summary>
        /// Mime Type da imagem.
        /// </summary>
        [JsonProperty("mimeType")]
        public string MimeType { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class AuthLoginInput
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonProperty("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Senha do usuário.
        /// </summary>
        [JsonProperty("senha")]
        public string Senha { get; set; }
    }

    /// <summary>
    /// Dados de entrada para obter as credenciais de sessão por meio de login refresh.
    /// </summary>
    public partial class AuthRefreshInput
    {
        /// <summary>
        /// Token de refresh.
        /// </summary>
        [JsonProperty("refreshToken")]
        public string RefreshToken { get; set; }
    }

    /// <summary>
    /// Informações sobre o ator.
    /// </summary>
    public partial class AuthWhoAmIResult
    {
        [JsonProperty("usuario")]
        public UsuarioFindOneResult Usuario { get; set; }
    }

    /// <summary>
    /// Usuário autenticado.
    ///
    /// Visão FindOne de um Usuário.
    /// </summary>
    public partial class UsuarioFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonProperty("email")]
        public string Email { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Indentifica é um super usuário.
        /// </summary>
        [JsonProperty("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonProperty("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Vínculos ativos do Usuário.
        /// </summary>
        [JsonProperty("vinculosAtivos")]
        public Vinculo[] VinculosAtivos { get; set; }
    }

    /// <summary>
    /// Usuário associado ao vínculo.
    ///
    /// Visão completa de um Usuário.
    ///
    /// Usuário que fez a reserva.
    /// </summary>
    public partial class Usuario
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonProperty("email")]
        public string Email { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        [JsonProperty("imagemPerfil")]
        public Imagem ImagemPerfil { get; set; }

        /// <summary>
        /// Indentifica é um super usuário.
        /// </summary>
        [JsonProperty("isSuperUser")]
        public bool IsSuperUser { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonProperty("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Vínculos ativos do Usuário.
        /// </summary>
        [JsonProperty("vinculosAtivos")]
        public Vinculo[] VinculosAtivos { get; set; }
    }

    /// <summary>
    /// Vínculos ativos do Usuário.
    ///
    /// Visão completa de um Vínculo.
    ///
    /// Vínculo do usuário ao campus.
    /// </summary>
    public partial class Vinculo
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonProperty("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonProperty("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonProperty("usuario")]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Campus associado ao vínculo.
    ///
    /// Visão completa de um Campus.
    ///
    /// Campus.
    ///
    /// Campus que o curso pertence.
    /// </summary>
    public partial class Campus
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonProperty("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonProperty("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonProperty("endereco")]
        public Endereco Endereco { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonProperty("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonProperty("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Endereço do Campus
    ///
    /// Visão completa de um Endereco.
    /// </summary>
    public partial class Endereco
    {
        /// <summary>
        /// Bairro
        /// </summary>
        [JsonProperty("bairro")]
        public string Bairro { get; set; }

        [JsonProperty("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade
        /// </summary>
        [JsonProperty("cidade")]
        public Cidade Cidade { get; set; }

        [JsonProperty("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro
        /// </summary>
        [JsonProperty("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número
        /// </summary>
        [JsonProperty("numero")]
        public long Numero { get; set; }

        [JsonProperty("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Cidade
    ///
    /// Visão completa de uma Cidade.
    /// </summary>
    public partial class Cidade
    {
        /// <summary>
        /// Estado da Cidade.
        /// </summary>
        [JsonProperty("estado")]
        public Estado Estado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da Cidade.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Estado da Cidade.
    ///
    /// Visão completa de um Estado.
    /// </summary>
    public partial class Estado
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do Estado.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do Estado.
        /// </summary>
        [JsonProperty("sigla")]
        public string Sigla { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class AuthSessionCredentials
    {
        [JsonProperty("access_token")]
        public string AccessToken { get; set; }

        [JsonProperty("expires_at")]
        public long? ExpiresAt { get; set; }

        [JsonProperty("expires_in")]
        public long? ExpiresIn { get; set; }

        [JsonProperty("id_token")]
        public string IdToken { get; set; }

        [JsonProperty("refresh_token")]
        public string RefreshToken { get; set; }

        [JsonProperty("scope")]
        public string Scope { get; set; }

        [JsonProperty("session_state")]
        public string SessionState { get; set; }

        [JsonProperty("token_type")]
        public string TokenType { get; set; }
    }

    /// <summary>
    /// Define a senha inicial do usuário.
    /// </summary>
    public partial class AuthSetInitialPasswordInput
    {
        /// <summary>
        /// Matrícula SIAPE.
        /// </summary>
        [JsonProperty("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nova senha.
        /// </summary>
        [JsonProperty("senha")]
        public string Senha { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Usuario por ID.
    /// </summary>
    public partial class UsuarioFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Usuario.
    /// </summary>
    public partial class UsuarioInputCreate
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonProperty("email")]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonProperty("matriculaSiape")]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Usuario.
    /// </summary>
    public partial class UsuarioInputUpdate
    {
        /// <summary>
        /// E-mail do usuário.
        /// </summary>
        [JsonProperty("email", NullValueHandling = NullValueHandling.Ignore)]
        public string Email { get; set; }

        /// <summary>
        /// Matrícula Siape do usuário.
        /// </summary>
        [JsonProperty("matriculaSiape", NullValueHandling = NullValueHandling.Ignore)]
        public string MatriculaSiape { get; set; }

        /// <summary>
        /// Nome do usuário.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Vínculo por ID.
    /// </summary>
    public partial class VinculoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Vínculo.
    /// </summary>
    public partial class VinculoFindOneResult
    {
        /// <summary>
        /// Indica se o vínculo está ativo.
        /// </summary>
        [JsonProperty("ativo")]
        public bool Ativo { get; set; }

        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Cargo do usuário no vínculo.
        /// </summary>
        [JsonProperty("cargo")]
        public string Cargo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonProperty("usuario")]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a alteração de vínculo de um Usuário a um Campus.
    /// </summary>
    public partial class VinculoUpdate
    {
        /// <summary>
        /// Campus associado ao vínculo.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Cargos do usuário no vínculo.
        /// </summary>
        [JsonProperty("cargos")]
        public string[] Cargos { get; set; }

        /// <summary>
        /// Usuário associado ao vínculo.
        /// </summary>
        [JsonProperty("usuario")]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Ambiente por ID.
    /// </summary>
    public partial class AmbienteFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um ambiente.
    /// </summary>
    public partial class AmbienteInputCreate
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonProperty("bloco")]
        public Bloco Bloco { get; set; }

        [JsonProperty("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonProperty("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonProperty("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Bloco que o ambiente/sala pertence.
    ///
    /// Visão completa de um Bloco.
    /// </summary>
    public partial class Bloco
    {
        /// <summary>
        /// Ambientes.
        /// </summary>
        [JsonProperty("ambientes")]
        public Ambiente[] Ambientes { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonProperty("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão completa de um Ambiente.
    ///
    /// Ambiente.
    ///
    /// Ambiente que foi reservado.
    ///
    /// Ambiente padrão.
    ///
    /// Ambiente padrão da sala de aula.
    ///
    /// Ambiente associado à aula.
    /// </summary>
    public partial class Ambiente
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonProperty("bloco")]
        public Bloco Bloco { get; set; }

        [JsonProperty("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonProperty("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonProperty("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um ambiente.
    /// </summary>
    public partial class AmbienteInputUpdate
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonProperty("bloco", NullValueHandling = NullValueHandling.Ignore)]
        public Bloco Bloco { get; set; }

        [JsonProperty("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonProperty("codigo", NullValueHandling = NullValueHandling.Ignore)]
        public string Codigo { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonProperty("descricao", NullValueHandling = NullValueHandling.Ignore)]
        public string Descricao { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Ambientes.
    /// </summary>
    public partial class AmbienteFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public AmbienteFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Ambiente.
    ///
    /// Item da busca.
    /// </summary>
    public partial class AmbienteFindOneResult
    {
        /// <summary>
        /// Bloco que o ambiente/sala pertence.
        /// </summary>
        [JsonProperty("bloco")]
        public Bloco Bloco { get; set; }

        [JsonProperty("capacidade")]
        public long? Capacidade { get; set; }

        /// <summary>
        /// Código do ambiente/sala.
        /// </summary>
        [JsonProperty("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Descrição do ambiente/sala.
        /// </summary>
        [JsonProperty("descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Nome do ambiente/sala.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }
    }

    /// <summary>
    /// Unnamed View
    ///
    /// Links da busca.
    /// </summary>
    public partial class PaginatedResultLinks
    {
        [JsonProperty("current")]
        public string Current { get; set; }

        [JsonProperty("first")]
        public string First { get; set; }

        [JsonProperty("last")]
        public string Last { get; set; }

        [JsonProperty("next")]
        public string Next { get; set; }

        [JsonProperty("previous")]
        public string Previous { get; set; }
    }

    /// <summary>
    /// Metadados dos resultados de busca.
    ///
    /// Metadados da busca.
    /// </summary>
    public partial class PaginatedResultMeta
    {
        /// <summary>
        /// Página atual.
        /// </summary>
        [JsonProperty("currentPage")]
        public long CurrentPage { get; set; }

        /// <summary>
        /// Filtros
        /// </summary>
        [JsonProperty("filter")]
        public PaginatedResultMetaFilter[] Filter { get; set; }

        /// <summary>
        /// Quantidade de itens por página.
        /// </summary>
        [JsonProperty("itemsPerPage")]
        public long ItemsPerPage { get; set; }

        /// <summary>
        /// Termo textual da busca.
        /// </summary>
        [JsonProperty("search")]
        public string Search { get; set; }

        /// <summary>
        /// Ordenação.
        /// </summary>
        [JsonProperty("sortBy")]
        public PaginatedSortBy[] SortBy { get; set; }

        /// <summary>
        /// Total de itens.
        /// </summary>
        [JsonProperty("totalItems")]
        public long TotalItems { get; set; }

        /// <summary>
        /// Quantidade total de páginas.
        /// </summary>
        [JsonProperty("totalPages")]
        public long TotalPages { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Bloco por ID.
    /// </summary>
    public partial class BlocoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Bloco.
    /// </summary>
    public partial class BlocoInputCreate
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonProperty("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Bloco.
    /// </summary>
    public partial class BlocoInputUpdate
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus", NullValueHandling = NullValueHandling.Ignore)]
        public Campus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonProperty("codigo", NullValueHandling = NullValueHandling.Ignore)]
        public string Codigo { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Blocos.
    /// </summary>
    public partial class BlocoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public BlocoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Bloco.
    ///
    /// Item da busca.
    /// </summary>
    public partial class BlocoFindOneResult
    {
        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Código do Bloco.
        /// </summary>
        [JsonProperty("codigo")]
        public string Codigo { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Nome do Bloco.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Campus por ID.
    /// </summary>
    public partial class CampusFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Campus.
    /// </summary>
    public partial class CampusInputCreate
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonProperty("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonProperty("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonProperty("endereco")]
        public Endereco Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonProperty("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonProperty("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Campus.
    /// </summary>
    public partial class CampusInputUpdate
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonProperty("apelido", NullValueHandling = NullValueHandling.Ignore)]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonProperty("cnpj", NullValueHandling = NullValueHandling.Ignore)]
        public string Cnpj { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonProperty("endereco", NullValueHandling = NullValueHandling.Ignore)]
        public Endereco Endereco { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonProperty("nomeFantasia", NullValueHandling = NullValueHandling.Ignore)]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonProperty("razaoSocial", NullValueHandling = NullValueHandling.Ignore)]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Campi.
    /// </summary>
    public partial class CampusFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public CampusFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Campus.
    ///
    /// Item da busca.
    /// </summary>
    public partial class CampusFindOneResult
    {
        /// <summary>
        /// Apelido do Campus.
        /// </summary>
        [JsonProperty("apelido")]
        public string Apelido { get; set; }

        /// <summary>
        /// CNPJ do Campus.
        /// </summary>
        [JsonProperty("cnpj")]
        public string Cnpj { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Endereço do Campus
        /// </summary>
        [JsonProperty("endereco")]
        public Endereco Endereco { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome fantasia do Campus.
        /// </summary>
        [JsonProperty("nomeFantasia")]
        public string NomeFantasia { get; set; }

        /// <summary>
        /// Razão social do Campus.
        /// </summary>
        [JsonProperty("razaoSocial")]
        public string RazaoSocial { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Cidade por ID.
    /// </summary>
    public partial class CidadeFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Cidades.
    /// </summary>
    public partial class CidadeFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public CidadeFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Cidade.
    ///
    /// Item da busca.
    /// </summary>
    public partial class CidadeFindOneResult
    {
        /// <summary>
        /// Estado da Cidade.
        /// </summary>
        [JsonProperty("estado")]
        public Estado Estado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial da Cidade.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Endereco por ID.
    /// </summary>
    public partial class EnderecoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Endereco.
    /// </summary>
    public partial class EnderecoFindOneResult
    {
        /// <summary>
        /// Bairro
        /// </summary>
        [JsonProperty("bairro")]
        public string Bairro { get; set; }

        [JsonProperty("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade
        /// </summary>
        [JsonProperty("cidade")]
        public Cidade Cidade { get; set; }

        [JsonProperty("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Logradouro
        /// </summary>
        [JsonProperty("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número
        /// </summary>
        [JsonProperty("numero")]
        public long Numero { get; set; }

        [JsonProperty("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um Endereco.
    /// </summary>
    public partial class EnderecoInput
    {
        /// <summary>
        /// Bairro
        /// </summary>
        [JsonProperty("bairro")]
        public string Bairro { get; set; }

        [JsonProperty("cep")]
        public string Cep { get; set; }

        /// <summary>
        /// Cidade
        /// </summary>
        [JsonProperty("cidade")]
        public Cidade Cidade { get; set; }

        [JsonProperty("complemento")]
        public string Complemento { get; set; }

        /// <summary>
        /// Logradouro
        /// </summary>
        [JsonProperty("logradouro")]
        public string Logradouro { get; set; }

        /// <summary>
        /// Número
        /// </summary>
        [JsonProperty("numero")]
        public long Numero { get; set; }

        [JsonProperty("pontoReferencia")]
        public string PontoReferencia { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Estado por ID.
    /// </summary>
    public partial class EstadoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public long Id { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Estados.
    /// </summary>
    public partial class EstadoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public EstadoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Estado.
    ///
    /// Item da busca.
    /// </summary>
    public partial class EstadoFindOneResult
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public long Id { get; set; }

        /// <summary>
        /// Nome oficial do Estado.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Sigla do Estado.
        /// </summary>
        [JsonProperty("sigla")]
        public string Sigla { get; set; }
    }

    /// <summary>
    /// Visão completa de uma Reserva.
    /// </summary>
    public partial class Reserva
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonProperty("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonProperty("situacao")]
        public string Situacao { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonProperty("usuario")]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Reserva por ID.
    /// </summary>
    public partial class ReservaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Reserva.
    /// </summary>
    public partial class ReservaInputCreate
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonProperty("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonProperty("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonProperty("situacao")]
        public string Situacao { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonProperty("usuario")]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Reserva.
    /// </summary>
    public partial class ReservaInputUpdate
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonProperty("ambiente", NullValueHandling = NullValueHandling.Ignore)]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonProperty("dataInicio", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonProperty("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonProperty("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonProperty("situacao", NullValueHandling = NullValueHandling.Ignore)]
        public string Situacao { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonProperty("usuario", NullValueHandling = NullValueHandling.Ignore)]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Reservas.
    /// </summary>
    public partial class ReservaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public ReservaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Reserva.
    ///
    /// Item da busca.
    /// </summary>
    public partial class ReservaFindOneResult
    {
        /// <summary>
        /// Ambiente que foi reservado.
        /// </summary>
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data e hora de início da reserva.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonProperty("dataTermino")]
        public DateTimeOffset? DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("motivo")]
        public string Motivo { get; set; }

        /// <summary>
        /// Situação da reserva.
        /// </summary>
        [JsonProperty("situacao")]
        public string Situacao { get; set; }

        [JsonProperty("tipo")]
        public string Tipo { get; set; }

        /// <summary>
        /// Usuário que fez a reserva.
        /// </summary>
        [JsonProperty("usuario")]
        public Usuario Usuario { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Curso por ID.
    /// </summary>
    public partial class CursoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Curso.
    /// </summary>
    public partial class CursoInputCreate
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonProperty("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Modalidade a que o curso pertence.
    ///
    /// Unnamed View
    ///
    /// Modalidade.
    /// </summary>
    public partial class Modalidade
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonProperty("slug")]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Curso.
    /// </summary>
    public partial class CursoInputUpdate
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonProperty("campus", NullValueHandling = NullValueHandling.Ignore)]
        public Campus Campus { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonProperty("modalidade", NullValueHandling = NullValueHandling.Ignore)]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonProperty("nomeAbreviado", NullValueHandling = NullValueHandling.Ignore)]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Cursos.
    /// </summary>
    public partial class CursoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public CursoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Curso.
    ///
    /// Item da busca.
    /// </summary>
    public partial class CursoFindOneResult
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonProperty("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Diario por ID.
    /// </summary>
    public partial class DiarioFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Diario.
    /// </summary>
    public partial class DiarioInputCreate
    {
        [JsonProperty("ambientePadrao")]
        public Ambiente AmbientePadrao { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonProperty("disciplina")]
        public Disciplina Disciplina { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Disciplina vinculada ao diário.
    ///
    /// Unnamed View
    /// </summary>
    public partial class Disciplina
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonProperty("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonProperty("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Turma vinculada ao diário.
    ///
    /// Unnamed View
    ///
    /// Turma.
    /// </summary>
    public partial class Turma
    {
        [JsonProperty("ambientePadraoAula")]
        public Ambiente AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonProperty("curso")]
        public Curso Curso { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonProperty("periodo")]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Unnamed View
    ///
    /// Curso da Turma.
    /// </summary>
    public partial class Curso
    {
        /// <summary>
        /// Campus que o curso pertence.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Modalidade a que o curso pertence.
        /// </summary>
        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do curso.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado do curso.
        /// </summary>
        [JsonProperty("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Diario.
    /// </summary>
    public partial class DiarioInputUpdate
    {
        [JsonProperty("ambientePadrao")]
        public Ambiente AmbientePadrao { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonProperty("disciplina", NullValueHandling = NullValueHandling.Ignore)]
        public Disciplina Disciplina { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonProperty("turma", NullValueHandling = NullValueHandling.Ignore)]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Diários.
    /// </summary>
    public partial class DiarioFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public DiarioFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Diario.
    ///
    /// Item da busca.
    /// </summary>
    public partial class DiarioFindOneResult
    {
        [JsonProperty("ambientePadrao")]
        public Ambiente AmbientePadrao { get; set; }

        /// <summary>
        /// Ano do diário.
        /// </summary>
        [JsonProperty("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonProperty("disciplina")]
        public Disciplina Disciplina { get; set; }

        [JsonProperty("etapa")]
        public string Etapa { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonProperty("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class DiarioProfessor
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonProperty("diario")]
        public Diario Diario { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonProperty("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonProperty("vinculo")]
        public Vinculo Vinculo { get; set; }
    }

    /// <summary>
    /// Unnamed View
    ///
    /// Diário vinculado.
    ///
    /// Diário associado à aula.
    /// </summary>
    public partial class Diario
    {
        [JsonProperty("ambientePadrao")]
        public Ambiente AmbientePadrao { get; set; }

        /// <summary>
        /// Ano do diário.
        /// </summary>
        [JsonProperty("ano")]
        public long Ano { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Disciplina vinculada ao diário.
        /// </summary>
        [JsonProperty("disciplina")]
        public Disciplina Disciplina { get; set; }

        [JsonProperty("etapa")]
        public string Etapa { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Situação do diário.
        /// </summary>
        [JsonProperty("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Turma vinculada ao diário.
        /// </summary>
        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiarioProfessor por ID.
    /// </summary>
    public partial class DiarioProfessorFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorInputCreate
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonProperty("diario")]
        public Diario Diario { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonProperty("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonProperty("vinculo")]
        public Vinculo Vinculo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiarioProfessor.
    /// </summary>
    public partial class DiarioProfessorInputUpdate
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonProperty("diario", NullValueHandling = NullValueHandling.Ignore)]
        public Diario Diario { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonProperty("situacao", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonProperty("vinculo", NullValueHandling = NullValueHandling.Ignore)]
        public Vinculo Vinculo { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Diários.
    /// </summary>
    public partial class DiarioProfessorFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public DiarioProfessorFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiarioProfessor.
    ///
    /// Item da busca.
    /// </summary>
    public partial class DiarioProfessorFindOneResult
    {
        /// <summary>
        /// Diário vinculado.
        /// </summary>
        [JsonProperty("diario")]
        public Diario Diario { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Situação do vínculo.
        /// </summary>
        [JsonProperty("situacao")]
        public bool Situacao { get; set; }

        /// <summary>
        /// Vínculo do usuário ao campus.
        /// </summary>
        [JsonProperty("vinculo")]
        public Vinculo Vinculo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Modalidade por ID.
    /// </summary>
    public partial class ModalidadeFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Modalidade.
    /// </summary>
    public partial class ModalidadeInputCreate
    {
        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonProperty("slug")]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Modalidade.
    /// </summary>
    public partial class ModalidadeInputUpdate
    {
        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonProperty("slug", NullValueHandling = NullValueHandling.Ignore)]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Modalidades.
    /// </summary>
    public partial class ModalidadeFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public ModalidadeFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Modalidade.
    ///
    /// Item da busca.
    /// </summary>
    public partial class ModalidadeFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da modalidade.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Slug da modalidade.
        /// </summary>
        [JsonProperty("slug")]
        public string Slug { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Disciplina por ID.
    /// </summary>
    public partial class DisciplinaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Disciplina.
    /// </summary>
    public partial class DisciplinaInputCreate
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonProperty("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonProperty("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Disciplina.
    /// </summary>
    public partial class DisciplinaInputUpdate
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonProperty("cargaHoraria", NullValueHandling = NullValueHandling.Ignore)]
        public long? CargaHoraria { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonProperty("nomeAbreviado", NullValueHandling = NullValueHandling.Ignore)]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Disciplinas.
    /// </summary>
    public partial class DisciplinaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public DisciplinaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Disciplina.
    ///
    /// Item da busca.
    /// </summary>
    public partial class DisciplinaFindOneResult
    {
        /// <summary>
        /// Carga horária da disciplina.
        /// </summary>
        [JsonProperty("cargaHoraria")]
        public long CargaHoraria { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Nome da disciplina.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }

        /// <summary>
        /// Nome abreviado da disciplina.
        /// </summary>
        [JsonProperty("nomeAbreviado")]
        public string NomeAbreviado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Turma por ID.
    /// </summary>
    public partial class TurmaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Turma.
    /// </summary>
    public partial class TurmaInputCreate
    {
        [JsonProperty("ambientePadraoAula")]
        public Ambiente AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonProperty("curso")]
        public Curso Curso { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonProperty("periodo")]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Turma.
    /// </summary>
    public partial class TurmaInputUpdate
    {
        [JsonProperty("ambientePadraoAula")]
        public Ambiente AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonProperty("curso", NullValueHandling = NullValueHandling.Ignore)]
        public Curso Curso { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonProperty("periodo", NullValueHandling = NullValueHandling.Ignore)]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Turmas.
    /// </summary>
    public partial class TurmaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public TurmaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Turma.
    ///
    /// Item da busca.
    /// </summary>
    public partial class TurmaFindOneResult
    {
        [JsonProperty("ambientePadraoAula")]
        public Ambiente AmbientePadraoAula { get; set; }

        /// <summary>
        /// Curso da Turma.
        /// </summary>
        [JsonProperty("curso")]
        public Curso Curso { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("imagemCapa")]
        public Imagem ImagemCapa { get; set; }

        /// <summary>
        /// Período do Turma.
        /// </summary>
        [JsonProperty("periodo")]
        public string Periodo { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um IntervaloDeTempo.
    /// </summary>
    public partial class IntervaloDeTempoFindOneResult
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonProperty("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonProperty("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para um IntervaloDeTempo.
    /// </summary>
    public partial class IntervaloDeTempoInput
    {
        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonProperty("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonProperty("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um CalendarioLetivo por ID.
    /// </summary>
    public partial class CalendarioLetivoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um CalendarioLetivo.
    /// </summary>
    public partial class CalendarioLetivoInputCreate
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonProperty("ano")]
        public string Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um CalendarioLetivo.
    /// </summary>
    public partial class CalendarioLetivoInputUpdate
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonProperty("ano", NullValueHandling = NullValueHandling.Ignore)]
        public string Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus", NullValueHandling = NullValueHandling.Ignore)]
        public Campus Campus { get; set; }

        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonProperty("nome", NullValueHandling = NullValueHandling.Ignore)]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Resultados da busca a CalendarioLetivos.
    /// </summary>
    public partial class CalendarioLetivoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public CalendarioLetivoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um CalendarioLetivo.
    ///
    /// Item da busca.
    /// </summary>
    public partial class CalendarioLetivoFindOneResult
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonProperty("ano")]
        public string Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Visão completa de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendario
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonProperty("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonProperty("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonProperty("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de um CalendarioLetivo.
    ///
    /// Calendario.
    /// </summary>
    public partial class CalendarioLetivo
    {
        /// <summary>
        /// Ano do calendário letivo.
        /// </summary>
        [JsonProperty("ano")]
        public string Ano { get; set; }

        /// <summary>
        /// Campus.
        /// </summary>
        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("modalidade")]
        public Modalidade Modalidade { get; set; }

        /// <summary>
        /// Nome do calendário letivo.
        /// </summary>
        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um DiaCalendario por ID.
    /// </summary>
    public partial class DiaCalendarioFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioInputCreate
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonProperty("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonProperty("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonProperty("feriado")]
        public bool Feriado { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um DiaCalendario.
    /// </summary>
    public partial class DiaCalendarioInputUpdate
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Data { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonProperty("diaLetivo", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonProperty("feriado", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Feriado { get; set; }
    }

    /// <summary>
    /// Resultados da busca a DiaCalendarios.
    /// </summary>
    public partial class DiaCalendarioFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public DiaCalendarioFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um DiaCalendario.
    ///
    /// Item da busca.
    /// </summary>
    public partial class DiaCalendarioFindOneResult
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        /// <summary>
        /// Data.
        /// </summary>
        [JsonProperty("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Define que o dia é letivo.
        /// </summary>
        [JsonProperty("diaLetivo")]
        public bool DiaLetivo { get; set; }

        /// <summary>
        /// Define que o dia é feriado.
        /// </summary>
        [JsonProperty("feriado")]
        public bool Feriado { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Visão completa de um Etapa.
    /// </summary>
    public partial class Etapa
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Etapa por ID.
    /// </summary>
    public partial class EtapaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Etapa.
    /// </summary>
    public partial class EtapaInputCreate
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        [JsonProperty("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Etapa.
    /// </summary>
    public partial class EtapaInputUpdate
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonProperty("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Etapas.
    /// </summary>
    public partial class EtapaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public EtapaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Etapa.
    ///
    /// Item da busca.
    /// </summary>
    public partial class EtapaFindOneResult
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("numero")]
        public long? Numero { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class Aula
    {
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonProperty("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonProperty("diario")]
        public Diario Diario { get; set; }

        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Visão completa de um IntervaloDeTempo.
    ///
    /// Intervalo de Tempo associado à aula.
    ///
    /// Intervalo de tempo.
    /// </summary>
    public partial class IntervaloDeTempo
    {
        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo termina.
        /// </summary>
        [JsonProperty("periodoFim")]
        public DateTimeOffset PeriodoFim { get; set; }

        /// <summary>
        /// Horário que o intervalo de tempo inicia.
        /// </summary>
        [JsonProperty("periodoInicio")]
        public DateTimeOffset PeriodoInicio { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma Aula por ID.
    /// </summary>
    public partial class AulaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma Aula.
    /// </summary>
    public partial class AulaInputCreate
    {
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonProperty("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonProperty("diario")]
        public Diario Diario { get; set; }

        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma Aula.
    /// </summary>
    public partial class AulaInputUpdate
    {
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Data { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonProperty("diario", NullValueHandling = NullValueHandling.Ignore)]
        public Diario Diario { get; set; }

        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonProperty("intervaloDeTempo", NullValueHandling = NullValueHandling.Ignore)]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Aulas.
    /// </summary>
    public partial class AulaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public AulaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma Aula.
    ///
    /// Item da busca.
    /// </summary>
    public partial class AulaFindOneResult
    {
        [JsonProperty("ambiente")]
        public Ambiente Ambiente { get; set; }

        /// <summary>
        /// Data da aula.
        /// </summary>
        [JsonProperty("data")]
        public DateTimeOffset Data { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// Diário associado à aula.
        /// </summary>
        [JsonProperty("diario")]
        public Diario Diario { get; set; }

        [JsonProperty("formato")]
        public string Formato { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// Intervalo de Tempo associado à aula.
        /// </summary>
        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }
    }

    /// <summary>
    /// Visão completa de um Evento.
    /// </summary>
    public partial class Evento
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar um Evento por ID.
    /// </summary>
    public partial class EventoFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de um Evento.
    /// </summary>
    public partial class EventoInputCreate
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de um Evento.
    /// </summary>
    public partial class EventoInputUpdate
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DataTermino { get; set; }

        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Resultados da busca a Eventos.
    /// </summary>
    public partial class EventoFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public EventoFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de um Evento.
    ///
    /// Item da busca.
    /// </summary>
    public partial class EventoFindOneResult
    {
        [JsonProperty("calendario")]
        public CalendarioLetivo Calendario { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de término.
        /// </summary>
        [JsonProperty("dataTermino")]
        public DateTimeOffset DataTermino { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("nome")]
        public string Nome { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma TurmaDisponibilidade por ID.
    /// </summary>
    public partial class TurmaDisponibilidadeFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeInputCreate
    {
        [JsonProperty("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma TurmaDisponibilidade.
    /// </summary>
    public partial class TurmaDisponibilidadeInputUpdate
    {
        [JsonProperty("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DataInicio { get; set; }

        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Resultados da busca a TurmaDisponibilidades.
    /// </summary>
    public partial class TurmaDisponibilidadeFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public TurmaDisponibilidadeFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma TurmaDisponibilidade.
    ///
    /// Item da busca.
    /// </summary>
    public partial class TurmaDisponibilidadeFindOneResult
    {
        [JsonProperty("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Unnamed View
    /// </summary>
    public partial class TurmaDisponibilidadeDia
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonProperty("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonProperty("turmaDisponibilidade")]
        public TurmaDisponibilidade TurmaDisponibilidade { get; set; }
    }

    /// <summary>
    /// Unnamed View
    ///
    /// Disponibilidade da turma.
    /// </summary>
    public partial class TurmaDisponibilidade
    {
        [JsonProperty("dataFim")]
        public DateTimeOffset? DataFim { get; set; }

        /// <summary>
        /// Data de início.
        /// </summary>
        [JsonProperty("dataInicio")]
        public DateTimeOffset DataInicio { get; set; }

        /// <summary>
        /// Data de Criação do Registro.
        /// </summary>
        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("dateDeleted")]
        public DateTimeOffset? DateDeleted { get; set; }

        /// <summary>
        /// Data de Atualização do Registro.
        /// </summary>
        [JsonProperty("dateUpdated")]
        public DateTimeOffset DateUpdated { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("turma")]
        public Turma Turma { get; set; }
    }

    /// <summary>
    /// Dados de entrada para encontrar uma TurmaDisponibilidadeDia por ID.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindOneInput
    {
        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a criação de uma TurmaDisponibilidadeDia.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaInputCreate
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonProperty("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonProperty("turmaDisponibilidade")]
        public TurmaDisponibilidade TurmaDisponibilidade { get; set; }
    }

    /// <summary>
    /// Dados de entrada para a atualização de uma TurmaDisponibilidadeDia.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaInputUpdate
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonProperty("diaSemanaIso", NullValueHandling = NullValueHandling.Ignore)]
        public long? DiaSemanaIso { get; set; }

        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonProperty("turmaDisponibilidade")]
        public TurmaDisponibilidade TurmaDisponibilidade { get; set; }
    }

    /// <summary>
    /// Resultados da busca a TurmaDisponibilidadeDias.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindAllResult
    {
        /// <summary>
        /// Resultados da busca atual.
        /// </summary>
        [JsonProperty("data")]
        public TurmaDisponibilidadeDiaFindOneResult[] Data { get; set; }

        /// <summary>
        /// Links da busca.
        /// </summary>
        [JsonProperty("links")]
        public PaginatedResultLinks Links { get; set; }

        /// <summary>
        /// Metadados da busca.
        /// </summary>
        [JsonProperty("meta")]
        public PaginatedResultMeta Meta { get; set; }
    }

    /// <summary>
    /// Visão FindOne de uma TurmaDisponibilidadeDia.
    ///
    /// Item da busca.
    /// </summary>
    public partial class TurmaDisponibilidadeDiaFindOneResult
    {
        /// <summary>
        /// Dia da semana.
        /// </summary>
        [JsonProperty("diaSemanaIso")]
        public long DiaSemanaIso { get; set; }

        /// <summary>
        /// ID do Registro.
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("intervaloDeTempo")]
        public IntervaloDeTempo IntervaloDeTempo { get; set; }

        [JsonProperty("turmaDisponibilidade")]
        public TurmaDisponibilidade TurmaDisponibilidade { get; set; }
    }

    public partial class PaginatedSortBy
    {
        public static PaginatedSortBy FromJson(string json) => JsonConvert.DeserializeObject<PaginatedSortBy>(json, QuickType.Converter.Settings);
    }

    public partial class PaginatedResultMetaFilter
    {
        public static PaginatedResultMetaFilter FromJson(string json) => JsonConvert.DeserializeObject<PaginatedResultMetaFilter>(json, QuickType.Converter.Settings);
    }

    public partial class PaginatedResultMeta
    {
        public static PaginatedResultMeta FromJson(string json) => JsonConvert.DeserializeObject<PaginatedResultMeta>(json, QuickType.Converter.Settings);
    }

    public partial class PaginatedResultLinks
    {
        public static PaginatedResultLinks FromJson(string json) => JsonConvert.DeserializeObject<PaginatedResultLinks>(json, QuickType.Converter.Settings);
    }

    public partial class PaginatedBaseInput
    {
        public static PaginatedBaseInput FromJson(string json) => JsonConvert.DeserializeObject<PaginatedBaseInput>(json, QuickType.Converter.Settings);
    }

    public partial class PaginatedInput
    {
        public static PaginatedInput FromJson(string json) => JsonConvert.DeserializeObject<PaginatedInput>(json, QuickType.Converter.Settings);
    }

    public partial class Search
    {
        public static Search FromJson(string json) => JsonConvert.DeserializeObject<Search>(json, QuickType.Converter.Settings);
    }

    public partial class Arquivo
    {
        public static Arquivo FromJson(string json) => JsonConvert.DeserializeObject<Arquivo>(json, QuickType.Converter.Settings);
    }

    public partial class ArquivoFindOneInput
    {
        public static ArquivoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<ArquivoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class ArquivoFindOneResult
    {
        public static ArquivoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<ArquivoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class Imagem
    {
        public static Imagem FromJson(string json) => JsonConvert.DeserializeObject<Imagem>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemFindOneInput
    {
        public static ImagemFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<ImagemFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemFindOneFromImagemArquivoResult
    {
        public static ImagemFindOneFromImagemArquivoResult FromJson(string json) => JsonConvert.DeserializeObject<ImagemFindOneFromImagemArquivoResult>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemFindOneResult
    {
        public static ImagemFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<ImagemFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemArquivo
    {
        public static ImagemArquivo FromJson(string json) => JsonConvert.DeserializeObject<ImagemArquivo>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneInput
    {
        public static ImagemArquivoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<ImagemArquivoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneFromImagemResult
    {
        public static ImagemArquivoFindOneFromImagemResult FromJson(string json) => JsonConvert.DeserializeObject<ImagemArquivoFindOneFromImagemResult>(json, QuickType.Converter.Settings);
    }

    public partial class ImagemArquivoFindOneResult
    {
        public static ImagemArquivoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<ImagemArquivoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class AuthLoginInput
    {
        public static AuthLoginInput FromJson(string json) => JsonConvert.DeserializeObject<AuthLoginInput>(json, QuickType.Converter.Settings);
    }

    public partial class AuthRefreshInput
    {
        public static AuthRefreshInput FromJson(string json) => JsonConvert.DeserializeObject<AuthRefreshInput>(json, QuickType.Converter.Settings);
    }

    public partial class AuthWhoAmIResult
    {
        public static AuthWhoAmIResult FromJson(string json) => JsonConvert.DeserializeObject<AuthWhoAmIResult>(json, QuickType.Converter.Settings);
    }

    public partial class AuthSessionCredentials
    {
        public static AuthSessionCredentials FromJson(string json) => JsonConvert.DeserializeObject<AuthSessionCredentials>(json, QuickType.Converter.Settings);
    }

    public partial class AuthSetInitialPasswordInput
    {
        public static AuthSetInitialPasswordInput FromJson(string json) => JsonConvert.DeserializeObject<AuthSetInitialPasswordInput>(json, QuickType.Converter.Settings);
    }

    public partial class Usuario
    {
        public static Usuario FromJson(string json) => JsonConvert.DeserializeObject<Usuario>(json, QuickType.Converter.Settings);
    }

    public partial class UsuarioFindOneInput
    {
        public static UsuarioFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<UsuarioFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class UsuarioFindOneResult
    {
        public static UsuarioFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<UsuarioFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class UsuarioInputCreate
    {
        public static UsuarioInputCreate FromJson(string json) => JsonConvert.DeserializeObject<UsuarioInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class UsuarioInputUpdate
    {
        public static UsuarioInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<UsuarioInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class Vinculo
    {
        public static Vinculo FromJson(string json) => JsonConvert.DeserializeObject<Vinculo>(json, QuickType.Converter.Settings);
    }

    public partial class VinculoFindOneInput
    {
        public static VinculoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<VinculoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class VinculoFindOneResult
    {
        public static VinculoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<VinculoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class VinculoUpdate
    {
        public static VinculoUpdate FromJson(string json) => JsonConvert.DeserializeObject<VinculoUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class Ambiente
    {
        public static Ambiente FromJson(string json) => JsonConvert.DeserializeObject<Ambiente>(json, QuickType.Converter.Settings);
    }

    public partial class AmbienteFindOneInput
    {
        public static AmbienteFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<AmbienteFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class AmbienteFindOneResult
    {
        public static AmbienteFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<AmbienteFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class AmbienteInputCreate
    {
        public static AmbienteInputCreate FromJson(string json) => JsonConvert.DeserializeObject<AmbienteInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class AmbienteInputUpdate
    {
        public static AmbienteInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<AmbienteInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class AmbienteFindAllResult
    {
        public static AmbienteFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<AmbienteFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Bloco
    {
        public static Bloco FromJson(string json) => JsonConvert.DeserializeObject<Bloco>(json, QuickType.Converter.Settings);
    }

    public partial class BlocoFindOneInput
    {
        public static BlocoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<BlocoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class BlocoFindOneResult
    {
        public static BlocoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<BlocoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class BlocoInputCreate
    {
        public static BlocoInputCreate FromJson(string json) => JsonConvert.DeserializeObject<BlocoInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class BlocoInputUpdate
    {
        public static BlocoInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<BlocoInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class BlocoFindAllResult
    {
        public static BlocoFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<BlocoFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Campus
    {
        public static Campus FromJson(string json) => JsonConvert.DeserializeObject<Campus>(json, QuickType.Converter.Settings);
    }

    public partial class CampusFindOneInput
    {
        public static CampusFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<CampusFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class CampusFindOneResult
    {
        public static CampusFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<CampusFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class CampusInputCreate
    {
        public static CampusInputCreate FromJson(string json) => JsonConvert.DeserializeObject<CampusInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class CampusInputUpdate
    {
        public static CampusInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<CampusInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class CampusFindAllResult
    {
        public static CampusFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<CampusFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Cidade
    {
        public static Cidade FromJson(string json) => JsonConvert.DeserializeObject<Cidade>(json, QuickType.Converter.Settings);
    }

    public partial class CidadeFindOneInput
    {
        public static CidadeFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<CidadeFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class CidadeFindOneResult
    {
        public static CidadeFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<CidadeFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class CidadeFindAllResult
    {
        public static CidadeFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<CidadeFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Endereco
    {
        public static Endereco FromJson(string json) => JsonConvert.DeserializeObject<Endereco>(json, QuickType.Converter.Settings);
    }

    public partial class EnderecoFindOneInput
    {
        public static EnderecoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<EnderecoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class EnderecoFindOneResult
    {
        public static EnderecoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<EnderecoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class EnderecoInput
    {
        public static EnderecoInput FromJson(string json) => JsonConvert.DeserializeObject<EnderecoInput>(json, QuickType.Converter.Settings);
    }

    public partial class Estado
    {
        public static Estado FromJson(string json) => JsonConvert.DeserializeObject<Estado>(json, QuickType.Converter.Settings);
    }

    public partial class EstadoFindOneInput
    {
        public static EstadoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<EstadoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class EstadoFindOneResult
    {
        public static EstadoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<EstadoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class EstadoFindAllResult
    {
        public static EstadoFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<EstadoFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Reserva
    {
        public static Reserva FromJson(string json) => JsonConvert.DeserializeObject<Reserva>(json, QuickType.Converter.Settings);
    }

    public partial class ReservaFindOneInput
    {
        public static ReservaFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<ReservaFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class ReservaFindOneResult
    {
        public static ReservaFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<ReservaFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class ReservaInputCreate
    {
        public static ReservaInputCreate FromJson(string json) => JsonConvert.DeserializeObject<ReservaInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class ReservaInputUpdate
    {
        public static ReservaInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<ReservaInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class ReservaFindAllResult
    {
        public static ReservaFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<ReservaFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Curso
    {
        public static Curso FromJson(string json) => JsonConvert.DeserializeObject<Curso>(json, QuickType.Converter.Settings);
    }

    public partial class CursoFindOneInput
    {
        public static CursoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<CursoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class CursoFindOneResult
    {
        public static CursoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<CursoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class CursoInputCreate
    {
        public static CursoInputCreate FromJson(string json) => JsonConvert.DeserializeObject<CursoInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class CursoInputUpdate
    {
        public static CursoInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<CursoInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class CursoFindAllResult
    {
        public static CursoFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<CursoFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Diario
    {
        public static Diario FromJson(string json) => JsonConvert.DeserializeObject<Diario>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioFindOneInput
    {
        public static DiarioFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<DiarioFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioFindOneResult
    {
        public static DiarioFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<DiarioFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioInputCreate
    {
        public static DiarioInputCreate FromJson(string json) => JsonConvert.DeserializeObject<DiarioInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioInputUpdate
    {
        public static DiarioInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<DiarioInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioFindAllResult
    {
        public static DiarioFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<DiarioFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioProfessor
    {
        public static DiarioProfessor FromJson(string json) => JsonConvert.DeserializeObject<DiarioProfessor>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneInput
    {
        public static DiarioProfessorFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<DiarioProfessorFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioProfessorFindOneResult
    {
        public static DiarioProfessorFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<DiarioProfessorFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioProfessorInputCreate
    {
        public static DiarioProfessorInputCreate FromJson(string json) => JsonConvert.DeserializeObject<DiarioProfessorInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioProfessorInputUpdate
    {
        public static DiarioProfessorInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<DiarioProfessorInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class DiarioProfessorFindAllResult
    {
        public static DiarioProfessorFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<DiarioProfessorFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Modalidade
    {
        public static Modalidade FromJson(string json) => JsonConvert.DeserializeObject<Modalidade>(json, QuickType.Converter.Settings);
    }

    public partial class ModalidadeFindOneInput
    {
        public static ModalidadeFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<ModalidadeFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class ModalidadeFindOneResult
    {
        public static ModalidadeFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<ModalidadeFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class ModalidadeInputCreate
    {
        public static ModalidadeInputCreate FromJson(string json) => JsonConvert.DeserializeObject<ModalidadeInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class ModalidadeInputUpdate
    {
        public static ModalidadeInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<ModalidadeInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class ModalidadeFindAllResult
    {
        public static ModalidadeFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<ModalidadeFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Disciplina
    {
        public static Disciplina FromJson(string json) => JsonConvert.DeserializeObject<Disciplina>(json, QuickType.Converter.Settings);
    }

    public partial class DisciplinaFindOneInput
    {
        public static DisciplinaFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<DisciplinaFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class DisciplinaFindOneResult
    {
        public static DisciplinaFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<DisciplinaFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class DisciplinaInputCreate
    {
        public static DisciplinaInputCreate FromJson(string json) => JsonConvert.DeserializeObject<DisciplinaInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class DisciplinaInputUpdate
    {
        public static DisciplinaInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<DisciplinaInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class DisciplinaFindAllResult
    {
        public static DisciplinaFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<DisciplinaFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Turma
    {
        public static Turma FromJson(string json) => JsonConvert.DeserializeObject<Turma>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaFindOneInput
    {
        public static TurmaFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<TurmaFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaFindOneResult
    {
        public static TurmaFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<TurmaFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaInputCreate
    {
        public static TurmaInputCreate FromJson(string json) => JsonConvert.DeserializeObject<TurmaInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaInputUpdate
    {
        public static TurmaInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<TurmaInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaFindAllResult
    {
        public static TurmaFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<TurmaFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class IntervaloDeTempo
    {
        public static IntervaloDeTempo FromJson(string json) => JsonConvert.DeserializeObject<IntervaloDeTempo>(json, QuickType.Converter.Settings);
    }

    public partial class IntervaloDeTempoFindOneResult
    {
        public static IntervaloDeTempoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<IntervaloDeTempoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class IntervaloDeTempoInput
    {
        public static IntervaloDeTempoInput FromJson(string json) => JsonConvert.DeserializeObject<IntervaloDeTempoInput>(json, QuickType.Converter.Settings);
    }

    public partial class CalendarioLetivo
    {
        public static CalendarioLetivo FromJson(string json) => JsonConvert.DeserializeObject<CalendarioLetivo>(json, QuickType.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneInput
    {
        public static CalendarioLetivoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<CalendarioLetivoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class CalendarioLetivoFindOneResult
    {
        public static CalendarioLetivoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<CalendarioLetivoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class CalendarioLetivoInputCreate
    {
        public static CalendarioLetivoInputCreate FromJson(string json) => JsonConvert.DeserializeObject<CalendarioLetivoInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class CalendarioLetivoInputUpdate
    {
        public static CalendarioLetivoInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<CalendarioLetivoInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class CalendarioLetivoFindAllResult
    {
        public static CalendarioLetivoFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<CalendarioLetivoFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class DiaCalendario
    {
        public static DiaCalendario FromJson(string json) => JsonConvert.DeserializeObject<DiaCalendario>(json, QuickType.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneInput
    {
        public static DiaCalendarioFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<DiaCalendarioFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class DiaCalendarioFindOneResult
    {
        public static DiaCalendarioFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<DiaCalendarioFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class DiaCalendarioInputCreate
    {
        public static DiaCalendarioInputCreate FromJson(string json) => JsonConvert.DeserializeObject<DiaCalendarioInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class DiaCalendarioInputUpdate
    {
        public static DiaCalendarioInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<DiaCalendarioInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class DiaCalendarioFindAllResult
    {
        public static DiaCalendarioFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<DiaCalendarioFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Etapa
    {
        public static Etapa FromJson(string json) => JsonConvert.DeserializeObject<Etapa>(json, QuickType.Converter.Settings);
    }

    public partial class EtapaFindOneInput
    {
        public static EtapaFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<EtapaFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class EtapaFindOneResult
    {
        public static EtapaFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<EtapaFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class EtapaInputCreate
    {
        public static EtapaInputCreate FromJson(string json) => JsonConvert.DeserializeObject<EtapaInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class EtapaInputUpdate
    {
        public static EtapaInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<EtapaInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class EtapaFindAllResult
    {
        public static EtapaFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<EtapaFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Aula
    {
        public static Aula FromJson(string json) => JsonConvert.DeserializeObject<Aula>(json, QuickType.Converter.Settings);
    }

    public partial class AulaFindOneInput
    {
        public static AulaFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<AulaFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class AulaFindOneResult
    {
        public static AulaFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<AulaFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class AulaInputCreate
    {
        public static AulaInputCreate FromJson(string json) => JsonConvert.DeserializeObject<AulaInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class AulaInputUpdate
    {
        public static AulaInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<AulaInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class AulaFindAllResult
    {
        public static AulaFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<AulaFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class Evento
    {
        public static Evento FromJson(string json) => JsonConvert.DeserializeObject<Evento>(json, QuickType.Converter.Settings);
    }

    public partial class EventoFindOneInput
    {
        public static EventoFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<EventoFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class EventoFindOneResult
    {
        public static EventoFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<EventoFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class EventoInputCreate
    {
        public static EventoInputCreate FromJson(string json) => JsonConvert.DeserializeObject<EventoInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class EventoInputUpdate
    {
        public static EventoInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<EventoInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class EventoFindAllResult
    {
        public static EventoFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<EventoFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidade
    {
        public static TurmaDisponibilidade FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidade>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneInput
    {
        public static TurmaDisponibilidadeFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindOneResult
    {
        public static TurmaDisponibilidadeFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeInputCreate
    {
        public static TurmaDisponibilidadeInputCreate FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeInputUpdate
    {
        public static TurmaDisponibilidadeInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeFindAllResult
    {
        public static TurmaDisponibilidadeFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeFindAllResult>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDia
    {
        public static TurmaDisponibilidadeDia FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeDia>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindOneInput
    {
        public static TurmaDisponibilidadeDiaFindOneInput FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeDiaFindOneInput>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindOneResult
    {
        public static TurmaDisponibilidadeDiaFindOneResult FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeDiaFindOneResult>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaInputCreate
    {
        public static TurmaDisponibilidadeDiaInputCreate FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeDiaInputCreate>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaInputUpdate
    {
        public static TurmaDisponibilidadeDiaInputUpdate FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeDiaInputUpdate>(json, QuickType.Converter.Settings);
    }

    public partial class TurmaDisponibilidadeDiaFindAllResult
    {
        public static TurmaDisponibilidadeDiaFindAllResult FromJson(string json) => JsonConvert.DeserializeObject<TurmaDisponibilidadeDiaFindAllResult>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this PaginatedSortBy self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this PaginatedResultMetaFilter self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this PaginatedResultMeta self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this PaginatedResultLinks self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this PaginatedBaseInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this PaginatedInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Search self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Arquivo self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ArquivoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ArquivoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Imagem self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemFindOneFromImagemArquivoResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemArquivo self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneFromImagemResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ImagemArquivoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AuthLoginInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AuthRefreshInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AuthWhoAmIResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AuthSessionCredentials self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AuthSetInitialPasswordInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Usuario self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this UsuarioFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this UsuarioFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this UsuarioInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this UsuarioInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Vinculo self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this VinculoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this VinculoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this VinculoUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Ambiente self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AmbienteFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AmbienteFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AmbienteInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AmbienteInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AmbienteFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Bloco self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this BlocoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this BlocoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this BlocoInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this BlocoInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this BlocoFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Campus self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CampusFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CampusFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CampusInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CampusInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CampusFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Cidade self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CidadeFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CidadeFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CidadeFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Endereco self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EnderecoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EnderecoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EnderecoInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Estado self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EstadoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EstadoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EstadoFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Reserva self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ReservaFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ReservaFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ReservaInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ReservaInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ReservaFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Curso self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CursoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CursoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CursoInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CursoInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CursoFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Diario self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioProfessor self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioProfessorInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioProfessorInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiarioProfessorFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Modalidade self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ModalidadeFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ModalidadeInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ModalidadeInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this ModalidadeFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Disciplina self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DisciplinaFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DisciplinaInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DisciplinaInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DisciplinaFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Turma self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this IntervaloDeTempo self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this IntervaloDeTempoInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CalendarioLetivo self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CalendarioLetivoInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CalendarioLetivoInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this CalendarioLetivoFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiaCalendario self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiaCalendarioInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiaCalendarioInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this DiaCalendarioFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Etapa self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EtapaFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EtapaFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EtapaInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EtapaInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EtapaFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Aula self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AulaFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AulaFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AulaInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AulaInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this AulaFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this Evento self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EventoFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EventoFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EventoInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EventoInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this EventoFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidade self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDia self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindOneInput self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindOneResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaInputCreate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaInputUpdate self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        public static string ToJson(this TurmaDisponibilidadeDiaFindAllResult self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
