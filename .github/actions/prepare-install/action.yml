name: "Prepare: Install"
description: "Prepares the repo by installing dependencies"

inputs:
  working-directory:
    description: "Override the working directory to run the installation in"
    required: false
    default: "."

  node-version:
    description: "The node version to setup"
    required: true
    default: "20"

  node-registry-url:
    description: "Define registry-url"
    required: false

  install-node:
    description: "Enable node.js install"
    required: false
    default: "true"

  install-dotnet:
    description: "Enable dotnet install"
    required: false
    default: "true"

runs:
  using: "composite"

  steps:
    - name: echo github.ref
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: echo ${{ github.ref }}

    - name: ".NET: install .NET Core"
      if: ${{ inputs.install-dotnet == 'true' }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
      env:
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - name: ".NET: restore tools"
      works
      if: ${{ inputs.install-dotnet == 'true' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}/integrations/dotnet
      run: dotnet tool restore

    - name: "node.js: enable corepack"
      run: corepack enable
      if: ${{ inputs.install-node == 'true' }}
      shell: bash
      env:
        HUSKY: "0"

    - name: "node.js: use ${{ inputs.node-version }}"
      if: ${{ inputs.install-node == 'true' }}
      uses: actions/setup-node@v4
      with:
        cache: "pnpm"
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.node-registry-url }}
      env:
        HUSKY: "0"

    - name: "node.js: setup wireit cache"
      uses: google/wireit@setup-github-actions-caching/v2
      if: ${{ inputs.install-node == 'true' }}

    - name: "node.js: install pnpm dependencies"
      if: ${{ inputs.install-node == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: pnpm install --frozen-lockfile
      env:
        HUSKY: "0"
