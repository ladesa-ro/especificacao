name: "Publish to the NuGet registry"

on:
  workflow_dispatch:
  push:
    tags:
      - "@ladesa-ro/especificacao-dotnet@*"
      - "@ladesa-ro/especificacao-dotnet@*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  NUGET_DIRECTORY: ${{ github.workspace}}/nuget
  NUGET_PUSH_SERVER: https://api.nuget.org/v3/index.json

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print Tag
        run: echo ${{ github.ref_name }}

      - name: Install
        uses: ./.github/actions/prepare/install
        with:
          install-node: "true"
          install-dotnet: "true"

      - name: Build
        uses: ./.github/actions/prepare/build
        with:
          integrations-dotnet-build: "true"

      - name: Pack
        shell: bash
        working-directory: ./integrations/dotnet
        run: dotnet pack --configuration Release --output ${{ env.NUGET_DIRECTORY }}

      - uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NUGET_DIRECTORY }}/*.nupkg

  publish:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/prepare/install
        with:
          install-node: "false"
          install-dotnet: "true"

      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NUGET_DIRECTORY }}

      - name: Publish NuGet packages
        shell: bash
        run: |
          pkgs=$(find '${{ env.NUGET_DIRECTORY }}' -name '*.nupkg');

          for pkg in ${pkgs[*]} ;
          do
            dotnet nuget push ${pkg} --api-key "${{ secrets.NUGET_TOKEN }}" -s ${{ env.NUGET_PUSH_SERVER }} --skip-duplicate
          done
