name: Release

on:
  push:
    branches:
      - development

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest

    permissions:
      pages: read
      issues: write
      actions: write
      statuses: write
      contents: write
      pull-requests: write
      security-events: write

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.LADESA_BOT_ID }}
          private-key: ${{ secrets.LADESA_BOT_SECRET }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Install
        uses: ./.github/actions/prepare-install
        with:
          install-node: "true"
          install-dotnet: "false"

      - name: Run changesets action
        uses: changesets/action@v1
        with:
          setupGitUser: false
          createGithubReleases: false
          title: "chore: version packages"
          commit: "chore: version packages"
          publish: pnpm run -w changeset:tag
          version: pnpm run -w changeset:version
        env:
          NPM_CONFIG_PROVENANCE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
